(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    271285,       5590]
NotebookOptionsPosition[    247337,       5194]
NotebookOutlinePosition[    247750,       5210]
CellTagsIndexPosition[    247707,       5207]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cuaderno de Pr\[AAcute]cticas", "Title",
 CellChangeTimes->{{3.9355789246389446`*^9, 3.9355789344286766`*^9}},
 TextAlignment->Center,ExpressionUUID->"e51df37f-f5ee-034e-8a31-af7675be4fa6"],

Cell["MATEM\[CapitalAAcute]TICAS DISCRETAS", "Subtitle",
 CellChangeTimes->{{3.9355789484963284`*^9, 3.9355789729962845`*^9}, 
   3.9384962521368046`*^9},
 TextAlignment->Center,ExpressionUUID->"df93aba7-5618-0746-a1fc-c738851c47e5"],

Cell["Grado en Ingenier\[IAcute]a Inform\[AAcute]tica", "Subtitle",
 CellChangeTimes->{{3.9355789785606422`*^9, 3.9355789938801403`*^9}},
 TextAlignment->Center,ExpressionUUID->"bf98b478-5705-f042-84df-7f00ff024189"],

Cell[TextData[StyleBox["CURSO 2024/25",
 FontWeight->"Bold"]], "Subtitle",
 CellChangeTimes->{{3.9355789987527676`*^9, 3.9355790110897045`*^9}},
 TextAlignment->Center,ExpressionUUID->"c349bfab-1d72-6a4d-bf4a-55793146c660"],

Cell[CellGroupData[{

Cell["Datos personales", "Section",
 CellChangeTimes->{{3.935579019412815*^9, 
  3.9355790301005898`*^9}},ExpressionUUID->"57f6aa7b-4296-a846-8b9e-\
d8497d4b2d86"],

Cell["\<\
Nombre y apellidos : Francisco Javier Mart\[IAcute]n - Lunas Escobar
DNI : 26268082
Grupo de teor\[IAcute]a : A
Grupo de pr\[AAcute]cticas : 1\
\>", "Text",
 CellChangeTimes->{{3.935579034489855*^9, 3.9355790865124397`*^9}, {
   3.9397958932722683`*^9, 3.939795894050827*^9}, 
   3.939795927109625*^9},ExpressionUUID->"7060ac4a-285c-d04a-a0b4-\
e8d0b9bd6e05"],

Cell[CellGroupData[{

Cell["Archivos", "Subsection",
 CellChangeTimes->{{3.939707749271818*^9, 
  3.939707755942774*^9}},ExpressionUUID->"0713db65-a65f-d641-bf32-\
0b127a82ad00"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"indice", "=", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Introducci\[OAcute]n\>\"", ",", "\"\<Apartado 1\>\"", ",", 
       "\"\<Apartado 2\>\"", ",", "\"\<Apartado 3\>\""}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 1: El entorno de trabajo\>\"", ",", 
       "\"\<Generalidades sobre Mathematicas\>\"", ",", 
       "\"\<Interfaz de Usuario\>\""}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 2: Aritm\[EAcute]tica B\[AAcute]sica. Variables y \
Funciones\>\"", ",", "\"\<Operaciones aritm\[EAcute]ticas elementales\>\"", 
       "\n", "\t\t\t", ",", "\"\<Tipos de datos y n\[UAcute]meros\>\"", ",", 
       "\"\<Diferentes precisiones en el c\[AAcute]lculo\>\""}], "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 3: Polinomio. C\[AAcute]lculos b\[AAcute]sicos y \
Divisibilidad\>\"", ",", "\n", "\t\t\t", 
       "\"\<Lista y Representaci\[OAcute]n y formato de una lista\>\"", ",", 
       "\"\<La funci\[OAcute]n Table\>\"", " ", ",", 
       "\"\<Vectores y matrices\>\""}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 4: Programaci\[OAcute]n en Mathematica\>\"", ",", 
       "\n", "\t\t\t", 
       "\"\<Expresiones l\[OAcute]ghicas y Representaciones \
gr\[AAcute]ficas\>\"", ",", "\"\<\[CapitalOAcute]rdenes condicionales\>\"", 
       "\n", "\t\t\t", ",", "\"\<Bucles y estructuras de control\>\""}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 5: L\[OAcute]gica proposicional 1: Conectivas y \
tablas de verdad\>\"", "\n", "\t\t\t", ",", 
       "\"\<Formas enunciativas y conectivas\>\"", ",", 
       "\"\<Tablas de verdad\>\""}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 6: L\[OAcute]gica proposicional 2: Tautolog\
\[IAcute]as, contradicciones,formas normales\n\t\t\t, conjuntos adecuados de \
conectivas, equivalencias e implicaciones l\[OAcute]gicas \n\t\t\t\ty \
argumentaciones\>\"", "\n", "\t\t\t", ",", 
       "\"\<Tautolog\[IAcute]a y contradicci\[OAcute]n / Equivalencias l\
\[OAcute]gicas e implicaciones l\[OAcute]gicas\>\"", ",", "\n", "\t\t\t", 
       "\"\<Formas normales y Argumentaciones v\[AAcute]lidas\>\"", ",", 
       "\"\<Conjuntos adecuados de conectivas\>\""}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 7: Conjuntos y aplicaciones (Partici\[OAcute]n de \
un conjunto,Aplicaciones)\>\"", "\n", "\t\t\t", ",", 
       "\"\<Operaciones con conjuntos\>\"", ",", 
       "\"\<Producto cartesiano\>\"", ",", "\"\<Partes de un conjunto\>\""}], 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cap\[IAcute]tulo 8: Relaciones binarias y conjuntos ordenados\>\"",
        ",", "\"\<Relaciones binarias\>\"", ",", "\n", "\t\t\t", 
       "\"\<Relaciones de equivalencia\>\"", ",", 
       "\"\<Relaciones de orden y Diagramas de orden o de Hasse\>\""}], 
      "}"}]}], "\n", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TextGrid", "[", 
  RowBox[{"indice", ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Spacings", "->", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9397079099436283`*^9, 3.939707909944624*^9}, {
  3.9397079719670563`*^9, 3.939708176253332*^9}, {3.9397082103889027`*^9, 
  3.9397082569076233`*^9}, {3.939708303365362*^9, 3.939708473048834*^9}, {
  3.93970850941193*^9, 3.9397085514205437`*^9}, {3.9397085834419346`*^9, 
  3.939708649601322*^9}, {3.9397086896297836`*^9, 3.939708730937351*^9}, {
  3.9397088216278267`*^9, 3.939708978732931*^9}, {3.93970901218009*^9, 
  3.9397090215011787`*^9}, {3.939709076150345*^9, 3.939709134513479*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"13694eaa-43e5-5a4f-b9db-7a9bcf4ff832"],

Cell[BoxData[
 TagBox[GridBox[{
    {Cell[
     "Introducci\[OAcute]n",ExpressionUUID->
      "52ceb6d6-67bc-5641-9a58-1b803c0a68a3"], Cell[
     "Apartado 1",ExpressionUUID->"075908de-2c4b-e042-8aba-aed2ff667424"], 
     Cell["Apartado 2",ExpressionUUID->
      "b3bbbcf3-a5de-484d-8ddb-eb1b6b8504c1"], Cell[
     "Apartado 3",ExpressionUUID->"8b840762-bf76-634c-bf0c-6b5a19f063cd"]},
    {Cell[
     "Cap\[IAcute]tulo 1: El entorno de trabajo",ExpressionUUID->
      "a9682946-69e6-a143-a2e3-f36a9614080f"], Cell[
     "Generalidades sobre Mathematicas",ExpressionUUID->
      "a33cece4-3ab4-e24d-b4f9-05ad1566c1f1"], Cell[
     "Interfaz de Usuario",ExpressionUUID->
      "c3c27691-18b8-9444-b89f-969b84f2cab4"], Cell[
     "",ExpressionUUID->"a657ca63-a38e-3e47-8402-3f39fbe7b57c"]},
    {Cell[
     "Cap\[IAcute]tulo 2: Aritm\[EAcute]tica B\[AAcute]sica. Variables y \
Funciones",ExpressionUUID->"1fd66d2f-c00d-c943-bfdd-c5df7da36e79"], Cell[
     "Operaciones aritm\[EAcute]ticas elementales",ExpressionUUID->
      "9ce12b3b-0ff2-5946-9e72-b6537c95ee83"], Cell[
     "Tipos de datos y n\[UAcute]meros",ExpressionUUID->
      "7d30f323-90c0-fc45-92e1-bd1b0c67a597"], Cell[
     "Diferentes precisiones en el c\[AAcute]lculo",ExpressionUUID->
      "8528a2e4-4768-4746-8f00-33bab58f8da9"]},
    {Cell[
     "Cap\[IAcute]tulo 3: Polinomio. C\[AAcute]lculos b\[AAcute]sicos y \
Divisibilidad",ExpressionUUID->"cea4d7e9-3b9d-d448-a5c7-2ec8a37f8d76"], Cell[
     "Lista y Representaci\[OAcute]n y formato de una lista",ExpressionUUID->
      "6020128d-b997-5a48-9c4b-f92cdd31a191"], Cell[
     "La funci\[OAcute]n Table",ExpressionUUID->
      "d6c98898-da6e-8a46-a37c-28d9dd006bf6"], Cell[
     "Vectores y matrices",ExpressionUUID->
      "628262ae-dc3d-8a4c-b72e-7dfca56c011a"]},
    {Cell[
     "Cap\[IAcute]tulo 4: Programaci\[OAcute]n en Mathematica",ExpressionUUID->
      "aaa351ef-d567-0444-9a41-456ced65c750"], Cell[
     "Expresiones l\[OAcute]ghicas y Representaciones gr\[AAcute]ficas",
      ExpressionUUID->"cfcc2e3f-56b1-bd41-a89d-d2038de9f08e"], Cell[
     "\[CapitalOAcute]rdenes condicionales",ExpressionUUID->
      "9133c795-47c9-7046-9255-994d50896748"], Cell[
     "Bucles y estructuras de control",ExpressionUUID->
      "30476778-19fb-cf4a-8e42-54dd2d93bb0e"]},
    {Cell["\<\
Cap\[IAcute]tulo 5: L\[OAcute]gica proposicional 1: Conectivas y tablas de \
verdad\
\>",ExpressionUUID->"a9f63d8a-d510-5f47-a3e6-9859abe2f9e0"], Cell[
     "Formas enunciativas y conectivas",ExpressionUUID->
      "09975182-9c90-8045-9663-f9e218b1558c"], Cell[
     "Tablas de verdad",ExpressionUUID->
      "bf756b37-fe7b-7d4c-bcd9-fcfa9aeb56b6"], Cell[
     "",ExpressionUUID->"4078ae6d-1f0e-4047-bc44-c2dbb2b35c67"]},
    {Cell["\<\
Cap\[IAcute]tulo 6: L\[OAcute]gica proposicional 2: Tautolog\[IAcute]as, \
contradicciones,formas normales
\t\t\t, conjuntos adecuados de conectivas, equivalencias e implicaciones l\
\[OAcute]gicas 
\t\t\t\ty argumentaciones\
\>",ExpressionUUID->"9f44ce62-d14b-834f-b237-8fc7d7ffb042"], Cell["\<\
Tautolog\[IAcute]a y contradicci\[OAcute]n / Equivalencias l\[OAcute]gicas e \
implicaciones l\[OAcute]gicas\
\>",ExpressionUUID->"ef89819c-29e6-8f4a-90fc-73792e99f1e2"], Cell[
     "Formas normales y Argumentaciones v\[AAcute]lidas",ExpressionUUID->
      "c7a423fa-f25c-994b-888f-4a3d7dfe12cb"], Cell[
     "Conjuntos adecuados de conectivas",ExpressionUUID->
      "4ee05e14-79b0-b64f-a221-3fda02cf665d"]},
    {Cell["\<\
Cap\[IAcute]tulo 7: Conjuntos y aplicaciones (Partici\[OAcute]n de un \
conjunto,Aplicaciones)\
\>",ExpressionUUID->"eb797fbb-11ab-2d4c-8a5f-aa7bf9ed21c6"], Cell[
     "Operaciones con conjuntos",ExpressionUUID->
      "f3262f36-9481-d348-b9de-2ada11bac490"], Cell[
     "Producto cartesiano",ExpressionUUID->
      "7a824355-7c39-8f47-b790-6affabb93a5e"], Cell[
     "Partes de un conjunto",ExpressionUUID->
      "2f3d4114-4a1c-7b4e-bec6-30517f361270"]},
    {Cell[
     "Cap\[IAcute]tulo 8: Relaciones binarias y conjuntos ordenados",
      ExpressionUUID->"766924f8-c7cd-b84e-bf97-676551883078"], Cell[
     "Relaciones binarias",ExpressionUUID->
      "a31d2b3c-e504-da49-a0e0-fbfb180f2c2d"], Cell[
     "Relaciones de equivalencia",ExpressionUUID->
      "a58a24c5-b98d-bc4f-bcd2-0c7cf67558a4"], Cell[
     "Relaciones de orden y Diagramas de orden o de Hasse",ExpressionUUID->
      "00efc43f-26af-574e-a1f6-b72a6dc52055"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{1}}}],
  "TextGrid"]], "Output",
 CellChangeTimes->{{3.9397082343886127`*^9, 3.9397083202170086`*^9}, {
   3.9397083880989647`*^9, 3.939708410661436*^9}, {3.9397084522584915`*^9, 
   3.9397084740435314`*^9}, 3.9397085333759212`*^9, 3.939708585621029*^9, {
   3.9397086252585297`*^9, 3.9397086505978737`*^9}, {3.93970872331081*^9, 
   3.939708731510994*^9}, 3.9397088505137825`*^9, 3.939708901230234*^9, 
   3.939708981040306*^9, 3.9397090235808983`*^9, 3.939709078409876*^9, {
   3.9397091113989735`*^9, 3.939709135070635*^9}, 3.9397092146949253`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"035b8ba4-7b71-7741-8146-b350ff456ef4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pr\[AAcute]ctica I", "Section",
 CellChangeTimes->{{3.9354611808521557`*^9, 
  3.935461198517415*^9}},ExpressionUUID->"ed350138-d311-1b48-b889-\
1d91da962c5b"],

Cell[CellGroupData[{

Cell["Ejercicio I . 6", "Subsection",
 CellChangeTimes->{{3.9354612019893417`*^9, 3.935461213219844*^9}, {
  3.939445003449497*^9, 
  3.9394450039767323`*^9}},ExpressionUUID->"b6f4f249-6a0a-374b-b13e-\
dbcf0f2a6a73"],

Cell[TextData[StyleBox["Texto del ejercicio 1",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9354612161331096`*^9, 
  3.9354612441616583`*^9}},ExpressionUUID->"d2bd8766-fdbe-564d-93c7-\
364a79e72096"],

Cell[TextData[StyleBox["Soluci\[OAcute]n :",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.935461267005067*^9, 
  3.935461290220048*^9}},ExpressionUUID->"b75253ab-663e-a74c-b272-\
6f700a5e3af1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2.1", "Subsection",
 CellChangeTimes->{{3.935462942924206*^9, 
  3.9354629689204288`*^9}},ExpressionUUID->"3f11f530-a1ce-0c40-9dc5-\
06f3ec52b145"],

Cell[TextData[StyleBox["Calcular con 5 y 10 cifras significativas :",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.935462976200568*^9, 
  3.9354630042598014`*^9}},ExpressionUUID->"f3c73f13-ef42-7a4e-91ea-\
9c6dbe7a9c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", ")"}], " ", "3", 
   RowBox[{"(", 
    RowBox[{"1", "+", "4"}], ")"}]}], "-", 
  RowBox[{
   SuperscriptBox["2", "2"], "5"}], "-", 
  SuperscriptBox["5", 
   RowBox[{"1", "/", "5"}]]}]], "Text",
 CellChangeTimes->{{3.9354630292530193`*^9, 
  3.93546309727791*^9}},ExpressionUUID->"cc5c93b7-01c8-a54b-9e62-\
d33da3e50363"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", 
     RowBox[{"(", 
      RowBox[{"1", "+", "4"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["2", "2"], "5"}], "-", 
    SuperscriptBox["5", 
     RowBox[{"1", "/", "5"}]]}], ",", "10"}], "]"}]], "Code",
 CellChangeTimes->{{3.935463101140335*^9, 3.9354631320606236`*^9}, {
  3.93563779651103*^9, 3.9356378315303383`*^9}, {3.9356379068230934`*^9, 
  3.9356379209959335`*^9}, {3.9356382162292385`*^9, 3.9356382270723534`*^9}, {
  3.9356397609102325`*^9, 3.9356397613586826`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"7c094e37-e6a0-d04f-b64b-837be078bff8"],

Cell[BoxData[
 RowBox[{"-", "6.3797296614612148324`10."}]], "Output",
 CellChangeTimes->{3.935463135715808*^9, 3.9356379226134453`*^9, 
  3.93563822895924*^9, 3.9356397627797375`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"4e8c5715-d932-0f43-bbca-8f3cc7093bef"]
}, Open  ]],

Cell[TextData[{
 "b) ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "94408fb4-c589-1641-baba-108171a5af15"],
 "+",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "3"], TraditionalForm]],ExpressionUUID->
  "098f8e48-4870-d447-b29f-f7e4a9e94194"],
 "+",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "5"], TraditionalForm]],ExpressionUUID->
  "17f0da48-1670-7e42-9e8b-bfd21657923f"]
}], "Text",
 CellChangeTimes->{{3.935463250090665*^9, 3.9354632512647915`*^9}, {
  3.9355791628764343`*^9, 
  3.9355792232359295`*^9}},ExpressionUUID->"5581a2a2-c662-7b45-ac1f-\
ec555aec62f2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.935579231927603*^9, 
  3.935579233187414*^9}},ExpressionUUID->"3d06eba0-d184-a148-9807-\
f8798fda21b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["1", "3"], "+", 
    FractionBox["1", "5"]}], ",", "10"}], "]"}]], "Code",
 CellChangeTimes->{{3.9355792394476185`*^9, 3.935579275315592*^9}, {
  3.9356382352085686`*^9, 3.9356382430177097`*^9}, {3.935638473034374*^9, 
  3.9356384805441895`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0d48d5d2-88a3-f74c-9fad-29e2c338643a"],

Cell[BoxData["1.03333333333333333333333333333333333333`10."], "Output",
 CellChangeTimes->{
  3.9355792768833275`*^9, 3.93563824380398*^9, {3.9356384769239616`*^9, 
   3.9356384812575245`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"3c1bc44b-0706-d640-b071-5fa8efba4528"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", ")"}], " ", 
  FractionBox[
   SqrtBox["5"], 
   RadicalBox["3", "3"]]}]], "Text",
 CellChangeTimes->{{3.9355793034969387`*^9, 3.9355793421241035`*^9}, 
   3.935579388053385*^9},ExpressionUUID->"66a1ad57-0273-0240-ac99-\
82ab082d22c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox[
    SqrtBox["5"], 
    RadicalBox["3", "3"]], ",", "10"}], "]"}]], "Code",
 CellChangeTimes->{{3.935579346071497*^9, 3.935579358788*^9}, {
  3.935638250090847*^9, 3.9356382538850822`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c6f25456-defe-9143-b230-4981ed418898"],

Cell[BoxData["1.55040294241390070157215141114242899578`10."], "Output",
 CellChangeTimes->{3.935579362297413*^9, 3.93563825471126*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"32b5f62d-09ad-3d46-bd54-caa03d377973"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", ")"}], 
   SuperscriptBox["2", "1000"]}], 
  TraditionalForm]],ExpressionUUID->"dffe44ba-f92a-4644-ac15-12288b5eadea"]], \
"Text",
 CellChangeTimes->{{3.9355801387156525`*^9, 
  3.935580158589409*^9}},ExpressionUUID->"5a8a43bb-a0db-c845-857d-\
437978deb439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SuperscriptBox["2", "1000"], ",", "10"}], "]"}]], "Code",
 CellChangeTimes->{{3.9355801621168385`*^9, 3.935580166131689*^9}, {
  3.935638367837246*^9, 3.935638373626606*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"9df8a31c-85b6-2143-9e1c-d915ca8c7e46"],

Cell[BoxData["1.07150860718626732094842504906`10.*^301"], "Output",
 CellChangeTimes->{3.9355801696072598`*^9, 3.9356383743511543`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3fa48503-3a30-ba44-aeda-f97bd9029f54"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pr\[AAcute]ctica 2", "Section",
 CellChangeTimes->{{3.9355791003871403`*^9, 3.935579106140892*^9}, {
  3.936062704886404*^9, 3.9360627055573673`*^9}, {3.9360660443917093`*^9, 
  3.936066046775674*^9}},ExpressionUUID->"b1d93e7c-2b74-a840-8578-\
ded41d5752fa"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Ejercicio", " ", "2.1"}], "Subsection",
  FontWeight->"Plain"]], "Input",
 CellChangeTimes->{{3.936066048862338*^9, 
  3.9360660630246496`*^9}},ExpressionUUID->"0b99cbfb-a2a0-fa41-83c2-\
894826e24512"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", ")"}], " ", 
  FormBox[
   SuperscriptBox["\[ExponentialE]", "2"],
   TraditionalForm]}]], "Text",
 CellChangeTimes->{{3.9360661463931484`*^9, 
  3.9360661513362827`*^9}},ExpressionUUID->"4a77fdbe-5546-b549-b755-\
7218a68327b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SuperscriptBox["E", "2"], ",", "10"}], "]"}]], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"69161fe5-740c-f14d-9184-014baebf52b2"],

Cell[BoxData["7.3890560989306502272`10."], "Output",
 CellChangeTimes->{3.9360661588405156`*^9, 3.9394453904895725`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"2560279a-6c51-1b42-a09c-bd61a24be6b3"]
}, Open  ]],

Cell["e) Ln (Cos (\[Pi]/3))", "Text",
 CellChangeTimes->{{3.9360661721969314`*^9, 
  3.9360661761143317`*^9}},ExpressionUUID->"1bff98d3-9796-a343-96b9-\
0138026e260c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Pi]", "3"], "]"}], "]"}], ",", "10"}], "]"}]], "Code",
 CellLabel->"In[2]:=",ExpressionUUID->"1971612c-65d2-6c42-a636-d1390ea843cf"],

Cell[BoxData[
 RowBox[{"-", "0.69314718055994530941723212145817656807`10."}]], "Output",
 CellChangeTimes->{3.93606622468672*^9, 3.9394453906770477`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"cd9e52fe-dcea-3248-94f0-9f93522f7724"]
}, Open  ]],

Cell[TextData[{
 "f) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     FractionBox["1", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "37f4330e-6c94-3c46-97d6-300da138ab11"],
 "-",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]],ExpressionUUID->
  "e97e9178-0c5a-9d40-b750-d55b9f5dcbea"],
 " |"
}], "Text",
 CellChangeTimes->{
  3.9360662724715786`*^9},ExpressionUUID->"5b5ea6e6-7fb7-c744-82e3-\
0dff86bab1ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     FractionBox["1", "3"], "-", 
     SqrtBox["2"]}], "]"}], ",", "10"}], "]"}]], "Code",
 CellLabel->"In[3]:=",ExpressionUUID->"c65dd124-ecfa-214a-8eb3-3fede16791f1"],

Cell[BoxData["0.58088022903976171546835539087636474524`10."], "Output",
 CellChangeTimes->{3.936066283231927*^9, 3.9394453906964455`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1c29cc6b-10c6-a945-9814-084110c115ba"]
}, Open  ]],

Cell["g) Sen(\[Pi])+Tan(\[Pi])", "Text",
 CellChangeTimes->{
  3.9360663095136237`*^9},ExpressionUUID->"7a8d1c97-2a78-b84e-b56d-\
1554e31e28bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "\[Pi]", "]"}], "+", 
    RowBox[{"Tan", "[", "\[Pi]", "]"}]}], ",", "10"}], "]"}]], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"d8f66071-1b57-084b-ba61-caebef95918e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9360663225815983`*^9, 3.939445390715208*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"65b68657-a842-be45-a060-4aeea3302de7"]
}, Open  ]],

Cell[TextData[{
 "h) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"ArcSin", "[", "0.5", "]"}], TraditionalForm]],ExpressionUUID->
  "922986a6-b6cd-ce4f-89ef-d0dd6ed68321"],
 "-",
 Cell[BoxData[
  FormBox[
   RowBox[{"ArcCos", "[", "0.5", "]"}], TraditionalForm]],ExpressionUUID->
  "8f6c9ac3-a6bf-4d44-affc-67b7e8273c99"]
}], "Text",
 CellChangeTimes->{
  3.9360663485185823`*^9},ExpressionUUID->"9f7f8179-71da-b446-b35d-\
5de86fc5047a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArcSin", "[", "0.5", "]"}], "-", 
    RowBox[{"ArcCos", "[", "0.5", "]"}]}], ",", "10"}], "]"}]], "Code",
 CellLabel->"In[5]:=",ExpressionUUID->"5c51c28b-0cb0-4e48-ba7e-5b1f319d44bb"],

Cell[BoxData[
 RowBox[{"-", "0.5235987755982989`"}]], "Output",
 CellChangeTimes->{3.936066355268531*^9, 3.939445390719185*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e2e2e39f-98d7-784b-8672-9d0e43fec34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2.3", "Subsection",
 CellChangeTimes->{{3.936066445204886*^9, 
  3.936066454369383*^9}},ExpressionUUID->"80e9eca5-6adb-d74e-9969-\
7d853a7f152e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "26268082"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", "2004"}], ";"}]}], "Code",
 CellChangeTimes->{{3.9360664899290676`*^9, 3.936066498163554*^9}, {
  3.9394453772177753`*^9, 3.939445381948105*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"29d19dc5-bb02-5d4e-9fae-a03ff4a3587b"],

Cell["a) Comprobar si x es primo", "Text",
 CellChangeTimes->{{3.936066518812581*^9, 
  3.936066538801548*^9}},ExpressionUUID->"deba6a55-27c9-484c-9b84-\
b55fac4fb22e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "x", "]"}]], "Code",
 CellChangeTimes->{{3.9360665467725277`*^9, 3.936066555364542*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"453f407f-7ab2-8b4d-8981-ba0510c2da4f"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.93606655592423*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"05f39744-f957-f749-91f6-60f3c53a871a"]
}, Open  ]],

Cell["b) Calcular el cociente y el resto de dividir x entre y", "Text",
 CellChangeTimes->{{3.9360665642695303`*^9, 
  3.936066586153533*^9}},ExpressionUUID->"822f4131-601d-024e-9810-\
c04053eca5f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quotient", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Code",
 CellChangeTimes->{{3.9360665916535225`*^9, 3.9360665992505274`*^9}, {
   3.9360668341454153`*^9, 3.9360668500504594`*^9}, {3.936109183155468*^9, 
   3.9361092173801403`*^9}, 3.936109579693983*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"ab237bb8-1fb7-ac4d-a07a-50b1a7f7f806"],

Cell[BoxData["13107"], "Output",
 CellChangeTimes->{3.9361091976099186`*^9, 3.936109227851013*^9, 
  3.9361095861514797`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"953498bb-436d-6941-bceb-22cdc3b29928"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Code",
 CellChangeTimes->{{3.936109235254896*^9, 3.9361092451788177`*^9}, 
   3.936109580949827*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"07801a90-9d53-f94b-9496-14e52c367ffb"],

Cell[BoxData["1654"], "Output",
 CellChangeTimes->{3.936109246088867*^9, 3.9361095892502785`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"a3b95397-66ea-1541-b2d7-145b9b2c03f0"]
}, Open  ]],

Cell["\<\
c) Calcular una aproximaci\[OAcute]n decimal con 20 cifras decimales de la ra\
\[IAcute]z cuadrada de x\
\>", "Text",
 CellChangeTimes->{{3.9361092901128674`*^9, 3.9361092954493866`*^9}, {
  3.936109433895281*^9, 
  3.936109474933836*^9}},ExpressionUUID->"f35bd88c-93af-ee48-afc0-\
3546a263267f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "x", "]"}], ",", "20"}], "]"}]], "Code",
 CellChangeTimes->{{3.9361095133867397`*^9, 3.9361095237031155`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"6fc4e2d5-54f7-ce45-ae61-c61ed8f3fd56"],

Cell[BoxData["5125.23970171152092623791782060941460617547`20."], "Output",
 CellChangeTimes->{3.9361095257354107`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"0557dc43-1def-704f-9a73-cbab2baf92c7"]
}, Open  ]],

Cell["d) Calcular el entero m\[AAcute]s pr\[OAcute]ximo al n\[UAcute]mero (\
\[Pi]y-\[ExponentialE])/x", "Text",
 CellChangeTimes->{{3.9361095324247856`*^9, 
  3.9361096293811398`*^9}},ExpressionUUID->"a90ff96d-5bf5-8845-aece-\
8c53a819ea3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"\[Pi]", "*", "y"}], "-", "\[ExponentialE]"}], "x"], 
  "]"}]], "Code",
 CellChangeTimes->{{3.936109667072399*^9, 3.936109730309906*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"afe1b9af-919f-bc43-8eb1-4ce4b5c63fc6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.93610971421941*^9, 3.9361097307469826`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"16552197-8985-a849-a530-235f2ab0c109"]
}, Open  ]],

Cell["\<\
e) Calcular el n\[UAcute]mero de Fibonacci del d\[IAcute]a del mes en que \
naciste\
\>", "Text",
 CellChangeTimes->{{3.9361097495854473`*^9, 
  3.9361097994211197`*^9}},ExpressionUUID->"c1b06882-40bf-bb4a-9e35-\
dea4f39e78f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "6", "]"}]], "Code",
 CellChangeTimes->{{3.9361098936420097`*^9, 3.936109899125887*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"72769357-e94d-a949-b295-afa06a3310b0"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.936109899474535*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"502adadc-4baa-064c-ab4c-b4a9c11fe62a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3.1", "Subsection",
 CellChangeTimes->{{3.9361100169871216`*^9, 
  3.9361100405562897`*^9}},ExpressionUUID->"cc59e912-c72c-4c4d-b69f-\
b50a5a99e809"],

Cell["\<\
a) Formar una lista con todos los m\[UAcute]ltiplos de 11 positivos, menores \
que los dos \[UAcute]ltimos d\[IAcute]gitos del a\[NTilde]o en que naciste \
\>", "Text",
 CellChangeTimes->{{3.9361100432734623`*^9, 
  3.93611008570084*^9}},ExpressionUUID->"16cdc1c5-d95c-d948-a2ee-\
d5d9a48d8129"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lista", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"11", ",", "2004", ",", "11"}], "]"}], ",", 
    RowBox[{
     RowBox[{"#", "<", "2004"}], " ", "&"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.936110165945547*^9, 3.9361102104402275`*^9}, {
  3.9361103307049274`*^9, 3.936110346479809*^9}, {3.936332476804325*^9, 
  3.936332486112335*^9}, {3.9365176359970436`*^9, 3.93651763691881*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"0a7c8677-f13b-a14b-8481-a26ab5394e18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "22", ",", "33", ",", "44", ",", "55", ",", "66", ",", "77", ",",
    "88", ",", "99", ",", "110", ",", "121", ",", "132", ",", "143", ",", 
   "154", ",", "165", ",", "176", ",", "187", ",", "198", ",", "209", ",", 
   "220", ",", "231", ",", "242", ",", "253", ",", "264", ",", "275", ",", 
   "286", ",", "297", ",", "308", ",", "319", ",", "330", ",", "341", ",", 
   "352", ",", "363", ",", "374", ",", "385", ",", "396", ",", "407", ",", 
   "418", ",", "429", ",", "440", ",", "451", ",", "462", ",", "473", ",", 
   "484", ",", "495", ",", "506", ",", "517", ",", "528", ",", "539", ",", 
   "550", ",", "561", ",", "572", ",", "583", ",", "594", ",", "605", ",", 
   "616", ",", "627", ",", "638", ",", "649", ",", "660", ",", "671", ",", 
   "682", ",", "693", ",", "704", ",", "715", ",", "726", ",", "737", ",", 
   "748", ",", "759", ",", "770", ",", "781", ",", "792", ",", "803", ",", 
   "814", ",", "825", ",", "836", ",", "847", ",", "858", ",", "869", ",", 
   "880", ",", "891", ",", "902", ",", "913", ",", "924", ",", "935", ",", 
   "946", ",", "957", ",", "968", ",", "979", ",", "990", ",", "1001", ",", 
   "1012", ",", "1023", ",", "1034", ",", "1045", ",", "1056", ",", "1067", 
   ",", "1078", ",", "1089", ",", "1100", ",", "1111", ",", "1122", ",", 
   "1133", ",", "1144", ",", "1155", ",", "1166", ",", "1177", ",", "1188", 
   ",", "1199", ",", "1210", ",", "1221", ",", "1232", ",", "1243", ",", 
   "1254", ",", "1265", ",", "1276", ",", "1287", ",", "1298", ",", "1309", 
   ",", "1320", ",", "1331", ",", "1342", ",", "1353", ",", "1364", ",", 
   "1375", ",", "1386", ",", "1397", ",", "1408", ",", "1419", ",", "1430", 
   ",", "1441", ",", "1452", ",", "1463", ",", "1474", ",", "1485", ",", 
   "1496", ",", "1507", ",", "1518", ",", "1529", ",", "1540", ",", "1551", 
   ",", "1562", ",", "1573", ",", "1584", ",", "1595", ",", "1606", ",", 
   "1617", ",", "1628", ",", "1639", ",", "1650", ",", "1661", ",", "1672", 
   ",", "1683", ",", "1694", ",", "1705", ",", "1716", ",", "1727", ",", 
   "1738", ",", "1749", ",", "1760", ",", "1771", ",", "1782", ",", "1793", 
   ",", "1804", ",", "1815", ",", "1826", ",", "1837", ",", "1848", ",", 
   "1859", ",", "1870", ",", "1881", ",", "1892", ",", "1903", ",", "1914", 
   ",", "1925", ",", "1936", ",", "1947", ",", "1958", ",", "1969", ",", 
   "1980", ",", "1991", ",", "2002"}], "}"}]], "Output",
 CellChangeTimes->{
  3.936110211362524*^9, {3.9361103317516136`*^9, 3.936110347175989*^9}, 
   3.936331904654125*^9, 3.936332492853569*^9, 3.936517638215164*^9, 
   3.939445573886881*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"bcb31b8e-6b87-8344-891e-2a1c37851f45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "11", ",", "2004", ",", "11"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.936331930683424*^9, 3.9363319691005497`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cb3fd620-4b17-fd4f-b64d-c84dd954e788"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "22", ",", "33", ",", "44", ",", "55", ",", "66", ",", "77", ",",
    "88", ",", "99", ",", "110", ",", "121", ",", "132", ",", "143", ",", 
   "154", ",", "165", ",", "176", ",", "187", ",", "198", ",", "209", ",", 
   "220", ",", "231", ",", "242", ",", "253", ",", "264", ",", "275", ",", 
   "286", ",", "297", ",", "308", ",", "319", ",", "330", ",", "341", ",", 
   "352", ",", "363", ",", "374", ",", "385", ",", "396", ",", "407", ",", 
   "418", ",", "429", ",", "440", ",", "451", ",", "462", ",", "473", ",", 
   "484", ",", "495", ",", "506", ",", "517", ",", "528", ",", "539", ",", 
   "550", ",", "561", ",", "572", ",", "583", ",", "594", ",", "605", ",", 
   "616", ",", "627", ",", "638", ",", "649", ",", "660", ",", "671", ",", 
   "682", ",", "693", ",", "704", ",", "715", ",", "726", ",", "737", ",", 
   "748", ",", "759", ",", "770", ",", "781", ",", "792", ",", "803", ",", 
   "814", ",", "825", ",", "836", ",", "847", ",", "858", ",", "869", ",", 
   "880", ",", "891", ",", "902", ",", "913", ",", "924", ",", "935", ",", 
   "946", ",", "957", ",", "968", ",", "979", ",", "990", ",", "1001", ",", 
   "1012", ",", "1023", ",", "1034", ",", "1045", ",", "1056", ",", "1067", 
   ",", "1078", ",", "1089", ",", "1100", ",", "1111", ",", "1122", ",", 
   "1133", ",", "1144", ",", "1155", ",", "1166", ",", "1177", ",", "1188", 
   ",", "1199", ",", "1210", ",", "1221", ",", "1232", ",", "1243", ",", 
   "1254", ",", "1265", ",", "1276", ",", "1287", ",", "1298", ",", "1309", 
   ",", "1320", ",", "1331", ",", "1342", ",", "1353", ",", "1364", ",", 
   "1375", ",", "1386", ",", "1397", ",", "1408", ",", "1419", ",", "1430", 
   ",", "1441", ",", "1452", ",", "1463", ",", "1474", ",", "1485", ",", 
   "1496", ",", "1507", ",", "1518", ",", "1529", ",", "1540", ",", "1551", 
   ",", "1562", ",", "1573", ",", "1584", ",", "1595", ",", "1606", ",", 
   "1617", ",", "1628", ",", "1639", ",", "1650", ",", "1661", ",", "1672", 
   ",", "1683", ",", "1694", ",", "1705", ",", "1716", ",", "1727", ",", 
   "1738", ",", "1749", ",", "1760", ",", "1771", ",", "1782", ",", "1793", 
   ",", "1804", ",", "1815", ",", "1826", ",", "1837", ",", "1848", ",", 
   "1859", ",", "1870", ",", "1881", ",", "1892", ",", "1903", ",", "1914", 
   ",", "1925", ",", "1936", ",", "1947", ",", "1958", ",", "1969", ",", 
   "1980", ",", "1991", ",", "2002"}], "}"}]], "Output",
 CellChangeTimes->{3.9363319849652576`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"65a9001b-d710-394a-b664-c766ecaa3f26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"11", ",", "2004", ",", "11"}], "]"}]], "Code",
 CellChangeTimes->{{3.9363341131514206`*^9, 3.9363341234529686`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"66a07071-b2f0-844d-8905-d8a06e1fd668"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "22", ",", "33", ",", "44", ",", "55", ",", "66", ",", "77", ",",
    "88", ",", "99", ",", "110", ",", "121", ",", "132", ",", "143", ",", 
   "154", ",", "165", ",", "176", ",", "187", ",", "198", ",", "209", ",", 
   "220", ",", "231", ",", "242", ",", "253", ",", "264", ",", "275", ",", 
   "286", ",", "297", ",", "308", ",", "319", ",", "330", ",", "341", ",", 
   "352", ",", "363", ",", "374", ",", "385", ",", "396", ",", "407", ",", 
   "418", ",", "429", ",", "440", ",", "451", ",", "462", ",", "473", ",", 
   "484", ",", "495", ",", "506", ",", "517", ",", "528", ",", "539", ",", 
   "550", ",", "561", ",", "572", ",", "583", ",", "594", ",", "605", ",", 
   "616", ",", "627", ",", "638", ",", "649", ",", "660", ",", "671", ",", 
   "682", ",", "693", ",", "704", ",", "715", ",", "726", ",", "737", ",", 
   "748", ",", "759", ",", "770", ",", "781", ",", "792", ",", "803", ",", 
   "814", ",", "825", ",", "836", ",", "847", ",", "858", ",", "869", ",", 
   "880", ",", "891", ",", "902", ",", "913", ",", "924", ",", "935", ",", 
   "946", ",", "957", ",", "968", ",", "979", ",", "990", ",", "1001", ",", 
   "1012", ",", "1023", ",", "1034", ",", "1045", ",", "1056", ",", "1067", 
   ",", "1078", ",", "1089", ",", "1100", ",", "1111", ",", "1122", ",", 
   "1133", ",", "1144", ",", "1155", ",", "1166", ",", "1177", ",", "1188", 
   ",", "1199", ",", "1210", ",", "1221", ",", "1232", ",", "1243", ",", 
   "1254", ",", "1265", ",", "1276", ",", "1287", ",", "1298", ",", "1309", 
   ",", "1320", ",", "1331", ",", "1342", ",", "1353", ",", "1364", ",", 
   "1375", ",", "1386", ",", "1397", ",", "1408", ",", "1419", ",", "1430", 
   ",", "1441", ",", "1452", ",", "1463", ",", "1474", ",", "1485", ",", 
   "1496", ",", "1507", ",", "1518", ",", "1529", ",", "1540", ",", "1551", 
   ",", "1562", ",", "1573", ",", "1584", ",", "1595", ",", "1606", ",", 
   "1617", ",", "1628", ",", "1639", ",", "1650", ",", "1661", ",", "1672", 
   ",", "1683", ",", "1694", ",", "1705", ",", "1716", ",", "1727", ",", 
   "1738", ",", "1749", ",", "1760", ",", "1771", ",", "1782", ",", "1793", 
   ",", "1804", ",", "1815", ",", "1826", ",", "1837", ",", "1848", ",", 
   "1859", ",", "1870", ",", "1881", ",", "1892", ",", "1903", ",", "1914", 
   ",", "1925", ",", "1936", ",", "1947", ",", "1958", ",", "1969", ",", 
   "1980", ",", "1991", ",", "2002"}], "}"}]], "Output",
 CellChangeTimes->{3.9363341244153175`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6a6ae0d9-69e7-644d-9b48-7a59f091da69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", " ", "5"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5", ",", "1"}], "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.936332064352583*^9, 3.9363321030765133`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"53db8b8f-1ddf-b342-9d5d-41e5776c6438"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "10", ",", "15", ",", "20", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.9365169146866837`*^9, 3.9394453907260838`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"98dded62-0795-0a46-a387-d956ad563e0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "10", ",", "15", ",", "20", ",", "25"}], "}"}]], "Code",
 CellChangeTimes->{3.9363321042916584`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"679d3262-2e49-1847-9a8b-fe210e8da591"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "10", ",", "15", ",", "20", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.9365169149355183`*^9, 3.9394453907464447`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"707467d4-65b5-b944-adef-3cfdc6f27a64"]
}, Open  ]],

Cell["\<\
b) Calcular, utilizando el resultado del apartado anterior y las funciones de \
la tabla 3.1., los m\[UAcute]ltiplos de 11. entre 15 y 70.\
\>", "Text",
 CellChangeTimes->{{3.9361105581954765`*^9, 
  3.936110623693144*^9}},ExpressionUUID->"33787b78-55a5-ce46-97f8-\
378dddc9ce0e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lista", ";"}], "\n", 
 RowBox[{"Select", "[", 
  RowBox[{"lista", ",", 
   RowBox[{
    RowBox[{"15", "<=", "#", "<=", "70"}], "&"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9363341897975254`*^9, 3.9363341897975254`*^9}, {
  3.9394455502885056`*^9, 3.9394455520349865`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4cd101a9-7f09-c649-8aaa-6b57165cc4cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"22", ",", "33", ",", "44", ",", "55", ",", "66"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9363341911205826`*^9, {3.9394455531517906`*^9, 3.9394455773643513`*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"3f4db39d-9ceb-b24e-b98a-245047c76c6e"]
}, Open  ]],

Cell["\<\
c) Unir a la lista obtenida en el apartado b), una nueva formada por los m\
\[UAcute]ltiplos de 5 entre 10 y 50, pero que en la tercera posici\[OAcute]n \
tenga el elemento \[Phi]. \[DownQuestion]Cu\[AAcute]ntos elementos tiene la \
lista que acabamos de conseguir? \[DownQuestion]Cu\[AAcute]les son los \
elementos que se encuentran en primera, \[UAcute]ltima y octava posici\
\[OAcute]n?\
\>", "Text",
 CellChangeTimes->{{3.9365165452416763`*^9, 3.936516738332329*^9}, {
  3.9365174054065495`*^9, 
  3.9365174055968723`*^9}},ExpressionUUID->"805c81aa-4838-9740-911b-\
ddddc2da6ef9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"multiplosDe5", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "50", ",", "5"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.936516869282358*^9, 3.9365169127035522`*^9}, {
  3.9365175277115307`*^9, 3.936517536116993*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"3731995f-58fa-d14f-956e-752096c3f1ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",",
    "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.936517536539488*^9, 3.9365176415613594`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"1f716a2b-f367-2740-ad02-8de79b38c406"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"multiplosDe5Con\[Phi]", " ", "=", " ", 
  RowBox[{"Insert", "[", 
   RowBox[{"multiplosDe5", ",", " ", "\[Phi]", ",", "3"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.9365170115819035`*^9, 3.936517129258993*^9}, 
   3.936517357306696*^9, {3.936517400542324*^9, 3.9365174151906643`*^9}, 
   3.9365175258546906`*^9, 3.9365175868720856`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"b0d00afa-3445-ba46-94ac-408c26bea7f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "15", ",", "\[Phi]", ",", "20", ",", "25", ",", "30", ",", "35", 
   ",", "40", ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.936517587192034*^9, 3.9365176438519897`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c09d12ea-f8e8-344b-a445-353668c93ac3"]
}, Open  ]],

Cell["Unir listas", "Text",
 CellChangeTimes->{{3.9365176624517784`*^9, 
  3.9365176702820873`*^9}},ExpressionUUID->"e68d634b-c292-094f-857d-\
ddc7811e15cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listaCombinada", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"lista", ",", " ", "multiplosDe5Con\[Phi]"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.936517485763628*^9, 3.936517519944088*^9}, 
   3.936517584967333*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"23c223b8-1892-354a-836e-0d4b303e6c13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "22", ",", "33", ",", "44", ",", "55", ",", "66", ",", "77", ",",
    "88", ",", "99", ",", "110", ",", "121", ",", "132", ",", "143", ",", 
   "154", ",", "165", ",", "176", ",", "187", ",", "198", ",", "209", ",", 
   "220", ",", "231", ",", "242", ",", "253", ",", "264", ",", "275", ",", 
   "286", ",", "297", ",", "308", ",", "319", ",", "330", ",", "341", ",", 
   "352", ",", "363", ",", "374", ",", "385", ",", "396", ",", "407", ",", 
   "418", ",", "429", ",", "440", ",", "451", ",", "462", ",", "473", ",", 
   "484", ",", "495", ",", "506", ",", "517", ",", "528", ",", "539", ",", 
   "550", ",", "561", ",", "572", ",", "583", ",", "594", ",", "605", ",", 
   "616", ",", "627", ",", "638", ",", "649", ",", "660", ",", "671", ",", 
   "682", ",", "693", ",", "704", ",", "715", ",", "726", ",", "737", ",", 
   "748", ",", "759", ",", "770", ",", "781", ",", "792", ",", "803", ",", 
   "814", ",", "825", ",", "836", ",", "847", ",", "858", ",", "869", ",", 
   "880", ",", "891", ",", "902", ",", "913", ",", "924", ",", "935", ",", 
   "946", ",", "957", ",", "968", ",", "979", ",", "990", ",", "1001", ",", 
   "1012", ",", "1023", ",", "1034", ",", "1045", ",", "1056", ",", "1067", 
   ",", "1078", ",", "1089", ",", "1100", ",", "1111", ",", "1122", ",", 
   "1133", ",", "1144", ",", "1155", ",", "1166", ",", "1177", ",", "1188", 
   ",", "1199", ",", "1210", ",", "1221", ",", "1232", ",", "1243", ",", 
   "1254", ",", "1265", ",", "1276", ",", "1287", ",", "1298", ",", "1309", 
   ",", "1320", ",", "1331", ",", "1342", ",", "1353", ",", "1364", ",", 
   "1375", ",", "1386", ",", "1397", ",", "1408", ",", "1419", ",", "1430", 
   ",", "1441", ",", "1452", ",", "1463", ",", "1474", ",", "1485", ",", 
   "1496", ",", "1507", ",", "1518", ",", "1529", ",", "1540", ",", "1551", 
   ",", "1562", ",", "1573", ",", "1584", ",", "1595", ",", "1606", ",", 
   "1617", ",", "1628", ",", "1639", ",", "1650", ",", "1661", ",", "1672", 
   ",", "1683", ",", "1694", ",", "1705", ",", "1716", ",", "1727", ",", 
   "1738", ",", "1749", ",", "1760", ",", "1771", ",", "1782", ",", "1793", 
   ",", "1804", ",", "1815", ",", "1826", ",", "1837", ",", "1848", ",", 
   "1859", ",", "1870", ",", "1881", ",", "1892", ",", "1903", ",", "1914", 
   ",", "1925", ",", "1936", ",", "1947", ",", "1958", ",", "1969", ",", 
   "1980", ",", "1991", ",", "2002", ",", "10", ",", "15", ",", "\[Phi]", ",",
    "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", ",", "50"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9365175116539326`*^9, 3.936517589381363*^9, 
  3.936517645915846*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"61a7cd0e-be72-8843-bddb-16da80f40852"]
}, Open  ]],

Cell["Determinar el n\[UAcute]mero total de elementos", "Text",
 CellChangeTimes->{{3.936517673296772*^9, 
  3.9365176848758907`*^9}},ExpressionUUID->"8f1d1325-6c0f-6746-8293-\
b2fa8cdca8ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "listaCombinada", "]"}]], "Code",
 CellChangeTimes->{{3.9365176894995384`*^9, 3.9365176908389397`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2cd79cd5-16ce-7641-baf9-c6273d89b8d7"],

Cell[BoxData["192"], "Output",
 CellChangeTimes->{3.9365176915907536`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"84950bb9-59ec-314a-b1f8-2c4d54732bf2"]
}, Open  ]],

Cell["Obtener la primera, octava y \[UAcute]ltima posici\[OAcute]n", "Text",
 CellChangeTimes->{{3.936517724015772*^9, 
  3.936517744162224*^9}},ExpressionUUID->"e74ccbd5-858b-b045-a852-\
b73c9c382211"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"First", "[", "listaCombinada", "]"}], ",", 
    RowBox[{"Last", "[", "listaCombinada", "]"}], ",", 
    RowBox[{"listaCombinada", "[", 
     RowBox[{"[", "8", "]"}], "]"}]}], "}"}], "\n"}]], "Code",
 CellChangeTimes->{{3.936517708870243*^9, 3.9365177088711433`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c395df8d-a5f8-a540-b122-bcbc2560c77f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "50", ",", "88"}], "}"}]], "Output",
 CellChangeTimes->{3.9365177105812263`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ec4a17ed-7bd1-294b-8e6b-6b6a504d6e7a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3.2", "Subsection",
 CellChangeTimes->{{3.9365205679489803`*^9, 
  3.9365205861711426`*^9}},ExpressionUUID->"1a6572f9-c3c1-214e-a982-\
46c894e50b32"],

Cell["\<\
Crear una tabla como en el ejercicio 3.4 . cuya primera fila est\[EAcute] \
formada por los cinco primeros m\[UAcute]ltiplos positivos del d\[IAcute]a \
del mes en que naciste, la segunda fila por sus cubos y la tercera por la \
potencia quinta de dichos n\[UAcute]meros\
\>", "Text",
 CellChangeTimes->{{3.936520641766285*^9, 3.936520657855652*^9}, {
  3.9365207347420025`*^9, 3.9365207542555523`*^9}, {3.9365208078871346`*^9, 
  3.9365209011632824`*^9}},ExpressionUUID->"14fd0de8-e214-8048-8275-\
101633c70411"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tabla", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "*", "j"}], ")"}], "^", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.936667601960088*^9, 3.9366676070880175`*^9}, {
  3.9366676619380217`*^9, 3.936667668663824*^9}, {3.939445762041973*^9, 
  3.9394457756558895`*^9}, {3.939445869211584*^9, 3.9394458892790413`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ed49bbcf-8071-7a4a-978a-3a9b50ccbc7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "9", ",", "12", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "36", ",", "81", ",", "144", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "216", ",", "729", ",", "1728", ",", "3375"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.939445776751871*^9, 3.939445891472229*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"0dfbe8b9-35aa-4841-9ea5-85a8db495a9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pr\[AAcute]ctica 3", "Section",
 CellChangeTimes->{{3.9355791003871403`*^9, 3.935579106140892*^9}, 
   3.936667861295086*^9},ExpressionUUID->"735533cc-6656-eb40-837b-\
e2a558a8d141"],

Cell["\<\
De archivo de practicas el capitulo 4. Cada ejercicio hay que hacerlo con Do, \
For y While\
\>", "Text",
 CellChangeTimes->{{3.9366681572127466`*^9, 3.936668169471485*^9}, {
  3.936670157620923*^9, 
  3.9366701734938264`*^9}},ExpressionUUID->"0e8be522-e60c-aa45-a3b8-\
d5a66df14245"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"p", "*", "i"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2006", ",", "2104", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", "17"}], "]"}], "==", "0"}], ",", 
     RowBox[{"p", "=", 
      RowBox[{"p", "*", "i"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2006", ",", "2104", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2006"}], ",", " ", 
   RowBox[{"i", "<=", " ", "2104"}], ",", " ", 
   RowBox[{"i", "=", " ", 
    RowBox[{"i", "+", "17"}]}], ",", " ", 
   RowBox[{"p", "=", 
    RowBox[{"p", "*", "i"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2006"}], ",", " ", 
   RowBox[{"i", "<=", " ", "2104"}], ",", " ", 
   RowBox[{"i", "=", " ", 
    RowBox[{"i", "+", "17"}]}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", "17"}], "]"}], "==", "0"}], ",", 
     RowBox[{"p", "=", 
      RowBox[{"p", "*", "i"}]}]}], "]"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9372729113204384`*^9, 3.9372729118856297`*^9}, 
   3.937272944217499*^9, {3.939711356690605*^9, 
   3.93971136855674*^9}},ExpressionUUID->"1d2018b9-aeda-5644-8642-\
17fec4887f28"],

Cell[BoxData["73850604651472793760"], "Output",
 CellChangeTimes->{{3.9372729291140537`*^9, 3.9372729609630527`*^9}, 
   3.937273039415863*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"78d542d5-9378-3a47-9699-4beec955b066"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Ejercicio", " ", "4.3"}], "Subsection"]], "Input",
 CellChangeTimes->{{3.9366707436905413`*^9, 
  3.936670750707791*^9}},ExpressionUUID->"367176ed-442e-c14f-bac6-\
766296c6d8eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d1d2", " ", "=", " ", "03"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"m1m2", " ", "=", " ", "06"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"anyo", " ", "=", " ", "2004"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"anyoPlusMes", " ", "=", " ", 
   RowBox[{"anyo", "*", 
    RowBox[{"(", 
     RowBox[{"m1m2", " ", "+", " ", "6"}], ")"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.9366769967710724`*^9, 3.9366769988468933`*^9}, {
  3.9394463824170837`*^9, 3.9394463897201366`*^9}, {3.9394467857106895`*^9, 
  3.9394467921703377`*^9}, {3.939446826703682*^9, 3.9394468766267548`*^9}, {
  3.93954739845887*^9, 3.939547400898775*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7d7e0542-b02b-4b48-9aa3-77d076c02e97"],

Cell["\<\
a) Construir un bucle que nos de todos los m\[UAcute]ltiplos de D1D2 \
comprendidos entre el a\[NTilde]o de tu nacimiento y el a\[NTilde]o de tu \
nacimiento multiplicado por M1M2 + 6.\
\>", "Text",
 CellChangeTimes->{{3.9366707671421866`*^9, 3.936670816502734*^9}, {
  3.9394464853518295`*^9, 
  3.939446493178461*^9}},ExpressionUUID->"7073f5c0-91fd-bb46-ad12-\
2210e46e27d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listaAMultiplosFor", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"listaAMultiplosDo", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"listaAMultiplosWhile", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "anyo"}], ",", 
    RowBox[{"i", "<=", "anyoPlusMes"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", "d1d2"}], "]"}], "==", "0"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"listaAMultiplosFor", ",", "i"}], "]"}], ";"}]}], "\n", "\t", 
     "]"}]}], "\[IndentingNewLine]", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"i", " ", "=", " ", "anyo"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "<=", " ", "anyoPlusMes"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", " ", "d1d2"}], "]"}], " ", "==", " ", "0"}], ",", 
       "\n", "    ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"listaAMultiplosWhile", ",", " ", "i"}], "]"}]}], "\n", "  ", 
      "]"}], ";", "\n", "  ", 
     RowBox[{"i", "++"}], ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", " ", "d1d2"}], "]"}], " ", "==", " ", "0"}], ",", 
      "\n", "    ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"listaAMultiplosDo", ",", " ", "i"}], "]"}]}], "\n", "  ", 
     "]"}], ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "anyo", ",", " ", "anyoPlusMes"}], "}"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
    "listaAMultiplosFor", " ", "===", " ", "listaAMultiplosWhile", " ", "===",
      " ", "listaAMultiplosDo"}], ",", "\n", "  ", 
    RowBox[{"Print", "[", "listaAMultiplosFor", "]"}]}], "\n", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9366708650790024`*^9, 3.936670866825629*^9}, {
  3.936671303937115*^9, 3.9366713079671507`*^9}, {3.9366768090323772`*^9, 
  3.9366768234491043`*^9}, {3.936677043247284*^9, 3.936677055304947*^9}, {
  3.9394469357444916`*^9, 3.9394469434876537`*^9}, {3.939447027803379*^9, 
  3.9394470437321625`*^9}, {3.939447077780817*^9, 3.939447077962599*^9}, {
  3.9394471848285484`*^9, 3.9394471864328003`*^9}, {3.939447282121767*^9, 
  3.939447284640236*^9}, {3.9394735192676563`*^9, 3.9394735200533752`*^9}, {
  3.9397092962145615`*^9, 3.93970932587097*^9}, {3.9397093865066586`*^9, 
  3.9397093901960278`*^9}, {3.939709516996023*^9, 3.939709517661911*^9}, {
  3.939709581051708*^9, 3.9397096192526817`*^9}, {3.9397096737717*^9, 
  3.939709795492384*^9}, {3.939709971965006*^9, 3.9397099903163624`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"df9d91a1-fa06-b34a-9363-9efcd478135b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2004", ",", "2007", ",", "2010", ",", "2013", ",", "2016", ",", "2019", 
   ",", "2022", ",", "2025", ",", "2028", ",", "2031", ",", "2034", ",", 
   "2037", ",", "2040", ",", "2043", ",", "2046", ",", "2049", ",", "2052", 
   ",", "2055", ",", "2058", ",", "2061", ",", "2064", ",", "2067", ",", 
   "2070", ",", "2073", ",", "2076", ",", "2079", ",", "2082", ",", "2085", 
   ",", "2088", ",", "2091", ",", "2094", ",", "2097", ",", "2100", ",", 
   "2103", ",", "2106", ",", "2109", ",", "2112", ",", "2115", ",", "2118", 
   ",", "2121", ",", "2124", ",", "2127", ",", "2130", ",", "2133", ",", 
   "2136", ",", "2139", ",", "2142", ",", "2145", ",", "2148", ",", "2151", 
   ",", "2154", ",", "2157", ",", "2160", ",", "2163", ",", "2166", ",", 
   "2169", ",", "2172", ",", "2175", ",", "2178", ",", "2181", ",", "2184", 
   ",", "2187", ",", "2190", ",", "2193", ",", "2196", ",", "2199", ",", 
   "2202", ",", "2205", ",", "2208", ",", "2211", ",", "2214", ",", "2217", 
   ",", "2220", ",", "2223", ",", "2226", ",", "2229", ",", "2232", ",", 
   "2235", ",", "2238", ",", "2241", ",", "2244", ",", "2247", ",", "2250", 
   ",", "2253", ",", "2256", ",", "2259", ",", "2262", ",", "2265", ",", 
   "2268", ",", "2271", ",", "2274", ",", "2277", ",", "2280", ",", "2283", 
   ",", "2286", ",", "2289", ",", "2292", ",", "2295", ",", "2298", ",", 
   "2301", ",", "2304", ",", "2307", ",", "2310", ",", "2313", ",", "2316", 
   ",", "2319", ",", "2322", ",", "2325", ",", "2328", ",", "2331", ",", 
   "2334", ",", "2337", ",", "2340", ",", "2343", ",", "2346", ",", "2349", 
   ",", "2352", ",", "2355", ",", "2358", ",", "2361", ",", "2364", ",", 
   "2367", ",", "2370", ",", "2373", ",", "2376", ",", "2379", ",", "2382", 
   ",", "2385", ",", "2388", ",", "2391", ",", "2394", ",", "2397", ",", 
   "2400", ",", "2403", ",", "2406", ",", "2409", ",", "2412", ",", "2415", 
   ",", "2418", ",", "2421", ",", "2424", ",", "2427", ",", "2430", ",", 
   "2433", ",", "2436", ",", "2439", ",", "2442", ",", "2445", ",", "2448", 
   ",", "2451", ",", "2454", ",", "2457", ",", "2460", ",", "2463", ",", 
   "2466", ",", "2469", ",", "2472", ",", "2475", ",", "2478", ",", "2481", 
   ",", "2484", ",", "2487", ",", "2490", ",", "2493", ",", "2496", ",", 
   "2499", ",", "2502", ",", "2505", ",", "2508", ",", "2511", ",", "2514", 
   ",", "2517", ",", "2520", ",", "2523", ",", "2526", ",", "2529", ",", 
   "2532", ",", "2535", ",", "2538", ",", "2541", ",", "2544", ",", "2547", 
   ",", "2550", ",", "2553", ",", "2556", ",", "2559", ",", "2562", ",", 
   "2565", ",", "2568", ",", "2571", ",", "2574", ",", "2577", ",", "2580", 
   ",", "2583", ",", "2586", ",", "2589", ",", "2592", ",", "2595", ",", 
   "2598", ",", "2601", ",", "2604", ",", "2607", ",", "2610", ",", "2613", 
   ",", "2616", ",", "2619", ",", "2622", ",", "2625", ",", "2628", ",", 
   "2631", ",", "2634", ",", "2637", ",", "2640", ",", "2643", ",", "2646", 
   ",", "2649", ",", "2652", ",", "2655", ",", "2658", ",", "2661", ",", 
   "2664", ",", "2667", ",", "2670", ",", "2673", ",", "2676", ",", "2679", 
   ",", "2682", ",", "2685", ",", "2688", ",", "2691", ",", "2694", ",", 
   "2697", ",", "2700", ",", "2703", ",", "2706", ",", "2709", ",", "2712", 
   ",", "2715", ",", "2718", ",", "2721", ",", "2724", ",", "2727", ",", 
   "2730", ",", "2733", ",", "2736", ",", "2739", ",", "2742", ",", "2745", 
   ",", "2748", ",", "2751", ",", "2754", ",", "2757", ",", "2760", ",", 
   "2763", ",", "2766", ",", "2769", ",", "2772", ",", "2775", ",", "2778", 
   ",", "2781", ",", "2784", ",", "2787", ",", "2790", ",", "2793", ",", 
   "2796", ",", "2799", ",", "2802", ",", "2805", ",", "2808", ",", "2811", 
   ",", "2814", ",", "2817", ",", "2820", ",", "2823", ",", "2826", ",", 
   "2829", ",", "2832", ",", "2835", ",", "2838", ",", "2841", ",", "2844", 
   ",", "2847", ",", "2850", ",", "2853", ",", "2856", ",", "2859", ",", 
   "2862", ",", "2865", ",", "2868", ",", "2871", ",", "2874", ",", "2877", 
   ",", "2880", ",", "2883", ",", "2886", ",", "2889", ",", "2892", ",", 
   "2895", ",", "2898", ",", "2901", ",", "2904", ",", "2907", ",", "2910", 
   ",", "2913", ",", "2916", ",", "2919", ",", "2922", ",", "2925", ",", 
   "2928", ",", "2931", ",", "2934", ",", "2937", ",", "2940", ",", "2943", 
   ",", "2946", ",", "2949", ",", "2952", ",", "2955", ",", "2958", ",", 
   "2961", ",", "2964", ",", "2967", ",", "2970", ",", "2973", ",", "2976", 
   ",", "2979", ",", "2982", ",", "2985", ",", "2988", ",", "2991", ",", 
   "2994", ",", "2997", ",", "3000", ",", "3003", ",", "3006", ",", "3009", 
   ",", "3012", ",", "3015", ",", "3018", ",", "3021", ",", "3024", ",", 
   "3027", ",", "3030", ",", "3033", ",", "3036", ",", "3039", ",", "3042", 
   ",", "3045", ",", "3048", ",", "3051", ",", "3054", ",", "3057", ",", 
   "3060", ",", "3063", ",", "3066", ",", "3069", ",", "3072", ",", "3075", 
   ",", "3078", ",", "3081", ",", "3084", ",", "3087", ",", "3090", ",", 
   "3093", ",", "3096", ",", "3099", ",", "3102", ",", "3105", ",", "3108", 
   ",", "3111", ",", "3114", ",", "3117", ",", "3120", ",", "3123", ",", 
   "3126", ",", "3129", ",", "3132", ",", "3135", ",", "3138", ",", "3141", 
   ",", "3144", ",", "3147", ",", "3150", ",", "3153", ",", "3156", ",", 
   "3159", ",", "3162", ",", "3165", ",", "3168", ",", "3171", ",", "3174", 
   ",", "3177", ",", "3180", ",", "3183", ",", "3186", ",", "3189", ",", 
   "3192", ",", "3195", ",", "3198", ",", "3201", ",", "3204", ",", "3207", 
   ",", "3210", ",", "3213", ",", "3216", ",", "3219", ",", "3222", ",", 
   "3225", ",", "3228", ",", "3231", ",", "3234", ",", "3237", ",", "3240", 
   ",", "3243", ",", "3246", ",", "3249", ",", "3252", ",", "3255", ",", 
   "3258", ",", "3261", ",", "3264", ",", "3267", ",", "3270", ",", "3273", 
   ",", "3276", ",", "3279", ",", "3282", ",", "3285", ",", "3288", ",", 
   "3291", ",", "3294", ",", "3297", ",", "3300", ",", "3303", ",", "3306", 
   ",", "3309", ",", "3312", ",", "3315", ",", "3318", ",", "3321", ",", 
   "3324", ",", "3327", ",", "3330", ",", "3333", ",", "3336", ",", "3339", 
   ",", "3342", ",", "3345", ",", "3348", ",", "3351", ",", "3354", ",", 
   "3357", ",", "3360", ",", "3363", ",", "3366", ",", "3369", ",", "3372", 
   ",", "3375", ",", "3378", ",", "3381", ",", "3384", ",", "3387", ",", 
   "3390", ",", "3393", ",", "3396", ",", "3399", ",", "3402", ",", "3405", 
   ",", "3408", ",", "3411", ",", "3414", ",", "3417", ",", "3420", ",", 
   "3423", ",", "3426", ",", "3429", ",", "3432", ",", "3435", ",", "3438", 
   ",", "3441", ",", "3444", ",", "3447", ",", "3450", ",", "3453", ",", 
   "3456", ",", "3459", ",", "3462", ",", "3465", ",", "3468", ",", "3471", 
   ",", "3474", ",", "3477", ",", "3480", ",", "3483", ",", "3486", ",", 
   "3489", ",", "3492", ",", "3495", ",", "3498", ",", "3501", ",", "3504", 
   ",", "3507", ",", "3510", ",", "3513", ",", "3516", ",", "3519", ",", 
   "3522", ",", "3525", ",", "3528", ",", "3531", ",", "3534", ",", "3537", 
   ",", "3540", ",", "3543", ",", "3546", ",", "3549", ",", "3552", ",", 
   "3555", ",", "3558", ",", "3561", ",", "3564", ",", "3567", ",", "3570", 
   ",", "3573", ",", "3576", ",", "3579", ",", "3582", ",", "3585", ",", 
   "3588", ",", "3591", ",", "3594", ",", "3597", ",", "3600", ",", "3603", 
   ",", "3606", ",", "3609", ",", "3612", ",", "3615", ",", "3618", ",", 
   "3621", ",", "3624", ",", "3627", ",", "3630", ",", "3633", ",", "3636", 
   ",", "3639", ",", "3642", ",", "3645", ",", "3648", ",", "3651", ",", 
   "3654", ",", "3657", ",", "3660", ",", "3663", ",", "3666", ",", "3669", 
   ",", "3672", ",", "3675", ",", "3678", ",", "3681", ",", "3684", ",", 
   "3687", ",", "3690", ",", "3693", ",", "3696", ",", "3699", ",", "3702", 
   ",", "3705", ",", "3708", ",", "3711", ",", "3714", ",", "3717", ",", 
   "3720", ",", "3723", ",", "3726", ",", "3729", ",", "3732", ",", "3735", 
   ",", "3738", ",", "3741", ",", "3744", ",", "3747", ",", "3750", ",", 
   "3753", ",", "3756", ",", "3759", ",", "3762", ",", "3765", ",", "3768", 
   ",", "3771", ",", "3774", ",", "3777", ",", "3780", ",", "3783", ",", 
   "3786", ",", "3789", ",", "3792", ",", "3795", ",", "3798", ",", "3801", 
   ",", "3804", ",", "3807", ",", "3810", ",", "3813", ",", "3816", ",", 
   "3819", ",", "3822", ",", "3825", ",", "3828", ",", "3831", ",", "3834", 
   ",", "3837", ",", "3840", ",", "3843", ",", "3846", ",", "3849", ",", 
   "3852", ",", "3855", ",", "3858", ",", "3861", ",", "3864", ",", "3867", 
   ",", "3870", ",", "3873", ",", "3876", ",", "3879", ",", "3882", ",", 
   "3885", ",", "3888", ",", "3891", ",", "3894", ",", "3897", ",", "3900", 
   ",", "3903", ",", "3906", ",", "3909", ",", "3912", ",", "3915", ",", 
   "3918", ",", "3921", ",", "3924", ",", "3927", ",", "3930", ",", "3933", 
   ",", "3936", ",", "3939", ",", "3942", ",", "3945", ",", "3948", ",", 
   "3951", ",", "3954", ",", "3957", ",", "3960", ",", "3963", ",", "3966", 
   ",", "3969", ",", "3972", ",", "3975", ",", "3978", ",", "3981", ",", 
   "3984", ",", "3987", ",", "3990", ",", "3993", ",", "3996", ",", "3999", 
   ",", "4002", ",", "4005", ",", "4008", ",", "4011", ",", "4014", ",", 
   "4017", ",", "4020", ",", "4023", ",", "4026", ",", "4029", ",", "4032", 
   ",", "4035", ",", "4038", ",", "4041", ",", "4044", ",", "4047", ",", 
   "4050", ",", "4053", ",", "4056", ",", "4059", ",", "4062", ",", "4065", 
   ",", "4068", ",", "4071", ",", "4074", ",", "4077", ",", "4080", ",", 
   "4083", ",", "4086", ",", "4089", ",", "4092", ",", "4095", ",", "4098", 
   ",", "4101", ",", "4104", ",", "4107", ",", "4110", ",", "4113", ",", 
   "4116", ",", "4119", ",", "4122", ",", "4125", ",", "4128", ",", "4131", 
   ",", "4134", ",", "4137", ",", "4140", ",", "4143", ",", "4146", ",", 
   "4149", ",", "4152", ",", "4155", ",", "4158", ",", "4161", ",", "4164", 
   ",", "4167", ",", "4170", ",", "4173", ",", "4176", ",", "4179", ",", 
   "4182", ",", "4185", ",", "4188", ",", "4191", ",", "4194", ",", "4197", 
   ",", "4200", ",", "4203", ",", "4206", ",", "4209", ",", "4212", ",", 
   "4215", ",", "4218", ",", "4221", ",", "4224", ",", "4227", ",", "4230", 
   ",", "4233", ",", "4236", ",", "4239", ",", "4242", ",", "4245", ",", 
   "4248", ",", "4251", ",", "4254", ",", "4257", ",", "4260", ",", "4263", 
   ",", "4266", ",", "4269", ",", "4272", ",", "4275", ",", "4278", ",", 
   "4281", ",", "4284", ",", "4287", ",", "4290", ",", "4293", ",", "4296", 
   ",", "4299", ",", "4302", ",", "4305", ",", "4308", ",", "4311", ",", 
   "4314", ",", "4317", ",", "4320", ",", "4323", ",", "4326", ",", "4329", 
   ",", "4332", ",", "4335", ",", "4338", ",", "4341", ",", "4344", ",", 
   "4347", ",", "4350", ",", "4353", ",", "4356", ",", "4359", ",", "4362", 
   ",", "4365", ",", "4368", ",", "4371", ",", "4374", ",", "4377", ",", 
   "4380", ",", "4383", ",", "4386", ",", "4389", ",", "4392", ",", "4395", 
   ",", "4398", ",", "4401", ",", "4404", ",", "4407", ",", "4410", ",", 
   "4413", ",", "4416", ",", "4419", ",", "4422", ",", "4425", ",", "4428", 
   ",", "4431", ",", "4434", ",", "4437", ",", "4440", ",", "4443", ",", 
   "4446", ",", "4449", ",", "4452", ",", "4455", ",", "4458", ",", "4461", 
   ",", "4464", ",", "4467", ",", "4470", ",", "4473", ",", "4476", ",", 
   "4479", ",", "4482", ",", "4485", ",", "4488", ",", "4491", ",", "4494", 
   ",", "4497", ",", "4500", ",", "4503", ",", "4506", ",", "4509", ",", 
   "4512", ",", "4515", ",", "4518", ",", "4521", ",", "4524", ",", "4527", 
   ",", "4530", ",", "4533", ",", "4536", ",", "4539", ",", "4542", ",", 
   "4545", ",", "4548", ",", "4551", ",", "4554", ",", "4557", ",", "4560", 
   ",", "4563", ",", "4566", ",", "4569", ",", "4572", ",", "4575", ",", 
   "4578", ",", "4581", ",", "4584", ",", "4587", ",", "4590", ",", "4593", 
   ",", "4596", ",", "4599", ",", "4602", ",", "4605", ",", "4608", ",", 
   "4611", ",", "4614", ",", "4617", ",", "4620", ",", "4623", ",", "4626", 
   ",", "4629", ",", "4632", ",", "4635", ",", "4638", ",", "4641", ",", 
   "4644", ",", "4647", ",", "4650", ",", "4653", ",", "4656", ",", "4659", 
   ",", "4662", ",", "4665", ",", "4668", ",", "4671", ",", "4674", ",", 
   "4677", ",", "4680", ",", "4683", ",", "4686", ",", "4689", ",", "4692", 
   ",", "4695", ",", "4698", ",", "4701", ",", "4704", ",", "4707", ",", 
   "4710", ",", "4713", ",", "4716", ",", "4719", ",", "4722", ",", "4725", 
   ",", "4728", ",", "4731", ",", "4734", ",", "4737", ",", "4740", ",", 
   "4743", ",", "4746", ",", "4749", ",", "4752", ",", "4755", ",", "4758", 
   ",", "4761", ",", "4764", ",", "4767", ",", "4770", ",", "4773", ",", 
   "4776", ",", "4779", ",", "4782", ",", "4785", ",", "4788", ",", "4791", 
   ",", "4794", ",", "4797", ",", "4800", ",", "4803", ",", "4806", ",", 
   "4809", ",", "4812", ",", "4815", ",", "4818", ",", "4821", ",", "4824", 
   ",", "4827", ",", "4830", ",", "4833", ",", "4836", ",", "4839", ",", 
   "4842", ",", "4845", ",", "4848", ",", "4851", ",", "4854", ",", "4857", 
   ",", "4860", ",", "4863", ",", "4866", ",", "4869", ",", "4872", ",", 
   "4875", ",", "4878", ",", "4881", ",", "4884", ",", "4887", ",", "4890", 
   ",", "4893", ",", "4896", ",", "4899", ",", "4902", ",", "4905", ",", 
   "4908", ",", "4911", ",", "4914", ",", "4917", ",", "4920", ",", "4923", 
   ",", "4926", ",", "4929", ",", "4932", ",", "4935", ",", "4938", ",", 
   "4941", ",", "4944", ",", "4947", ",", "4950", ",", "4953", ",", "4956", 
   ",", "4959", ",", "4962", ",", "4965", ",", "4968", ",", "4971", ",", 
   "4974", ",", "4977", ",", "4980", ",", "4983", ",", "4986", ",", "4989", 
   ",", "4992", ",", "4995", ",", "4998", ",", "5001", ",", "5004", ",", 
   "5007", ",", "5010", ",", "5013", ",", "5016", ",", "5019", ",", "5022", 
   ",", "5025", ",", "5028", ",", "5031", ",", "5034", ",", "5037", ",", 
   "5040", ",", "5043", ",", "5046", ",", "5049", ",", "5052", ",", "5055", 
   ",", "5058", ",", "5061", ",", "5064", ",", "5067", ",", "5070", ",", 
   "5073", ",", "5076", ",", "5079", ",", "5082", ",", "5085", ",", "5088", 
   ",", "5091", ",", "5094", ",", "5097", ",", "5100", ",", "5103", ",", 
   "5106", ",", "5109", ",", "5112", ",", "5115", ",", "5118", ",", "5121", 
   ",", "5124", ",", "5127", ",", "5130", ",", "5133", ",", "5136", ",", 
   "5139", ",", "5142", ",", "5145", ",", "5148", ",", "5151", ",", "5154", 
   ",", "5157", ",", "5160", ",", "5163", ",", "5166", ",", "5169", ",", 
   "5172", ",", "5175", ",", "5178", ",", "5181", ",", "5184", ",", "5187", 
   ",", "5190", ",", "5193", ",", "5196", ",", "5199", ",", "5202", ",", 
   "5205", ",", "5208", ",", "5211", ",", "5214", ",", "5217", ",", "5220", 
   ",", "5223", ",", "5226", ",", "5229", ",", "5232", ",", "5235", ",", 
   "5238", ",", "5241", ",", "5244", ",", "5247", ",", "5250", ",", "5253", 
   ",", "5256", ",", "5259", ",", "5262", ",", "5265", ",", "5268", ",", 
   "5271", ",", "5274", ",", "5277", ",", "5280", ",", "5283", ",", "5286", 
   ",", "5289", ",", "5292", ",", "5295", ",", "5298", ",", "5301", ",", 
   "5304", ",", "5307", ",", "5310", ",", "5313", ",", "5316", ",", "5319", 
   ",", "5322", ",", "5325", ",", "5328", ",", "5331", ",", "5334", ",", 
   "5337", ",", "5340", ",", "5343", ",", "5346", ",", "5349", ",", "5352", 
   ",", "5355", ",", "5358", ",", "5361", ",", "5364", ",", "5367", ",", 
   "5370", ",", "5373", ",", "5376", ",", "5379", ",", "5382", ",", "5385", 
   ",", "5388", ",", "5391", ",", "5394", ",", "5397", ",", "5400", ",", 
   "5403", ",", "5406", ",", "5409", ",", "5412", ",", "5415", ",", "5418", 
   ",", "5421", ",", "5424", ",", "5427", ",", "5430", ",", "5433", ",", 
   "5436", ",", "5439", ",", "5442", ",", "5445", ",", "5448", ",", "5451", 
   ",", "5454", ",", "5457", ",", "5460", ",", "5463", ",", "5466", ",", 
   "5469", ",", "5472", ",", "5475", ",", "5478", ",", "5481", ",", "5484", 
   ",", "5487", ",", "5490", ",", "5493", ",", "5496", ",", "5499", ",", 
   "5502", ",", "5505", ",", "5508", ",", "5511", ",", "5514", ",", "5517", 
   ",", "5520", ",", "5523", ",", "5526", ",", "5529", ",", "5532", ",", 
   "5535", ",", "5538", ",", "5541", ",", "5544", ",", "5547", ",", "5550", 
   ",", "5553", ",", "5556", ",", "5559", ",", "5562", ",", "5565", ",", 
   "5568", ",", "5571", ",", "5574", ",", "5577", ",", "5580", ",", "5583", 
   ",", "5586", ",", "5589", ",", "5592", ",", "5595", ",", "5598", ",", 
   "5601", ",", "5604", ",", "5607", ",", "5610", ",", "5613", ",", "5616", 
   ",", "5619", ",", "5622", ",", "5625", ",", "5628", ",", "5631", ",", 
   "5634", ",", "5637", ",", "5640", ",", "5643", ",", "5646", ",", "5649", 
   ",", "5652", ",", "5655", ",", "5658", ",", "5661", ",", "5664", ",", 
   "5667", ",", "5670", ",", "5673", ",", "5676", ",", "5679", ",", "5682", 
   ",", "5685", ",", "5688", ",", "5691", ",", "5694", ",", "5697", ",", 
   "5700", ",", "5703", ",", "5706", ",", "5709", ",", "5712", ",", "5715", 
   ",", "5718", ",", "5721", ",", "5724", ",", "5727", ",", "5730", ",", 
   "5733", ",", "5736", ",", "5739", ",", "5742", ",", "5745", ",", "5748", 
   ",", "5751", ",", "5754", ",", "5757", ",", "5760", ",", "5763", ",", 
   "5766", ",", "5769", ",", "5772", ",", "5775", ",", "5778", ",", "5781", 
   ",", "5784", ",", "5787", ",", "5790", ",", "5793", ",", "5796", ",", 
   "5799", ",", "5802", ",", "5805", ",", "5808", ",", "5811", ",", "5814", 
   ",", "5817", ",", "5820", ",", "5823", ",", "5826", ",", "5829", ",", 
   "5832", ",", "5835", ",", "5838", ",", "5841", ",", "5844", ",", "5847", 
   ",", "5850", ",", "5853", ",", "5856", ",", "5859", ",", "5862", ",", 
   "5865", ",", "5868", ",", "5871", ",", "5874", ",", "5877", ",", "5880", 
   ",", "5883", ",", "5886", ",", "5889", ",", "5892", ",", "5895", ",", 
   "5898", ",", "5901", ",", "5904", ",", "5907", ",", "5910", ",", "5913", 
   ",", "5916", ",", "5919", ",", "5922", ",", "5925", ",", "5928", ",", 
   "5931", ",", "5934", ",", "5937", ",", "5940", ",", "5943", ",", "5946", 
   ",", "5949", ",", "5952", ",", "5955", ",", "5958", ",", "5961", ",", 
   "5964", ",", "5967", ",", "5970", ",", "5973", ",", "5976", ",", "5979", 
   ",", "5982", ",", "5985", ",", "5988", ",", "5991", ",", "5994", ",", 
   "5997", ",", "6000", ",", "6003", ",", "6006", ",", "6009", ",", "6012", 
   ",", "6015", ",", "6018", ",", "6021", ",", "6024", ",", "6027", ",", 
   "6030", ",", "6033", ",", "6036", ",", "6039", ",", "6042", ",", "6045", 
   ",", "6048", ",", "6051", ",", "6054", ",", "6057", ",", "6060", ",", 
   "6063", ",", "6066", ",", "6069", ",", "6072", ",", "6075", ",", "6078", 
   ",", "6081", ",", "6084", ",", "6087", ",", "6090", ",", "6093", ",", 
   "6096", ",", "6099", ",", "6102", ",", "6105", ",", "6108", ",", "6111", 
   ",", "6114", ",", "6117", ",", "6120", ",", "6123", ",", "6126", ",", 
   "6129", ",", "6132", ",", "6135", ",", "6138", ",", "6141", ",", "6144", 
   ",", "6147", ",", "6150", ",", "6153", ",", "6156", ",", "6159", ",", 
   "6162", ",", "6165", ",", "6168", ",", "6171", ",", "6174", ",", "6177", 
   ",", "6180", ",", "6183", ",", "6186", ",", "6189", ",", "6192", ",", 
   "6195", ",", "6198", ",", "6201", ",", "6204", ",", "6207", ",", "6210", 
   ",", "6213", ",", "6216", ",", "6219", ",", "6222", ",", "6225", ",", 
   "6228", ",", "6231", ",", "6234", ",", "6237", ",", "6240", ",", "6243", 
   ",", "6246", ",", "6249", ",", "6252", ",", "6255", ",", "6258", ",", 
   "6261", ",", "6264", ",", "6267", ",", "6270", ",", "6273", ",", "6276", 
   ",", "6279", ",", "6282", ",", "6285", ",", "6288", ",", "6291", ",", 
   "6294", ",", "6297", ",", "6300", ",", "6303", ",", "6306", ",", "6309", 
   ",", "6312", ",", "6315", ",", "6318", ",", "6321", ",", "6324", ",", 
   "6327", ",", "6330", ",", "6333", ",", "6336", ",", "6339", ",", "6342", 
   ",", "6345", ",", "6348", ",", "6351", ",", "6354", ",", "6357", ",", 
   "6360", ",", "6363", ",", "6366", ",", "6369", ",", "6372", ",", "6375", 
   ",", "6378", ",", "6381", ",", "6384", ",", "6387", ",", "6390", ",", 
   "6393", ",", "6396", ",", "6399", ",", "6402", ",", "6405", ",", "6408", 
   ",", "6411", ",", "6414", ",", "6417", ",", "6420", ",", "6423", ",", 
   "6426", ",", "6429", ",", "6432", ",", "6435", ",", "6438", ",", "6441", 
   ",", "6444", ",", "6447", ",", "6450", ",", "6453", ",", "6456", ",", 
   "6459", ",", "6462", ",", "6465", ",", "6468", ",", "6471", ",", "6474", 
   ",", "6477", ",", "6480", ",", "6483", ",", "6486", ",", "6489", ",", 
   "6492", ",", "6495", ",", "6498", ",", "6501", ",", "6504", ",", "6507", 
   ",", "6510", ",", "6513", ",", "6516", ",", "6519", ",", "6522", ",", 
   "6525", ",", "6528", ",", "6531", ",", "6534", ",", "6537", ",", "6540", 
   ",", "6543", ",", "6546", ",", "6549", ",", "6552", ",", "6555", ",", 
   "6558", ",", "6561", ",", "6564", ",", "6567", ",", "6570", ",", "6573", 
   ",", "6576", ",", "6579", ",", "6582", ",", "6585", ",", "6588", ",", 
   "6591", ",", "6594", ",", "6597", ",", "6600", ",", "6603", ",", "6606", 
   ",", "6609", ",", "6612", ",", "6615", ",", "6618", ",", "6621", ",", 
   "6624", ",", "6627", ",", "6630", ",", "6633", ",", "6636", ",", "6639", 
   ",", "6642", ",", "6645", ",", "6648", ",", "6651", ",", "6654", ",", 
   "6657", ",", "6660", ",", "6663", ",", "6666", ",", "6669", ",", "6672", 
   ",", "6675", ",", "6678", ",", "6681", ",", "6684", ",", "6687", ",", 
   "6690", ",", "6693", ",", "6696", ",", "6699", ",", "6702", ",", "6705", 
   ",", "6708", ",", "6711", ",", "6714", ",", "6717", ",", "6720", ",", 
   "6723", ",", "6726", ",", "6729", ",", "6732", ",", "6735", ",", "6738", 
   ",", "6741", ",", "6744", ",", "6747", ",", "6750", ",", "6753", ",", 
   "6756", ",", "6759", ",", "6762", ",", "6765", ",", "6768", ",", "6771", 
   ",", "6774", ",", "6777", ",", "6780", ",", "6783", ",", "6786", ",", 
   "6789", ",", "6792", ",", "6795", ",", "6798", ",", "6801", ",", "6804", 
   ",", "6807", ",", "6810", ",", "6813", ",", "6816", ",", "6819", ",", 
   "6822", ",", "6825", ",", "6828", ",", "6831", ",", "6834", ",", "6837", 
   ",", "6840", ",", "6843", ",", "6846", ",", "6849", ",", "6852", ",", 
   "6855", ",", "6858", ",", "6861", ",", "6864", ",", "6867", ",", "6870", 
   ",", "6873", ",", "6876", ",", "6879", ",", "6882", ",", "6885", ",", 
   "6888", ",", "6891", ",", "6894", ",", "6897", ",", "6900", ",", "6903", 
   ",", "6906", ",", "6909", ",", "6912", ",", "6915", ",", "6918", ",", 
   "6921", ",", "6924", ",", "6927", ",", "6930", ",", "6933", ",", "6936", 
   ",", "6939", ",", "6942", ",", "6945", ",", "6948", ",", "6951", ",", 
   "6954", ",", "6957", ",", "6960", ",", "6963", ",", "6966", ",", "6969", 
   ",", "6972", ",", "6975", ",", "6978", ",", "6981", ",", "6984", ",", 
   "6987", ",", "6990", ",", "6993", ",", "6996", ",", "6999", ",", "7002", 
   ",", "7005", ",", "7008", ",", "7011", ",", "7014", ",", "7017", ",", 
   "7020", ",", "7023", ",", "7026", ",", "7029", ",", "7032", ",", "7035", 
   ",", "7038", ",", "7041", ",", "7044", ",", "7047", ",", "7050", ",", 
   "7053", ",", "7056", ",", "7059", ",", "7062", ",", "7065", ",", "7068", 
   ",", "7071", ",", "7074", ",", "7077", ",", "7080", ",", "7083", ",", 
   "7086", ",", "7089", ",", "7092", ",", "7095", ",", "7098", ",", "7101", 
   ",", "7104", ",", "7107", ",", "7110", ",", "7113", ",", "7116", ",", 
   "7119", ",", "7122", ",", "7125", ",", "7128", ",", "7131", ",", "7134", 
   ",", "7137", ",", "7140", ",", "7143", ",", "7146", ",", "7149", ",", 
   "7152", ",", "7155", ",", "7158", ",", "7161", ",", "7164", ",", "7167", 
   ",", "7170", ",", "7173", ",", "7176", ",", "7179", ",", "7182", ",", 
   "7185", ",", "7188", ",", "7191", ",", "7194", ",", "7197", ",", "7200", 
   ",", "7203", ",", "7206", ",", "7209", ",", "7212", ",", "7215", ",", 
   "7218", ",", "7221", ",", "7224", ",", "7227", ",", "7230", ",", "7233", 
   ",", "7236", ",", "7239", ",", "7242", ",", "7245", ",", "7248", ",", 
   "7251", ",", "7254", ",", "7257", ",", "7260", ",", "7263", ",", "7266", 
   ",", "7269", ",", "7272", ",", "7275", ",", "7278", ",", "7281", ",", 
   "7284", ",", "7287", ",", "7290", ",", "7293", ",", "7296", ",", "7299", 
   ",", "7302", ",", "7305", ",", "7308", ",", "7311", ",", "7314", ",", 
   "7317", ",", "7320", ",", "7323", ",", "7326", ",", "7329", ",", "7332", 
   ",", "7335", ",", "7338", ",", "7341", ",", "7344", ",", "7347", ",", 
   "7350", ",", "7353", ",", "7356", ",", "7359", ",", "7362", ",", "7365", 
   ",", "7368", ",", "7371", ",", "7374", ",", "7377", ",", "7380", ",", 
   "7383", ",", "7386", ",", "7389", ",", "7392", ",", "7395", ",", "7398", 
   ",", "7401", ",", "7404", ",", "7407", ",", "7410", ",", "7413", ",", 
   "7416", ",", "7419", ",", "7422", ",", "7425", ",", "7428", ",", "7431", 
   ",", "7434", ",", "7437", ",", "7440", ",", "7443", ",", "7446", ",", 
   "7449", ",", "7452", ",", "7455", ",", "7458", ",", "7461", ",", "7464", 
   ",", "7467", ",", "7470", ",", "7473", ",", "7476", ",", "7479", ",", 
   "7482", ",", "7485", ",", "7488", ",", "7491", ",", "7494", ",", "7497", 
   ",", "7500", ",", "7503", ",", "7506", ",", "7509", ",", "7512", ",", 
   "7515", ",", "7518", ",", "7521", ",", "7524", ",", "7527", ",", "7530", 
   ",", "7533", ",", "7536", ",", "7539", ",", "7542", ",", "7545", ",", 
   "7548", ",", "7551", ",", "7554", ",", "7557", ",", "7560", ",", "7563", 
   ",", "7566", ",", "7569", ",", "7572", ",", "7575", ",", "7578", ",", 
   "7581", ",", "7584", ",", "7587", ",", "7590", ",", "7593", ",", "7596", 
   ",", "7599", ",", "7602", ",", "7605", ",", "7608", ",", "7611", ",", 
   "7614", ",", "7617", ",", "7620", ",", "7623", ",", "7626", ",", "7629", 
   ",", "7632", ",", "7635", ",", "7638", ",", "7641", ",", "7644", ",", 
   "7647", ",", "7650", ",", "7653", ",", "7656", ",", "7659", ",", "7662", 
   ",", "7665", ",", "7668", ",", "7671", ",", "7674", ",", "7677", ",", 
   "7680", ",", "7683", ",", "7686", ",", "7689", ",", "7692", ",", "7695", 
   ",", "7698", ",", "7701", ",", "7704", ",", "7707", ",", "7710", ",", 
   "7713", ",", "7716", ",", "7719", ",", "7722", ",", "7725", ",", "7728", 
   ",", "7731", ",", "7734", ",", "7737", ",", "7740", ",", "7743", ",", 
   "7746", ",", "7749", ",", "7752", ",", "7755", ",", "7758", ",", "7761", 
   ",", "7764", ",", "7767", ",", "7770", ",", "7773", ",", "7776", ",", 
   "7779", ",", "7782", ",", "7785", ",", "7788", ",", "7791", ",", "7794", 
   ",", "7797", ",", "7800", ",", "7803", ",", "7806", ",", "7809", ",", 
   "7812", ",", "7815", ",", "7818", ",", "7821", ",", "7824", ",", "7827", 
   ",", "7830", ",", "7833", ",", "7836", ",", "7839", ",", "7842", ",", 
   "7845", ",", "7848", ",", "7851", ",", "7854", ",", "7857", ",", "7860", 
   ",", "7863", ",", "7866", ",", "7869", ",", "7872", ",", "7875", ",", 
   "7878", ",", "7881", ",", "7884", ",", "7887", ",", "7890", ",", "7893", 
   ",", "7896", ",", "7899", ",", "7902", ",", "7905", ",", "7908", ",", 
   "7911", ",", "7914", ",", "7917", ",", "7920", ",", "7923", ",", "7926", 
   ",", "7929", ",", "7932", ",", "7935", ",", "7938", ",", "7941", ",", 
   "7944", ",", "7947", ",", "7950", ",", "7953", ",", "7956", ",", "7959", 
   ",", "7962", ",", "7965", ",", "7968", ",", "7971", ",", "7974", ",", 
   "7977", ",", "7980", ",", "7983", ",", "7986", ",", "7989", ",", "7992", 
   ",", "7995", ",", "7998", ",", "8001", ",", "8004", ",", "8007", ",", 
   "8010", ",", "8013", ",", "8016", ",", "8019", ",", "8022", ",", "8025", 
   ",", "8028", ",", "8031", ",", "8034", ",", "8037", ",", "8040", ",", 
   "8043", ",", "8046", ",", "8049", ",", "8052", ",", "8055", ",", "8058", 
   ",", "8061", ",", "8064", ",", "8067", ",", "8070", ",", "8073", ",", 
   "8076", ",", "8079", ",", "8082", ",", "8085", ",", "8088", ",", "8091", 
   ",", "8094", ",", "8097", ",", "8100", ",", "8103", ",", "8106", ",", 
   "8109", ",", "8112", ",", "8115", ",", "8118", ",", "8121", ",", "8124", 
   ",", "8127", ",", "8130", ",", "8133", ",", "8136", ",", "8139", ",", 
   "8142", ",", "8145", ",", "8148", ",", "8151", ",", "8154", ",", "8157", 
   ",", "8160", ",", "8163", ",", "8166", ",", "8169", ",", "8172", ",", 
   "8175", ",", "8178", ",", "8181", ",", "8184", ",", "8187", ",", "8190", 
   ",", "8193", ",", "8196", ",", "8199", ",", "8202", ",", "8205", ",", 
   "8208", ",", "8211", ",", "8214", ",", "8217", ",", "8220", ",", "8223", 
   ",", "8226", ",", "8229", ",", "8232", ",", "8235", ",", "8238", ",", 
   "8241", ",", "8244", ",", "8247", ",", "8250", ",", "8253", ",", "8256", 
   ",", "8259", ",", "8262", ",", "8265", ",", "8268", ",", "8271", ",", 
   "8274", ",", "8277", ",", "8280", ",", "8283", ",", "8286", ",", "8289", 
   ",", "8292", ",", "8295", ",", "8298", ",", "8301", ",", "8304", ",", 
   "8307", ",", "8310", ",", "8313", ",", "8316", ",", "8319", ",", "8322", 
   ",", "8325", ",", "8328", ",", "8331", ",", "8334", ",", "8337", ",", 
   "8340", ",", "8343", ",", "8346", ",", "8349", ",", "8352", ",", "8355", 
   ",", "8358", ",", "8361", ",", "8364", ",", "8367", ",", "8370", ",", 
   "8373", ",", "8376", ",", "8379", ",", "8382", ",", "8385", ",", "8388", 
   ",", "8391", ",", "8394", ",", "8397", ",", "8400", ",", "8403", ",", 
   "8406", ",", "8409", ",", "8412", ",", "8415", ",", "8418", ",", "8421", 
   ",", "8424", ",", "8427", ",", "8430", ",", "8433", ",", "8436", ",", 
   "8439", ",", "8442", ",", "8445", ",", "8448", ",", "8451", ",", "8454", 
   ",", "8457", ",", "8460", ",", "8463", ",", "8466", ",", "8469", ",", 
   "8472", ",", "8475", ",", "8478", ",", "8481", ",", "8484", ",", "8487", 
   ",", "8490", ",", "8493", ",", "8496", ",", "8499", ",", "8502", ",", 
   "8505", ",", "8508", ",", "8511", ",", "8514", ",", "8517", ",", "8520", 
   ",", "8523", ",", "8526", ",", "8529", ",", "8532", ",", "8535", ",", 
   "8538", ",", "8541", ",", "8544", ",", "8547", ",", "8550", ",", "8553", 
   ",", "8556", ",", "8559", ",", "8562", ",", "8565", ",", "8568", ",", 
   "8571", ",", "8574", ",", "8577", ",", "8580", ",", "8583", ",", "8586", 
   ",", "8589", ",", "8592", ",", "8595", ",", "8598", ",", "8601", ",", 
   "8604", ",", "8607", ",", "8610", ",", "8613", ",", "8616", ",", "8619", 
   ",", "8622", ",", "8625", ",", "8628", ",", "8631", ",", "8634", ",", 
   "8637", ",", "8640", ",", "8643", ",", "8646", ",", "8649", ",", "8652", 
   ",", "8655", ",", "8658", ",", "8661", ",", "8664", ",", "8667", ",", 
   "8670", ",", "8673", ",", "8676", ",", "8679", ",", "8682", ",", "8685", 
   ",", "8688", ",", "8691", ",", "8694", ",", "8697", ",", "8700", ",", 
   "8703", ",", "8706", ",", "8709", ",", "8712", ",", "8715", ",", "8718", 
   ",", "8721", ",", "8724", ",", "8727", ",", "8730", ",", "8733", ",", 
   "8736", ",", "8739", ",", "8742", ",", "8745", ",", "8748", ",", "8751", 
   ",", "8754", ",", "8757", ",", "8760", ",", "8763", ",", "8766", ",", 
   "8769", ",", "8772", ",", "8775", ",", "8778", ",", "8781", ",", "8784", 
   ",", "8787", ",", "8790", ",", "8793", ",", "8796", ",", "8799", ",", 
   "8802", ",", "8805", ",", "8808", ",", "8811", ",", "8814", ",", "8817", 
   ",", "8820", ",", "8823", ",", "8826", ",", "8829", ",", "8832", ",", 
   "8835", ",", "8838", ",", "8841", ",", "8844", ",", "8847", ",", "8850", 
   ",", "8853", ",", "8856", ",", "8859", ",", "8862", ",", "8865", ",", 
   "8868", ",", "8871", ",", "8874", ",", "8877", ",", "8880", ",", "8883", 
   ",", "8886", ",", "8889", ",", "8892", ",", "8895", ",", "8898", ",", 
   "8901", ",", "8904", ",", "8907", ",", "8910", ",", "8913", ",", "8916", 
   ",", "8919", ",", "8922", ",", "8925", ",", "8928", ",", "8931", ",", 
   "8934", ",", "8937", ",", "8940", ",", "8943", ",", "8946", ",", "8949", 
   ",", "8952", ",", "8955", ",", "8958", ",", "8961", ",", "8964", ",", 
   "8967", ",", "8970", ",", "8973", ",", "8976", ",", "8979", ",", "8982", 
   ",", "8985", ",", "8988", ",", "8991", ",", "8994", ",", "8997", ",", 
   "9000", ",", "9003", ",", "9006", ",", "9009", ",", "9012", ",", "9015", 
   ",", "9018", ",", "9021", ",", "9024", ",", "9027", ",", "9030", ",", 
   "9033", ",", "9036", ",", "9039", ",", "9042", ",", "9045", ",", "9048", 
   ",", "9051", ",", "9054", ",", "9057", ",", "9060", ",", "9063", ",", 
   "9066", ",", "9069", ",", "9072", ",", "9075", ",", "9078", ",", "9081", 
   ",", "9084", ",", "9087", ",", "9090", ",", "9093", ",", "9096", ",", 
   "9099", ",", "9102", ",", "9105", ",", "9108", ",", "9111", ",", "9114", 
   ",", "9117", ",", "9120", ",", "9123", ",", "9126", ",", "9129", ",", 
   "9132", ",", "9135", ",", "9138", ",", "9141", ",", "9144", ",", "9147", 
   ",", "9150", ",", "9153", ",", "9156", ",", "9159", ",", "9162", ",", 
   "9165", ",", "9168", ",", "9171", ",", "9174", ",", "9177", ",", "9180", 
   ",", "9183", ",", "9186", ",", "9189", ",", "9192", ",", "9195", ",", 
   "9198", ",", "9201", ",", "9204", ",", "9207", ",", "9210", ",", "9213", 
   ",", "9216", ",", "9219", ",", "9222", ",", "9225", ",", "9228", ",", 
   "9231", ",", "9234", ",", "9237", ",", "9240", ",", "9243", ",", "9246", 
   ",", "9249", ",", "9252", ",", "9255", ",", "9258", ",", "9261", ",", 
   "9264", ",", "9267", ",", "9270", ",", "9273", ",", "9276", ",", "9279", 
   ",", "9282", ",", "9285", ",", "9288", ",", "9291", ",", "9294", ",", 
   "9297", ",", "9300", ",", "9303", ",", "9306", ",", "9309", ",", "9312", 
   ",", "9315", ",", "9318", ",", "9321", ",", "9324", ",", "9327", ",", 
   "9330", ",", "9333", ",", "9336", ",", "9339", ",", "9342", ",", "9345", 
   ",", "9348", ",", "9351", ",", "9354", ",", "9357", ",", "9360", ",", 
   "9363", ",", "9366", ",", "9369", ",", "9372", ",", "9375", ",", "9378", 
   ",", "9381", ",", "9384", ",", "9387", ",", "9390", ",", "9393", ",", 
   "9396", ",", "9399", ",", "9402", ",", "9405", ",", "9408", ",", "9411", 
   ",", "9414", ",", "9417", ",", "9420", ",", "9423", ",", "9426", ",", 
   "9429", ",", "9432", ",", "9435", ",", "9438", ",", "9441", ",", "9444", 
   ",", "9447", ",", "9450", ",", "9453", ",", "9456", ",", "9459", ",", 
   "9462", ",", "9465", ",", "9468", ",", "9471", ",", "9474", ",", "9477", 
   ",", "9480", ",", "9483", ",", "9486", ",", "9489", ",", "9492", ",", 
   "9495", ",", "9498", ",", "9501", ",", "9504", ",", "9507", ",", "9510", 
   ",", "9513", ",", "9516", ",", "9519", ",", "9522", ",", "9525", ",", 
   "9528", ",", "9531", ",", "9534", ",", "9537", ",", "9540", ",", "9543", 
   ",", "9546", ",", "9549", ",", "9552", ",", "9555", ",", "9558", ",", 
   "9561", ",", "9564", ",", "9567", ",", "9570", ",", "9573", ",", "9576", 
   ",", "9579", ",", "9582", ",", "9585", ",", "9588", ",", "9591", ",", 
   "9594", ",", "9597", ",", "9600", ",", "9603", ",", "9606", ",", "9609", 
   ",", "9612", ",", "9615", ",", "9618", ",", "9621", ",", "9624", ",", 
   "9627", ",", "9630", ",", "9633", ",", "9636", ",", "9639", ",", "9642", 
   ",", "9645", ",", "9648", ",", "9651", ",", "9654", ",", "9657", ",", 
   "9660", ",", "9663", ",", "9666", ",", "9669", ",", "9672", ",", "9675", 
   ",", "9678", ",", "9681", ",", "9684", ",", "9687", ",", "9690", ",", 
   "9693", ",", "9696", ",", "9699", ",", "9702", ",", "9705", ",", "9708", 
   ",", "9711", ",", "9714", ",", "9717", ",", "9720", ",", "9723", ",", 
   "9726", ",", "9729", ",", "9732", ",", "9735", ",", "9738", ",", "9741", 
   ",", "9744", ",", "9747", ",", "9750", ",", "9753", ",", "9756", ",", 
   "9759", ",", "9762", ",", "9765", ",", "9768", ",", "9771", ",", "9774", 
   ",", "9777", ",", "9780", ",", "9783", ",", "9786", ",", "9789", ",", 
   "9792", ",", "9795", ",", "9798", ",", "9801", ",", "9804", ",", "9807", 
   ",", "9810", ",", "9813", ",", "9816", ",", "9819", ",", "9822", ",", 
   "9825", ",", "9828", ",", "9831", ",", "9834", ",", "9837", ",", "9840", 
   ",", "9843", ",", "9846", ",", "9849", ",", "9852", ",", "9855", ",", 
   "9858", ",", "9861", ",", "9864", ",", "9867", ",", "9870", ",", "9873", 
   ",", "9876", ",", "9879", ",", "9882", ",", "9885", ",", "9888", ",", 
   "9891", ",", "9894", ",", "9897", ",", "9900", ",", "9903", ",", "9906", 
   ",", "9909", ",", "9912", ",", "9915", ",", "9918", ",", "9921", ",", 
   "9924", ",", "9927", ",", "9930", ",", "9933", ",", "9936", ",", "9939", 
   ",", "9942", ",", "9945", ",", "9948", ",", "9951", ",", "9954", ",", 
   "9957", ",", "9960", ",", "9963", ",", "9966", ",", "9969", ",", "9972", 
   ",", "9975", ",", "9978", ",", "9981", ",", "9984", ",", "9987", ",", 
   "9990", ",", "9993", ",", "9996", ",", "9999", ",", "10002", ",", "10005", 
   ",", "10008", ",", "10011", ",", "10014", ",", "10017", ",", "10020", ",", 
   "10023", ",", "10026", ",", "10029", ",", "10032", ",", "10035", ",", 
   "10038", ",", "10041", ",", "10044", ",", "10047", ",", "10050", ",", 
   "10053", ",", "10056", ",", "10059", ",", "10062", ",", "10065", ",", 
   "10068", ",", "10071", ",", "10074", ",", "10077", ",", "10080", ",", 
   "10083", ",", "10086", ",", "10089", ",", "10092", ",", "10095", ",", 
   "10098", ",", "10101", ",", "10104", ",", "10107", ",", "10110", ",", 
   "10113", ",", "10116", ",", "10119", ",", "10122", ",", "10125", ",", 
   "10128", ",", "10131", ",", "10134", ",", "10137", ",", "10140", ",", 
   "10143", ",", "10146", ",", "10149", ",", "10152", ",", "10155", ",", 
   "10158", ",", "10161", ",", "10164", ",", "10167", ",", "10170", ",", 
   "10173", ",", "10176", ",", "10179", ",", "10182", ",", "10185", ",", 
   "10188", ",", "10191", ",", "10194", ",", "10197", ",", "10200", ",", 
   "10203", ",", "10206", ",", "10209", ",", "10212", ",", "10215", ",", 
   "10218", ",", "10221", ",", "10224", ",", "10227", ",", "10230", ",", 
   "10233", ",", "10236", ",", "10239", ",", "10242", ",", "10245", ",", 
   "10248", ",", "10251", ",", "10254", ",", "10257", ",", "10260", ",", 
   "10263", ",", "10266", ",", "10269", ",", "10272", ",", "10275", ",", 
   "10278", ",", "10281", ",", "10284", ",", "10287", ",", "10290", ",", 
   "10293", ",", "10296", ",", "10299", ",", "10302", ",", "10305", ",", 
   "10308", ",", "10311", ",", "10314", ",", "10317", ",", "10320", ",", 
   "10323", ",", "10326", ",", "10329", ",", "10332", ",", "10335", ",", 
   "10338", ",", "10341", ",", "10344", ",", "10347", ",", "10350", ",", 
   "10353", ",", "10356", ",", "10359", ",", "10362", ",", "10365", ",", 
   "10368", ",", "10371", ",", "10374", ",", "10377", ",", "10380", ",", 
   "10383", ",", "10386", ",", "10389", ",", "10392", ",", "10395", ",", 
   "10398", ",", "10401", ",", "10404", ",", "10407", ",", "10410", ",", 
   "10413", ",", "10416", ",", "10419", ",", "10422", ",", "10425", ",", 
   "10428", ",", "10431", ",", "10434", ",", "10437", ",", "10440", ",", 
   "10443", ",", "10446", ",", "10449", ",", "10452", ",", "10455", ",", 
   "10458", ",", "10461", ",", "10464", ",", "10467", ",", "10470", ",", 
   "10473", ",", "10476", ",", "10479", ",", "10482", ",", "10485", ",", 
   "10488", ",", "10491", ",", "10494", ",", "10497", ",", "10500", ",", 
   "10503", ",", "10506", ",", "10509", ",", "10512", ",", "10515", ",", 
   "10518", ",", "10521", ",", "10524", ",", "10527", ",", "10530", ",", 
   "10533", ",", "10536", ",", "10539", ",", "10542", ",", "10545", ",", 
   "10548", ",", "10551", ",", "10554", ",", "10557", ",", "10560", ",", 
   "10563", ",", "10566", ",", "10569", ",", "10572", ",", "10575", ",", 
   "10578", ",", "10581", ",", "10584", ",", "10587", ",", "10590", ",", 
   "10593", ",", "10596", ",", "10599", ",", "10602", ",", "10605", ",", 
   "10608", ",", "10611", ",", "10614", ",", "10617", ",", "10620", ",", 
   "10623", ",", "10626", ",", "10629", ",", "10632", ",", "10635", ",", 
   "10638", ",", "10641", ",", "10644", ",", "10647", ",", "10650", ",", 
   "10653", ",", "10656", ",", "10659", ",", "10662", ",", "10665", ",", 
   "10668", ",", "10671", ",", "10674", ",", "10677", ",", "10680", ",", 
   "10683", ",", "10686", ",", "10689", ",", "10692", ",", "10695", ",", 
   "10698", ",", "10701", ",", "10704", ",", "10707", ",", "10710", ",", 
   "10713", ",", "10716", ",", "10719", ",", "10722", ",", "10725", ",", 
   "10728", ",", "10731", ",", "10734", ",", "10737", ",", "10740", ",", 
   "10743", ",", "10746", ",", "10749", ",", "10752", ",", "10755", ",", 
   "10758", ",", "10761", ",", "10764", ",", "10767", ",", "10770", ",", 
   "10773", ",", "10776", ",", "10779", ",", "10782", ",", "10785", ",", 
   "10788", ",", "10791", ",", "10794", ",", "10797", ",", "10800", ",", 
   "10803", ",", "10806", ",", "10809", ",", "10812", ",", "10815", ",", 
   "10818", ",", "10821", ",", "10824", ",", "10827", ",", "10830", ",", 
   "10833", ",", "10836", ",", "10839", ",", "10842", ",", "10845", ",", 
   "10848", ",", "10851", ",", "10854", ",", "10857", ",", "10860", ",", 
   "10863", ",", "10866", ",", "10869", ",", "10872", ",", "10875", ",", 
   "10878", ",", "10881", ",", "10884", ",", "10887", ",", "10890", ",", 
   "10893", ",", "10896", ",", "10899", ",", "10902", ",", "10905", ",", 
   "10908", ",", "10911", ",", "10914", ",", "10917", ",", "10920", ",", 
   "10923", ",", "10926", ",", "10929", ",", "10932", ",", "10935", ",", 
   "10938", ",", "10941", ",", "10944", ",", "10947", ",", "10950", ",", 
   "10953", ",", "10956", ",", "10959", ",", "10962", ",", "10965", ",", 
   "10968", ",", "10971", ",", "10974", ",", "10977", ",", "10980", ",", 
   "10983", ",", "10986", ",", "10989", ",", "10992", ",", "10995", ",", 
   "10998", ",", "11001", ",", "11004", ",", "11007", ",", "11010", ",", 
   "11013", ",", "11016", ",", "11019", ",", "11022", ",", "11025", ",", 
   "11028", ",", "11031", ",", "11034", ",", "11037", ",", "11040", ",", 
   "11043", ",", "11046", ",", "11049", ",", "11052", ",", "11055", ",", 
   "11058", ",", "11061", ",", "11064", ",", "11067", ",", "11070", ",", 
   "11073", ",", "11076", ",", "11079", ",", "11082", ",", "11085", ",", 
   "11088", ",", "11091", ",", "11094", ",", "11097", ",", "11100", ",", 
   "11103", ",", "11106", ",", "11109", ",", "11112", ",", "11115", ",", 
   "11118", ",", "11121", ",", "11124", ",", "11127", ",", "11130", ",", 
   "11133", ",", "11136", ",", "11139", ",", "11142", ",", "11145", ",", 
   "11148", ",", "11151", ",", "11154", ",", "11157", ",", "11160", ",", 
   "11163", ",", "11166", ",", "11169", ",", "11172", ",", "11175", ",", 
   "11178", ",", "11181", ",", "11184", ",", "11187", ",", "11190", ",", 
   "11193", ",", "11196", ",", "11199", ",", "11202", ",", "11205", ",", 
   "11208", ",", "11211", ",", "11214", ",", "11217", ",", "11220", ",", 
   "11223", ",", "11226", ",", "11229", ",", "11232", ",", "11235", ",", 
   "11238", ",", "11241", ",", "11244", ",", "11247", ",", "11250", ",", 
   "11253", ",", "11256", ",", "11259", ",", "11262", ",", "11265", ",", 
   "11268", ",", "11271", ",", "11274", ",", "11277", ",", "11280", ",", 
   "11283", ",", "11286", ",", "11289", ",", "11292", ",", "11295", ",", 
   "11298", ",", "11301", ",", "11304", ",", "11307", ",", "11310", ",", 
   "11313", ",", "11316", ",", "11319", ",", "11322", ",", "11325", ",", 
   "11328", ",", "11331", ",", "11334", ",", "11337", ",", "11340", ",", 
   "11343", ",", "11346", ",", "11349", ",", "11352", ",", "11355", ",", 
   "11358", ",", "11361", ",", "11364", ",", "11367", ",", "11370", ",", 
   "11373", ",", "11376", ",", "11379", ",", "11382", ",", "11385", ",", 
   "11388", ",", "11391", ",", "11394", ",", "11397", ",", "11400", ",", 
   "11403", ",", "11406", ",", "11409", ",", "11412", ",", "11415", ",", 
   "11418", ",", "11421", ",", "11424", ",", "11427", ",", "11430", ",", 
   "11433", ",", "11436", ",", "11439", ",", "11442", ",", "11445", ",", 
   "11448", ",", "11451", ",", "11454", ",", "11457", ",", "11460", ",", 
   "11463", ",", "11466", ",", "11469", ",", "11472", ",", "11475", ",", 
   "11478", ",", "11481", ",", "11484", ",", "11487", ",", "11490", ",", 
   "11493", ",", "11496", ",", "11499", ",", "11502", ",", "11505", ",", 
   "11508", ",", "11511", ",", "11514", ",", "11517", ",", "11520", ",", 
   "11523", ",", "11526", ",", "11529", ",", "11532", ",", "11535", ",", 
   "11538", ",", "11541", ",", "11544", ",", "11547", ",", "11550", ",", 
   "11553", ",", "11556", ",", "11559", ",", "11562", ",", "11565", ",", 
   "11568", ",", "11571", ",", "11574", ",", "11577", ",", "11580", ",", 
   "11583", ",", "11586", ",", "11589", ",", "11592", ",", "11595", ",", 
   "11598", ",", "11601", ",", "11604", ",", "11607", ",", "11610", ",", 
   "11613", ",", "11616", ",", "11619", ",", "11622", ",", "11625", ",", 
   "11628", ",", "11631", ",", "11634", ",", "11637", ",", "11640", ",", 
   "11643", ",", "11646", ",", "11649", ",", "11652", ",", "11655", ",", 
   "11658", ",", "11661", ",", "11664", ",", "11667", ",", "11670", ",", 
   "11673", ",", "11676", ",", "11679", ",", "11682", ",", "11685", ",", 
   "11688", ",", "11691", ",", "11694", ",", "11697", ",", "11700", ",", 
   "11703", ",", "11706", ",", "11709", ",", "11712", ",", "11715", ",", 
   "11718", ",", "11721", ",", "11724", ",", "11727", ",", "11730", ",", 
   "11733", ",", "11736", ",", "11739", ",", "11742", ",", "11745", ",", 
   "11748", ",", "11751", ",", "11754", ",", "11757", ",", "11760", ",", 
   "11763", ",", "11766", ",", "11769", ",", "11772", ",", "11775", ",", 
   "11778", ",", "11781", ",", "11784", ",", "11787", ",", "11790", ",", 
   "11793", ",", "11796", ",", "11799", ",", "11802", ",", "11805", ",", 
   "11808", ",", "11811", ",", "11814", ",", "11817", ",", "11820", ",", 
   "11823", ",", "11826", ",", "11829", ",", "11832", ",", "11835", ",", 
   "11838", ",", "11841", ",", "11844", ",", "11847", ",", "11850", ",", 
   "11853", ",", "11856", ",", "11859", ",", "11862", ",", "11865", ",", 
   "11868", ",", "11871", ",", "11874", ",", "11877", ",", "11880", ",", 
   "11883", ",", "11886", ",", "11889", ",", "11892", ",", "11895", ",", 
   "11898", ",", "11901", ",", "11904", ",", "11907", ",", "11910", ",", 
   "11913", ",", "11916", ",", "11919", ",", "11922", ",", "11925", ",", 
   "11928", ",", "11931", ",", "11934", ",", "11937", ",", "11940", ",", 
   "11943", ",", "11946", ",", "11949", ",", "11952", ",", "11955", ",", 
   "11958", ",", "11961", ",", "11964", ",", "11967", ",", "11970", ",", 
   "11973", ",", "11976", ",", "11979", ",", "11982", ",", "11985", ",", 
   "11988", ",", "11991", ",", "11994", ",", "11997", ",", "12000", ",", 
   "12003", ",", "12006", ",", "12009", ",", "12012", ",", "12015", ",", 
   "12018", ",", "12021", ",", "12024", ",", "12027", ",", "12030", ",", 
   "12033", ",", "12036", ",", "12039", ",", "12042", ",", "12045", ",", 
   "12048", ",", "12051", ",", "12054", ",", "12057", ",", "12060", ",", 
   "12063", ",", "12066", ",", "12069", ",", "12072", ",", "12075", ",", 
   "12078", ",", "12081", ",", "12084", ",", "12087", ",", "12090", ",", 
   "12093", ",", "12096", ",", "12099", ",", "12102", ",", "12105", ",", 
   "12108", ",", "12111", ",", "12114", ",", "12117", ",", "12120", ",", 
   "12123", ",", "12126", ",", "12129", ",", "12132", ",", "12135", ",", 
   "12138", ",", "12141", ",", "12144", ",", "12147", ",", "12150", ",", 
   "12153", ",", "12156", ",", "12159", ",", "12162", ",", "12165", ",", 
   "12168", ",", "12171", ",", "12174", ",", "12177", ",", "12180", ",", 
   "12183", ",", "12186", ",", "12189", ",", "12192", ",", "12195", ",", 
   "12198", ",", "12201", ",", "12204", ",", "12207", ",", "12210", ",", 
   "12213", ",", "12216", ",", "12219", ",", "12222", ",", "12225", ",", 
   "12228", ",", "12231", ",", "12234", ",", "12237", ",", "12240", ",", 
   "12243", ",", "12246", ",", "12249", ",", "12252", ",", "12255", ",", 
   "12258", ",", "12261", ",", "12264", ",", "12267", ",", "12270", ",", 
   "12273", ",", "12276", ",", "12279", ",", "12282", ",", "12285", ",", 
   "12288", ",", "12291", ",", "12294", ",", "12297", ",", "12300", ",", 
   "12303", ",", "12306", ",", "12309", ",", "12312", ",", "12315", ",", 
   "12318", ",", "12321", ",", "12324", ",", "12327", ",", "12330", ",", 
   "12333", ",", "12336", ",", "12339", ",", "12342", ",", "12345", ",", 
   "12348", ",", "12351", ",", "12354", ",", "12357", ",", "12360", ",", 
   "12363", ",", "12366", ",", "12369", ",", "12372", ",", "12375", ",", 
   "12378", ",", "12381", ",", "12384", ",", "12387", ",", "12390", ",", 
   "12393", ",", "12396", ",", "12399", ",", "12402", ",", "12405", ",", 
   "12408", ",", "12411", ",", "12414", ",", "12417", ",", "12420", ",", 
   "12423", ",", "12426", ",", "12429", ",", "12432", ",", "12435", ",", 
   "12438", ",", "12441", ",", "12444", ",", "12447", ",", "12450", ",", 
   "12453", ",", "12456", ",", "12459", ",", "12462", ",", "12465", ",", 
   "12468", ",", "12471", ",", "12474", ",", "12477", ",", "12480", ",", 
   "12483", ",", "12486", ",", "12489", ",", "12492", ",", "12495", ",", 
   "12498", ",", "12501", ",", "12504", ",", "12507", ",", "12510", ",", 
   "12513", ",", "12516", ",", "12519", ",", "12522", ",", "12525", ",", 
   "12528", ",", "12531", ",", "12534", ",", "12537", ",", "12540", ",", 
   "12543", ",", "12546", ",", "12549", ",", "12552", ",", "12555", ",", 
   "12558", ",", "12561", ",", "12564", ",", "12567", ",", "12570", ",", 
   "12573", ",", "12576", ",", "12579", ",", "12582", ",", "12585", ",", 
   "12588", ",", "12591", ",", "12594", ",", "12597", ",", "12600", ",", 
   "12603", ",", "12606", ",", "12609", ",", "12612", ",", "12615", ",", 
   "12618", ",", "12621", ",", "12624", ",", "12627", ",", "12630", ",", 
   "12633", ",", "12636", ",", "12639", ",", "12642", ",", "12645", ",", 
   "12648", ",", "12651", ",", "12654", ",", "12657", ",", "12660", ",", 
   "12663", ",", "12666", ",", "12669", ",", "12672", ",", "12675", ",", 
   "12678", ",", "12681", ",", "12684", ",", "12687", ",", "12690", ",", 
   "12693", ",", "12696", ",", "12699", ",", "12702", ",", "12705", ",", 
   "12708", ",", "12711", ",", "12714", ",", "12717", ",", "12720", ",", 
   "12723", ",", "12726", ",", "12729", ",", "12732", ",", "12735", ",", 
   "12738", ",", "12741", ",", "12744", ",", "12747", ",", "12750", ",", 
   "12753", ",", "12756", ",", "12759", ",", "12762", ",", "12765", ",", 
   "12768", ",", "12771", ",", "12774", ",", "12777", ",", "12780", ",", 
   "12783", ",", "12786", ",", "12789", ",", "12792", ",", "12795", ",", 
   "12798", ",", "12801", ",", "12804", ",", "12807", ",", "12810", ",", 
   "12813", ",", "12816", ",", "12819", ",", "12822", ",", "12825", ",", 
   "12828", ",", "12831", ",", "12834", ",", "12837", ",", "12840", ",", 
   "12843", ",", "12846", ",", "12849", ",", "12852", ",", "12855", ",", 
   "12858", ",", "12861", ",", "12864", ",", "12867", ",", "12870", ",", 
   "12873", ",", "12876", ",", "12879", ",", "12882", ",", "12885", ",", 
   "12888", ",", "12891", ",", "12894", ",", "12897", ",", "12900", ",", 
   "12903", ",", "12906", ",", "12909", ",", "12912", ",", "12915", ",", 
   "12918", ",", "12921", ",", "12924", ",", "12927", ",", "12930", ",", 
   "12933", ",", "12936", ",", "12939", ",", "12942", ",", "12945", ",", 
   "12948", ",", "12951", ",", "12954", ",", "12957", ",", "12960", ",", 
   "12963", ",", "12966", ",", "12969", ",", "12972", ",", "12975", ",", 
   "12978", ",", "12981", ",", "12984", ",", "12987", ",", "12990", ",", 
   "12993", ",", "12996", ",", "12999", ",", "13002", ",", "13005", ",", 
   "13008", ",", "13011", ",", "13014", ",", "13017", ",", "13020", ",", 
   "13023", ",", "13026", ",", "13029", ",", "13032", ",", "13035", ",", 
   "13038", ",", "13041", ",", "13044", ",", "13047", ",", "13050", ",", 
   "13053", ",", "13056", ",", "13059", ",", "13062", ",", "13065", ",", 
   "13068", ",", "13071", ",", "13074", ",", "13077", ",", "13080", ",", 
   "13083", ",", "13086", ",", "13089", ",", "13092", ",", "13095", ",", 
   "13098", ",", "13101", ",", "13104", ",", "13107", ",", "13110", ",", 
   "13113", ",", "13116", ",", "13119", ",", "13122", ",", "13125", ",", 
   "13128", ",", "13131", ",", "13134", ",", "13137", ",", "13140", ",", 
   "13143", ",", "13146", ",", "13149", ",", "13152", ",", "13155", ",", 
   "13158", ",", "13161", ",", "13164", ",", "13167", ",", "13170", ",", 
   "13173", ",", "13176", ",", "13179", ",", "13182", ",", "13185", ",", 
   "13188", ",", "13191", ",", "13194", ",", "13197", ",", "13200", ",", 
   "13203", ",", "13206", ",", "13209", ",", "13212", ",", "13215", ",", 
   "13218", ",", "13221", ",", "13224", ",", "13227", ",", "13230", ",", 
   "13233", ",", "13236", ",", "13239", ",", "13242", ",", "13245", ",", 
   "13248", ",", "13251", ",", "13254", ",", "13257", ",", "13260", ",", 
   "13263", ",", "13266", ",", "13269", ",", "13272", ",", "13275", ",", 
   "13278", ",", "13281", ",", "13284", ",", "13287", ",", "13290", ",", 
   "13293", ",", "13296", ",", "13299", ",", "13302", ",", "13305", ",", 
   "13308", ",", "13311", ",", "13314", ",", "13317", ",", "13320", ",", 
   "13323", ",", "13326", ",", "13329", ",", "13332", ",", "13335", ",", 
   "13338", ",", "13341", ",", "13344", ",", "13347", ",", "13350", ",", 
   "13353", ",", "13356", ",", "13359", ",", "13362", ",", "13365", ",", 
   "13368", ",", "13371", ",", "13374", ",", "13377", ",", "13380", ",", 
   "13383", ",", "13386", ",", "13389", ",", "13392", ",", "13395", ",", 
   "13398", ",", "13401", ",", "13404", ",", "13407", ",", "13410", ",", 
   "13413", ",", "13416", ",", "13419", ",", "13422", ",", "13425", ",", 
   "13428", ",", "13431", ",", "13434", ",", "13437", ",", "13440", ",", 
   "13443", ",", "13446", ",", "13449", ",", "13452", ",", "13455", ",", 
   "13458", ",", "13461", ",", "13464", ",", "13467", ",", "13470", ",", 
   "13473", ",", "13476", ",", "13479", ",", "13482", ",", "13485", ",", 
   "13488", ",", "13491", ",", "13494", ",", "13497", ",", "13500", ",", 
   "13503", ",", "13506", ",", "13509", ",", "13512", ",", "13515", ",", 
   "13518", ",", "13521", ",", "13524", ",", "13527", ",", "13530", ",", 
   "13533", ",", "13536", ",", "13539", ",", "13542", ",", "13545", ",", 
   "13548", ",", "13551", ",", "13554", ",", "13557", ",", "13560", ",", 
   "13563", ",", "13566", ",", "13569", ",", "13572", ",", "13575", ",", 
   "13578", ",", "13581", ",", "13584", ",", "13587", ",", "13590", ",", 
   "13593", ",", "13596", ",", "13599", ",", "13602", ",", "13605", ",", 
   "13608", ",", "13611", ",", "13614", ",", "13617", ",", "13620", ",", 
   "13623", ",", "13626", ",", "13629", ",", "13632", ",", "13635", ",", 
   "13638", ",", "13641", ",", "13644", ",", "13647", ",", "13650", ",", 
   "13653", ",", "13656", ",", "13659", ",", "13662", ",", "13665", ",", 
   "13668", ",", "13671", ",", "13674", ",", "13677", ",", "13680", ",", 
   "13683", ",", "13686", ",", "13689", ",", "13692", ",", "13695", ",", 
   "13698", ",", "13701", ",", "13704", ",", "13707", ",", "13710", ",", 
   "13713", ",", "13716", ",", "13719", ",", "13722", ",", "13725", ",", 
   "13728", ",", "13731", ",", "13734", ",", "13737", ",", "13740", ",", 
   "13743", ",", "13746", ",", "13749", ",", "13752", ",", "13755", ",", 
   "13758", ",", "13761", ",", "13764", ",", "13767", ",", "13770", ",", 
   "13773", ",", "13776", ",", "13779", ",", "13782", ",", "13785", ",", 
   "13788", ",", "13791", ",", "13794", ",", "13797", ",", "13800", ",", 
   "13803", ",", "13806", ",", "13809", ",", "13812", ",", "13815", ",", 
   "13818", ",", "13821", ",", "13824", ",", "13827", ",", "13830", ",", 
   "13833", ",", "13836", ",", "13839", ",", "13842", ",", "13845", ",", 
   "13848", ",", "13851", ",", "13854", ",", "13857", ",", "13860", ",", 
   "13863", ",", "13866", ",", "13869", ",", "13872", ",", "13875", ",", 
   "13878", ",", "13881", ",", "13884", ",", "13887", ",", "13890", ",", 
   "13893", ",", "13896", ",", "13899", ",", "13902", ",", "13905", ",", 
   "13908", ",", "13911", ",", "13914", ",", "13917", ",", "13920", ",", 
   "13923", ",", "13926", ",", "13929", ",", "13932", ",", "13935", ",", 
   "13938", ",", "13941", ",", "13944", ",", "13947", ",", "13950", ",", 
   "13953", ",", "13956", ",", "13959", ",", "13962", ",", "13965", ",", 
   "13968", ",", "13971", ",", "13974", ",", "13977", ",", "13980", ",", 
   "13983", ",", "13986", ",", "13989", ",", "13992", ",", "13995", ",", 
   "13998", ",", "14001", ",", "14004", ",", "14007", ",", "14010", ",", 
   "14013", ",", "14016", ",", "14019", ",", "14022", ",", "14025", ",", 
   "14028", ",", "14031", ",", "14034", ",", "14037", ",", "14040", ",", 
   "14043", ",", "14046", ",", "14049", ",", "14052", ",", "14055", ",", 
   "14058", ",", "14061", ",", "14064", ",", "14067", ",", "14070", ",", 
   "14073", ",", "14076", ",", "14079", ",", "14082", ",", "14085", ",", 
   "14088", ",", "14091", ",", "14094", ",", "14097", ",", "14100", ",", 
   "14103", ",", "14106", ",", "14109", ",", "14112", ",", "14115", ",", 
   "14118", ",", "14121", ",", "14124", ",", "14127", ",", "14130", ",", 
   "14133", ",", "14136", ",", "14139", ",", "14142", ",", "14145", ",", 
   "14148", ",", "14151", ",", "14154", ",", "14157", ",", "14160", ",", 
   "14163", ",", "14166", ",", "14169", ",", "14172", ",", "14175", ",", 
   "14178", ",", "14181", ",", "14184", ",", "14187", ",", "14190", ",", 
   "14193", ",", "14196", ",", "14199", ",", "14202", ",", "14205", ",", 
   "14208", ",", "14211", ",", "14214", ",", "14217", ",", "14220", ",", 
   "14223", ",", "14226", ",", "14229", ",", "14232", ",", "14235", ",", 
   "14238", ",", "14241", ",", "14244", ",", "14247", ",", "14250", ",", 
   "14253", ",", "14256", ",", "14259", ",", "14262", ",", "14265", ",", 
   "14268", ",", "14271", ",", "14274", ",", "14277", ",", "14280", ",", 
   "14283", ",", "14286", ",", "14289", ",", "14292", ",", "14295", ",", 
   "14298", ",", "14301", ",", "14304", ",", "14307", ",", "14310", ",", 
   "14313", ",", "14316", ",", "14319", ",", "14322", ",", "14325", ",", 
   "14328", ",", "14331", ",", "14334", ",", "14337", ",", "14340", ",", 
   "14343", ",", "14346", ",", "14349", ",", "14352", ",", "14355", ",", 
   "14358", ",", "14361", ",", "14364", ",", "14367", ",", "14370", ",", 
   "14373", ",", "14376", ",", "14379", ",", "14382", ",", "14385", ",", 
   "14388", ",", "14391", ",", "14394", ",", "14397", ",", "14400", ",", 
   "14403", ",", "14406", ",", "14409", ",", "14412", ",", "14415", ",", 
   "14418", ",", "14421", ",", "14424", ",", "14427", ",", "14430", ",", 
   "14433", ",", "14436", ",", "14439", ",", "14442", ",", "14445", ",", 
   "14448", ",", "14451", ",", "14454", ",", "14457", ",", "14460", ",", 
   "14463", ",", "14466", ",", "14469", ",", "14472", ",", "14475", ",", 
   "14478", ",", "14481", ",", "14484", ",", "14487", ",", "14490", ",", 
   "14493", ",", "14496", ",", "14499", ",", "14502", ",", "14505", ",", 
   "14508", ",", "14511", ",", "14514", ",", "14517", ",", "14520", ",", 
   "14523", ",", "14526", ",", "14529", ",", "14532", ",", "14535", ",", 
   "14538", ",", "14541", ",", "14544", ",", "14547", ",", "14550", ",", 
   "14553", ",", "14556", ",", "14559", ",", "14562", ",", "14565", ",", 
   "14568", ",", "14571", ",", "14574", ",", "14577", ",", "14580", ",", 
   "14583", ",", "14586", ",", "14589", ",", "14592", ",", "14595", ",", 
   "14598", ",", "14601", ",", "14604", ",", "14607", ",", "14610", ",", 
   "14613", ",", "14616", ",", "14619", ",", "14622", ",", "14625", ",", 
   "14628", ",", "14631", ",", "14634", ",", "14637", ",", "14640", ",", 
   "14643", ",", "14646", ",", "14649", ",", "14652", ",", "14655", ",", 
   "14658", ",", "14661", ",", "14664", ",", "14667", ",", "14670", ",", 
   "14673", ",", "14676", ",", "14679", ",", "14682", ",", "14685", ",", 
   "14688", ",", "14691", ",", "14694", ",", "14697", ",", "14700", ",", 
   "14703", ",", "14706", ",", "14709", ",", "14712", ",", "14715", ",", 
   "14718", ",", "14721", ",", "14724", ",", "14727", ",", "14730", ",", 
   "14733", ",", "14736", ",", "14739", ",", "14742", ",", "14745", ",", 
   "14748", ",", "14751", ",", "14754", ",", "14757", ",", "14760", ",", 
   "14763", ",", "14766", ",", "14769", ",", "14772", ",", "14775", ",", 
   "14778", ",", "14781", ",", "14784", ",", "14787", ",", "14790", ",", 
   "14793", ",", "14796", ",", "14799", ",", "14802", ",", "14805", ",", 
   "14808", ",", "14811", ",", "14814", ",", "14817", ",", "14820", ",", 
   "14823", ",", "14826", ",", "14829", ",", "14832", ",", "14835", ",", 
   "14838", ",", "14841", ",", "14844", ",", "14847", ",", "14850", ",", 
   "14853", ",", "14856", ",", "14859", ",", "14862", ",", "14865", ",", 
   "14868", ",", "14871", ",", "14874", ",", "14877", ",", "14880", ",", 
   "14883", ",", "14886", ",", "14889", ",", "14892", ",", "14895", ",", 
   "14898", ",", "14901", ",", "14904", ",", "14907", ",", "14910", ",", 
   "14913", ",", "14916", ",", "14919", ",", "14922", ",", "14925", ",", 
   "14928", ",", "14931", ",", "14934", ",", "14937", ",", "14940", ",", 
   "14943", ",", "14946", ",", "14949", ",", "14952", ",", "14955", ",", 
   "14958", ",", "14961", ",", "14964", ",", "14967", ",", "14970", ",", 
   "14973", ",", "14976", ",", "14979", ",", "14982", ",", "14985", ",", 
   "14988", ",", "14991", ",", "14994", ",", "14997", ",", "15000", ",", 
   "15003", ",", "15006", ",", "15009", ",", "15012", ",", "15015", ",", 
   "15018", ",", "15021", ",", "15024", ",", "15027", ",", "15030", ",", 
   "15033", ",", "15036", ",", "15039", ",", "15042", ",", "15045", ",", 
   "15048", ",", "15051", ",", "15054", ",", "15057", ",", "15060", ",", 
   "15063", ",", "15066", ",", "15069", ",", "15072", ",", "15075", ",", 
   "15078", ",", "15081", ",", "15084", ",", "15087", ",", "15090", ",", 
   "15093", ",", "15096", ",", "15099", ",", "15102", ",", "15105", ",", 
   "15108", ",", "15111", ",", "15114", ",", "15117", ",", "15120", ",", 
   "15123", ",", "15126", ",", "15129", ",", "15132", ",", "15135", ",", 
   "15138", ",", "15141", ",", "15144", ",", "15147", ",", "15150", ",", 
   "15153", ",", "15156", ",", "15159", ",", "15162", ",", "15165", ",", 
   "15168", ",", "15171", ",", "15174", ",", "15177", ",", "15180", ",", 
   "15183", ",", "15186", ",", "15189", ",", "15192", ",", "15195", ",", 
   "15198", ",", "15201", ",", "15204", ",", "15207", ",", "15210", ",", 
   "15213", ",", "15216", ",", "15219", ",", "15222", ",", "15225", ",", 
   "15228", ",", "15231", ",", "15234", ",", "15237", ",", "15240", ",", 
   "15243", ",", "15246", ",", "15249", ",", "15252", ",", "15255", ",", 
   "15258", ",", "15261", ",", "15264", ",", "15267", ",", "15270", ",", 
   "15273", ",", "15276", ",", "15279", ",", "15282", ",", "15285", ",", 
   "15288", ",", "15291", ",", "15294", ",", "15297", ",", "15300", ",", 
   "15303", ",", "15306", ",", "15309", ",", "15312", ",", "15315", ",", 
   "15318", ",", "15321", ",", "15324", ",", "15327", ",", "15330", ",", 
   "15333", ",", "15336", ",", "15339", ",", "15342", ",", "15345", ",", 
   "15348", ",", "15351", ",", "15354", ",", "15357", ",", "15360", ",", 
   "15363", ",", "15366", ",", "15369", ",", "15372", ",", "15375", ",", 
   "15378", ",", "15381", ",", "15384", ",", "15387", ",", "15390", ",", 
   "15393", ",", "15396", ",", "15399", ",", "15402", ",", "15405", ",", 
   "15408", ",", "15411", ",", "15414", ",", "15417", ",", "15420", ",", 
   "15423", ",", "15426", ",", "15429", ",", "15432", ",", "15435", ",", 
   "15438", ",", "15441", ",", "15444", ",", "15447", ",", "15450", ",", 
   "15453", ",", "15456", ",", "15459", ",", "15462", ",", "15465", ",", 
   "15468", ",", "15471", ",", "15474", ",", "15477", ",", "15480", ",", 
   "15483", ",", "15486", ",", "15489", ",", "15492", ",", "15495", ",", 
   "15498", ",", "15501", ",", "15504", ",", "15507", ",", "15510", ",", 
   "15513", ",", "15516", ",", "15519", ",", "15522", ",", "15525", ",", 
   "15528", ",", "15531", ",", "15534", ",", "15537", ",", "15540", ",", 
   "15543", ",", "15546", ",", "15549", ",", "15552", ",", "15555", ",", 
   "15558", ",", "15561", ",", "15564", ",", "15567", ",", "15570", ",", 
   "15573", ",", "15576", ",", "15579", ",", "15582", ",", "15585", ",", 
   "15588", ",", "15591", ",", "15594", ",", "15597", ",", "15600", ",", 
   "15603", ",", "15606", ",", "15609", ",", "15612", ",", "15615", ",", 
   "15618", ",", "15621", ",", "15624", ",", "15627", ",", "15630", ",", 
   "15633", ",", "15636", ",", "15639", ",", "15642", ",", "15645", ",", 
   "15648", ",", "15651", ",", "15654", ",", "15657", ",", "15660", ",", 
   "15663", ",", "15666", ",", "15669", ",", "15672", ",", "15675", ",", 
   "15678", ",", "15681", ",", "15684", ",", "15687", ",", "15690", ",", 
   "15693", ",", "15696", ",", "15699", ",", "15702", ",", "15705", ",", 
   "15708", ",", "15711", ",", "15714", ",", "15717", ",", "15720", ",", 
   "15723", ",", "15726", ",", "15729", ",", "15732", ",", "15735", ",", 
   "15738", ",", "15741", ",", "15744", ",", "15747", ",", "15750", ",", 
   "15753", ",", "15756", ",", "15759", ",", "15762", ",", "15765", ",", 
   "15768", ",", "15771", ",", "15774", ",", "15777", ",", "15780", ",", 
   "15783", ",", "15786", ",", "15789", ",", "15792", ",", "15795", ",", 
   "15798", ",", "15801", ",", "15804", ",", "15807", ",", "15810", ",", 
   "15813", ",", "15816", ",", "15819", ",", "15822", ",", "15825", ",", 
   "15828", ",", "15831", ",", "15834", ",", "15837", ",", "15840", ",", 
   "15843", ",", "15846", ",", "15849", ",", "15852", ",", "15855", ",", 
   "15858", ",", "15861", ",", "15864", ",", "15867", ",", "15870", ",", 
   "15873", ",", "15876", ",", "15879", ",", "15882", ",", "15885", ",", 
   "15888", ",", "15891", ",", "15894", ",", "15897", ",", "15900", ",", 
   "15903", ",", "15906", ",", "15909", ",", "15912", ",", "15915", ",", 
   "15918", ",", "15921", ",", "15924", ",", "15927", ",", "15930", ",", 
   "15933", ",", "15936", ",", "15939", ",", "15942", ",", "15945", ",", 
   "15948", ",", "15951", ",", "15954", ",", "15957", ",", "15960", ",", 
   "15963", ",", "15966", ",", "15969", ",", "15972", ",", "15975", ",", 
   "15978", ",", "15981", ",", "15984", ",", "15987", ",", "15990", ",", 
   "15993", ",", "15996", ",", "15999", ",", "16002", ",", "16005", ",", 
   "16008", ",", "16011", ",", "16014", ",", "16017", ",", "16020", ",", 
   "16023", ",", "16026", ",", "16029", ",", "16032", ",", "16035", ",", 
   "16038", ",", "16041", ",", "16044", ",", "16047", ",", "16050", ",", 
   "16053", ",", "16056", ",", "16059", ",", "16062", ",", "16065", ",", 
   "16068", ",", "16071", ",", "16074", ",", "16077", ",", "16080", ",", 
   "16083", ",", "16086", ",", "16089", ",", "16092", ",", "16095", ",", 
   "16098", ",", "16101", ",", "16104", ",", "16107", ",", "16110", ",", 
   "16113", ",", "16116", ",", "16119", ",", "16122", ",", "16125", ",", 
   "16128", ",", "16131", ",", "16134", ",", "16137", ",", "16140", ",", 
   "16143", ",", "16146", ",", "16149", ",", "16152", ",", "16155", ",", 
   "16158", ",", "16161", ",", "16164", ",", "16167", ",", "16170", ",", 
   "16173", ",", "16176", ",", "16179", ",", "16182", ",", "16185", ",", 
   "16188", ",", "16191", ",", "16194", ",", "16197", ",", "16200", ",", 
   "16203", ",", "16206", ",", "16209", ",", "16212", ",", "16215", ",", 
   "16218", ",", "16221", ",", "16224", ",", "16227", ",", "16230", ",", 
   "16233", ",", "16236", ",", "16239", ",", "16242", ",", "16245", ",", 
   "16248", ",", "16251", ",", "16254", ",", "16257", ",", "16260", ",", 
   "16263", ",", "16266", ",", "16269", ",", "16272", ",", "16275", ",", 
   "16278", ",", "16281", ",", "16284", ",", "16287", ",", "16290", ",", 
   "16293", ",", "16296", ",", "16299", ",", "16302", ",", "16305", ",", 
   "16308", ",", "16311", ",", "16314", ",", "16317", ",", "16320", ",", 
   "16323", ",", "16326", ",", "16329", ",", "16332", ",", "16335", ",", 
   "16338", ",", "16341", ",", "16344", ",", "16347", ",", "16350", ",", 
   "16353", ",", "16356", ",", "16359", ",", "16362", ",", "16365", ",", 
   "16368", ",", "16371", ",", "16374", ",", "16377", ",", "16380", ",", 
   "16383", ",", "16386", ",", "16389", ",", "16392", ",", "16395", ",", 
   "16398", ",", "16401", ",", "16404", ",", "16407", ",", "16410", ",", 
   "16413", ",", "16416", ",", "16419", ",", "16422", ",", "16425", ",", 
   "16428", ",", "16431", ",", "16434", ",", "16437", ",", "16440", ",", 
   "16443", ",", "16446", ",", "16449", ",", "16452", ",", "16455", ",", 
   "16458", ",", "16461", ",", "16464", ",", "16467", ",", "16470", ",", 
   "16473", ",", "16476", ",", "16479", ",", "16482", ",", "16485", ",", 
   "16488", ",", "16491", ",", "16494", ",", "16497", ",", "16500", ",", 
   "16503", ",", "16506", ",", "16509", ",", "16512", ",", "16515", ",", 
   "16518", ",", "16521", ",", "16524", ",", "16527", ",", "16530", ",", 
   "16533", ",", "16536", ",", "16539", ",", "16542", ",", "16545", ",", 
   "16548", ",", "16551", ",", "16554", ",", "16557", ",", "16560", ",", 
   "16563", ",", "16566", ",", "16569", ",", "16572", ",", "16575", ",", 
   "16578", ",", "16581", ",", "16584", ",", "16587", ",", "16590", ",", 
   "16593", ",", "16596", ",", "16599", ",", "16602", ",", "16605", ",", 
   "16608", ",", "16611", ",", "16614", ",", "16617", ",", "16620", ",", 
   "16623", ",", "16626", ",", "16629", ",", "16632", ",", "16635", ",", 
   "16638", ",", "16641", ",", "16644", ",", "16647", ",", "16650", ",", 
   "16653", ",", "16656", ",", "16659", ",", "16662", ",", "16665", ",", 
   "16668", ",", "16671", ",", "16674", ",", "16677", ",", "16680", ",", 
   "16683", ",", "16686", ",", "16689", ",", "16692", ",", "16695", ",", 
   "16698", ",", "16701", ",", "16704", ",", "16707", ",", "16710", ",", 
   "16713", ",", "16716", ",", "16719", ",", "16722", ",", "16725", ",", 
   "16728", ",", "16731", ",", "16734", ",", "16737", ",", "16740", ",", 
   "16743", ",", "16746", ",", "16749", ",", "16752", ",", "16755", ",", 
   "16758", ",", "16761", ",", "16764", ",", "16767", ",", "16770", ",", 
   "16773", ",", "16776", ",", "16779", ",", "16782", ",", "16785", ",", 
   "16788", ",", "16791", ",", "16794", ",", "16797", ",", "16800", ",", 
   "16803", ",", "16806", ",", "16809", ",", "16812", ",", "16815", ",", 
   "16818", ",", "16821", ",", "16824", ",", "16827", ",", "16830", ",", 
   "16833", ",", "16836", ",", "16839", ",", "16842", ",", "16845", ",", 
   "16848", ",", "16851", ",", "16854", ",", "16857", ",", "16860", ",", 
   "16863", ",", "16866", ",", "16869", ",", "16872", ",", "16875", ",", 
   "16878", ",", "16881", ",", "16884", ",", "16887", ",", "16890", ",", 
   "16893", ",", "16896", ",", "16899", ",", "16902", ",", "16905", ",", 
   "16908", ",", "16911", ",", "16914", ",", "16917", ",", "16920", ",", 
   "16923", ",", "16926", ",", "16929", ",", "16932", ",", "16935", ",", 
   "16938", ",", "16941", ",", "16944", ",", "16947", ",", "16950", ",", 
   "16953", ",", "16956", ",", "16959", ",", "16962", ",", "16965", ",", 
   "16968", ",", "16971", ",", "16974", ",", "16977", ",", "16980", ",", 
   "16983", ",", "16986", ",", "16989", ",", "16992", ",", "16995", ",", 
   "16998", ",", "17001", ",", "17004", ",", "17007", ",", "17010", ",", 
   "17013", ",", "17016", ",", "17019", ",", "17022", ",", "17025", ",", 
   "17028", ",", "17031", ",", "17034", ",", "17037", ",", "17040", ",", 
   "17043", ",", "17046", ",", "17049", ",", "17052", ",", "17055", ",", 
   "17058", ",", "17061", ",", "17064", ",", "17067", ",", "17070", ",", 
   "17073", ",", "17076", ",", "17079", ",", "17082", ",", "17085", ",", 
   "17088", ",", "17091", ",", "17094", ",", "17097", ",", "17100", ",", 
   "17103", ",", "17106", ",", "17109", ",", "17112", ",", "17115", ",", 
   "17118", ",", "17121", ",", "17124", ",", "17127", ",", "17130", ",", 
   "17133", ",", "17136", ",", "17139", ",", "17142", ",", "17145", ",", 
   "17148", ",", "17151", ",", "17154", ",", "17157", ",", "17160", ",", 
   "17163", ",", "17166", ",", "17169", ",", "17172", ",", "17175", ",", 
   "17178", ",", "17181", ",", "17184", ",", "17187", ",", "17190", ",", 
   "17193", ",", "17196", ",", "17199", ",", "17202", ",", "17205", ",", 
   "17208", ",", "17211", ",", "17214", ",", "17217", ",", "17220", ",", 
   "17223", ",", "17226", ",", "17229", ",", "17232", ",", "17235", ",", 
   "17238", ",", "17241", ",", "17244", ",", "17247", ",", "17250", ",", 
   "17253", ",", "17256", ",", "17259", ",", "17262", ",", "17265", ",", 
   "17268", ",", "17271", ",", "17274", ",", "17277", ",", "17280", ",", 
   "17283", ",", "17286", ",", "17289", ",", "17292", ",", "17295", ",", 
   "17298", ",", "17301", ",", "17304", ",", "17307", ",", "17310", ",", 
   "17313", ",", "17316", ",", "17319", ",", "17322", ",", "17325", ",", 
   "17328", ",", "17331", ",", "17334", ",", "17337", ",", "17340", ",", 
   "17343", ",", "17346", ",", "17349", ",", "17352", ",", "17355", ",", 
   "17358", ",", "17361", ",", "17364", ",", "17367", ",", "17370", ",", 
   "17373", ",", "17376", ",", "17379", ",", "17382", ",", "17385", ",", 
   "17388", ",", "17391", ",", "17394", ",", "17397", ",", "17400", ",", 
   "17403", ",", "17406", ",", "17409", ",", "17412", ",", "17415", ",", 
   "17418", ",", "17421", ",", "17424", ",", "17427", ",", "17430", ",", 
   "17433", ",", "17436", ",", "17439", ",", "17442", ",", "17445", ",", 
   "17448", ",", "17451", ",", "17454", ",", "17457", ",", "17460", ",", 
   "17463", ",", "17466", ",", "17469", ",", "17472", ",", "17475", ",", 
   "17478", ",", "17481", ",", "17484", ",", "17487", ",", "17490", ",", 
   "17493", ",", "17496", ",", "17499", ",", "17502", ",", "17505", ",", 
   "17508", ",", "17511", ",", "17514", ",", "17517", ",", "17520", ",", 
   "17523", ",", "17526", ",", "17529", ",", "17532", ",", "17535", ",", 
   "17538", ",", "17541", ",", "17544", ",", "17547", ",", "17550", ",", 
   "17553", ",", "17556", ",", "17559", ",", "17562", ",", "17565", ",", 
   "17568", ",", "17571", ",", "17574", ",", "17577", ",", "17580", ",", 
   "17583", ",", "17586", ",", "17589", ",", "17592", ",", "17595", ",", 
   "17598", ",", "17601", ",", "17604", ",", "17607", ",", "17610", ",", 
   "17613", ",", "17616", ",", "17619", ",", "17622", ",", "17625", ",", 
   "17628", ",", "17631", ",", "17634", ",", "17637", ",", "17640", ",", 
   "17643", ",", "17646", ",", "17649", ",", "17652", ",", "17655", ",", 
   "17658", ",", "17661", ",", "17664", ",", "17667", ",", "17670", ",", 
   "17673", ",", "17676", ",", "17679", ",", "17682", ",", "17685", ",", 
   "17688", ",", "17691", ",", "17694", ",", "17697", ",", "17700", ",", 
   "17703", ",", "17706", ",", "17709", ",", "17712", ",", "17715", ",", 
   "17718", ",", "17721", ",", "17724", ",", "17727", ",", "17730", ",", 
   "17733", ",", "17736", ",", "17739", ",", "17742", ",", "17745", ",", 
   "17748", ",", "17751", ",", "17754", ",", "17757", ",", "17760", ",", 
   "17763", ",", "17766", ",", "17769", ",", "17772", ",", "17775", ",", 
   "17778", ",", "17781", ",", "17784", ",", "17787", ",", "17790", ",", 
   "17793", ",", "17796", ",", "17799", ",", "17802", ",", "17805", ",", 
   "17808", ",", "17811", ",", "17814", ",", "17817", ",", "17820", ",", 
   "17823", ",", "17826", ",", "17829", ",", "17832", ",", "17835", ",", 
   "17838", ",", "17841", ",", "17844", ",", "17847", ",", "17850", ",", 
   "17853", ",", "17856", ",", "17859", ",", "17862", ",", "17865", ",", 
   "17868", ",", "17871", ",", "17874", ",", "17877", ",", "17880", ",", 
   "17883", ",", "17886", ",", "17889", ",", "17892", ",", "17895", ",", 
   "17898", ",", "17901", ",", "17904", ",", "17907", ",", "17910", ",", 
   "17913", ",", "17916", ",", "17919", ",", "17922", ",", "17925", ",", 
   "17928", ",", "17931", ",", "17934", ",", "17937", ",", "17940", ",", 
   "17943", ",", "17946", ",", "17949", ",", "17952", ",", "17955", ",", 
   "17958", ",", "17961", ",", "17964", ",", "17967", ",", "17970", ",", 
   "17973", ",", "17976", ",", "17979", ",", "17982", ",", "17985", ",", 
   "17988", ",", "17991", ",", "17994", ",", "17997", ",", "18000", ",", 
   "18003", ",", "18006", ",", "18009", ",", "18012", ",", "18015", ",", 
   "18018", ",", "18021", ",", "18024", ",", "18027", ",", "18030", ",", 
   "18033", ",", "18036", ",", "18039", ",", "18042", ",", "18045", ",", 
   "18048", ",", "18051", ",", "18054", ",", "18057", ",", "18060", ",", 
   "18063", ",", "18066", ",", "18069", ",", "18072", ",", "18075", ",", 
   "18078", ",", "18081", ",", "18084", ",", "18087", ",", "18090", ",", 
   "18093", ",", "18096", ",", "18099", ",", "18102", ",", "18105", ",", 
   "18108", ",", "18111", ",", "18114", ",", "18117", ",", "18120", ",", 
   "18123", ",", "18126", ",", "18129", ",", "18132", ",", "18135", ",", 
   "18138", ",", "18141", ",", "18144", ",", "18147", ",", "18150", ",", 
   "18153", ",", "18156", ",", "18159", ",", "18162", ",", "18165", ",", 
   "18168", ",", "18171", ",", "18174", ",", "18177", ",", "18180", ",", 
   "18183", ",", "18186", ",", "18189", ",", "18192", ",", "18195", ",", 
   "18198", ",", "18201", ",", "18204", ",", "18207", ",", "18210", ",", 
   "18213", ",", "18216", ",", "18219", ",", "18222", ",", "18225", ",", 
   "18228", ",", "18231", ",", "18234", ",", "18237", ",", "18240", ",", 
   "18243", ",", "18246", ",", "18249", ",", "18252", ",", "18255", ",", 
   "18258", ",", "18261", ",", "18264", ",", "18267", ",", "18270", ",", 
   "18273", ",", "18276", ",", "18279", ",", "18282", ",", "18285", ",", 
   "18288", ",", "18291", ",", "18294", ",", "18297", ",", "18300", ",", 
   "18303", ",", "18306", ",", "18309", ",", "18312", ",", "18315", ",", 
   "18318", ",", "18321", ",", "18324", ",", "18327", ",", "18330", ",", 
   "18333", ",", "18336", ",", "18339", ",", "18342", ",", "18345", ",", 
   "18348", ",", "18351", ",", "18354", ",", "18357", ",", "18360", ",", 
   "18363", ",", "18366", ",", "18369", ",", "18372", ",", "18375", ",", 
   "18378", ",", "18381", ",", "18384", ",", "18387", ",", "18390", ",", 
   "18393", ",", "18396", ",", "18399", ",", "18402", ",", "18405", ",", 
   "18408", ",", "18411", ",", "18414", ",", "18417", ",", "18420", ",", 
   "18423", ",", "18426", ",", "18429", ",", "18432", ",", "18435", ",", 
   "18438", ",", "18441", ",", "18444", ",", "18447", ",", "18450", ",", 
   "18453", ",", "18456", ",", "18459", ",", "18462", ",", "18465", ",", 
   "18468", ",", "18471", ",", "18474", ",", "18477", ",", "18480", ",", 
   "18483", ",", "18486", ",", "18489", ",", "18492", ",", "18495", ",", 
   "18498", ",", "18501", ",", "18504", ",", "18507", ",", "18510", ",", 
   "18513", ",", "18516", ",", "18519", ",", "18522", ",", "18525", ",", 
   "18528", ",", "18531", ",", "18534", ",", "18537", ",", "18540", ",", 
   "18543", ",", "18546", ",", "18549", ",", "18552", ",", "18555", ",", 
   "18558", ",", "18561", ",", "18564", ",", "18567", ",", "18570", ",", 
   "18573", ",", "18576", ",", "18579", ",", "18582", ",", "18585", ",", 
   "18588", ",", "18591", ",", "18594", ",", "18597", ",", "18600", ",", 
   "18603", ",", "18606", ",", "18609", ",", "18612", ",", "18615", ",", 
   "18618", ",", "18621", ",", "18624", ",", "18627", ",", "18630", ",", 
   "18633", ",", "18636", ",", "18639", ",", "18642", ",", "18645", ",", 
   "18648", ",", "18651", ",", "18654", ",", "18657", ",", "18660", ",", 
   "18663", ",", "18666", ",", "18669", ",", "18672", ",", "18675", ",", 
   "18678", ",", "18681", ",", "18684", ",", "18687", ",", "18690", ",", 
   "18693", ",", "18696", ",", "18699", ",", "18702", ",", "18705", ",", 
   "18708", ",", "18711", ",", "18714", ",", "18717", ",", "18720", ",", 
   "18723", ",", "18726", ",", "18729", ",", "18732", ",", "18735", ",", 
   "18738", ",", "18741", ",", "18744", ",", "18747", ",", "18750", ",", 
   "18753", ",", "18756", ",", "18759", ",", "18762", ",", "18765", ",", 
   "18768", ",", "18771", ",", "18774", ",", "18777", ",", "18780", ",", 
   "18783", ",", "18786", ",", "18789", ",", "18792", ",", "18795", ",", 
   "18798", ",", "18801", ",", "18804", ",", "18807", ",", "18810", ",", 
   "18813", ",", "18816", ",", "18819", ",", "18822", ",", "18825", ",", 
   "18828", ",", "18831", ",", "18834", ",", "18837", ",", "18840", ",", 
   "18843", ",", "18846", ",", "18849", ",", "18852", ",", "18855", ",", 
   "18858", ",", "18861", ",", "18864", ",", "18867", ",", "18870", ",", 
   "18873", ",", "18876", ",", "18879", ",", "18882", ",", "18885", ",", 
   "18888", ",", "18891", ",", "18894", ",", "18897", ",", "18900", ",", 
   "18903", ",", "18906", ",", "18909", ",", "18912", ",", "18915", ",", 
   "18918", ",", "18921", ",", "18924", ",", "18927", ",", "18930", ",", 
   "18933", ",", "18936", ",", "18939", ",", "18942", ",", "18945", ",", 
   "18948", ",", "18951", ",", "18954", ",", "18957", ",", "18960", ",", 
   "18963", ",", "18966", ",", "18969", ",", "18972", ",", "18975", ",", 
   "18978", ",", "18981", ",", "18984", ",", "18987", ",", "18990", ",", 
   "18993", ",", "18996", ",", "18999", ",", "19002", ",", "19005", ",", 
   "19008", ",", "19011", ",", "19014", ",", "19017", ",", "19020", ",", 
   "19023", ",", "19026", ",", "19029", ",", "19032", ",", "19035", ",", 
   "19038", ",", "19041", ",", "19044", ",", "19047", ",", "19050", ",", 
   "19053", ",", "19056", ",", "19059", ",", "19062", ",", "19065", ",", 
   "19068", ",", "19071", ",", "19074", ",", "19077", ",", "19080", ",", 
   "19083", ",", "19086", ",", "19089", ",", "19092", ",", "19095", ",", 
   "19098", ",", "19101", ",", "19104", ",", "19107", ",", "19110", ",", 
   "19113", ",", "19116", ",", "19119", ",", "19122", ",", "19125", ",", 
   "19128", ",", "19131", ",", "19134", ",", "19137", ",", "19140", ",", 
   "19143", ",", "19146", ",", "19149", ",", "19152", ",", "19155", ",", 
   "19158", ",", "19161", ",", "19164", ",", "19167", ",", "19170", ",", 
   "19173", ",", "19176", ",", "19179", ",", "19182", ",", "19185", ",", 
   "19188", ",", "19191", ",", "19194", ",", "19197", ",", "19200", ",", 
   "19203", ",", "19206", ",", "19209", ",", "19212", ",", "19215", ",", 
   "19218", ",", "19221", ",", "19224", ",", "19227", ",", "19230", ",", 
   "19233", ",", "19236", ",", "19239", ",", "19242", ",", "19245", ",", 
   "19248", ",", "19251", ",", "19254", ",", "19257", ",", "19260", ",", 
   "19263", ",", "19266", ",", "19269", ",", "19272", ",", "19275", ",", 
   "19278", ",", "19281", ",", "19284", ",", "19287", ",", "19290", ",", 
   "19293", ",", "19296", ",", "19299", ",", "19302", ",", "19305", ",", 
   "19308", ",", "19311", ",", "19314", ",", "19317", ",", "19320", ",", 
   "19323", ",", "19326", ",", "19329", ",", "19332", ",", "19335", ",", 
   "19338", ",", "19341", ",", "19344", ",", "19347", ",", "19350", ",", 
   "19353", ",", "19356", ",", "19359", ",", "19362", ",", "19365", ",", 
   "19368", ",", "19371", ",", "19374", ",", "19377", ",", "19380", ",", 
   "19383", ",", "19386", ",", "19389", ",", "19392", ",", "19395", ",", 
   "19398", ",", "19401", ",", "19404", ",", "19407", ",", "19410", ",", 
   "19413", ",", "19416", ",", "19419", ",", "19422", ",", "19425", ",", 
   "19428", ",", "19431", ",", "19434", ",", "19437", ",", "19440", ",", 
   "19443", ",", "19446", ",", "19449", ",", "19452", ",", "19455", ",", 
   "19458", ",", "19461", ",", "19464", ",", "19467", ",", "19470", ",", 
   "19473", ",", "19476", ",", "19479", ",", "19482", ",", "19485", ",", 
   "19488", ",", "19491", ",", "19494", ",", "19497", ",", "19500", ",", 
   "19503", ",", "19506", ",", "19509", ",", "19512", ",", "19515", ",", 
   "19518", ",", "19521", ",", "19524", ",", "19527", ",", "19530", ",", 
   "19533", ",", "19536", ",", "19539", ",", "19542", ",", "19545", ",", 
   "19548", ",", "19551", ",", "19554", ",", "19557", ",", "19560", ",", 
   "19563", ",", "19566", ",", "19569", ",", "19572", ",", "19575", ",", 
   "19578", ",", "19581", ",", "19584", ",", "19587", ",", "19590", ",", 
   "19593", ",", "19596", ",", "19599", ",", "19602", ",", "19605", ",", 
   "19608", ",", "19611", ",", "19614", ",", "19617", ",", "19620", ",", 
   "19623", ",", "19626", ",", "19629", ",", "19632", ",", "19635", ",", 
   "19638", ",", "19641", ",", "19644", ",", "19647", ",", "19650", ",", 
   "19653", ",", "19656", ",", "19659", ",", "19662", ",", "19665", ",", 
   "19668", ",", "19671", ",", "19674", ",", "19677", ",", "19680", ",", 
   "19683", ",", "19686", ",", "19689", ",", "19692", ",", "19695", ",", 
   "19698", ",", "19701", ",", "19704", ",", "19707", ",", "19710", ",", 
   "19713", ",", "19716", ",", "19719", ",", "19722", ",", "19725", ",", 
   "19728", ",", "19731", ",", "19734", ",", "19737", ",", "19740", ",", 
   "19743", ",", "19746", ",", "19749", ",", "19752", ",", "19755", ",", 
   "19758", ",", "19761", ",", "19764", ",", "19767", ",", "19770", ",", 
   "19773", ",", "19776", ",", "19779", ",", "19782", ",", "19785", ",", 
   "19788", ",", "19791", ",", "19794", ",", "19797", ",", "19800", ",", 
   "19803", ",", "19806", ",", "19809", ",", "19812", ",", "19815", ",", 
   "19818", ",", "19821", ",", "19824", ",", "19827", ",", "19830", ",", 
   "19833", ",", "19836", ",", "19839", ",", "19842", ",", "19845", ",", 
   "19848", ",", "19851", ",", "19854", ",", "19857", ",", "19860", ",", 
   "19863", ",", "19866", ",", "19869", ",", "19872", ",", "19875", ",", 
   "19878", ",", "19881", ",", "19884", ",", "19887", ",", "19890", ",", 
   "19893", ",", "19896", ",", "19899", ",", "19902", ",", "19905", ",", 
   "19908", ",", "19911", ",", "19914", ",", "19917", ",", "19920", ",", 
   "19923", ",", "19926", ",", "19929", ",", "19932", ",", "19935", ",", 
   "19938", ",", "19941", ",", "19944", ",", "19947", ",", "19950", ",", 
   "19953", ",", "19956", ",", "19959", ",", "19962", ",", "19965", ",", 
   "19968", ",", "19971", ",", "19974", ",", "19977", ",", "19980", ",", 
   "19983", ",", "19986", ",", "19989", ",", "19992", ",", "19995", ",", 
   "19998", ",", "20001", ",", "20004", ",", "20007", ",", "20010", ",", 
   "20013", ",", "20016", ",", "20019", ",", "20022", ",", "20025", ",", 
   "20028", ",", "20031", ",", "20034", ",", "20037", ",", "20040", ",", 
   "20043", ",", "20046", ",", "20049", ",", "20052", ",", "20055", ",", 
   "20058", ",", "20061", ",", "20064", ",", "20067", ",", "20070", ",", 
   "20073", ",", "20076", ",", "20079", ",", "20082", ",", "20085", ",", 
   "20088", ",", "20091", ",", "20094", ",", "20097", ",", "20100", ",", 
   "20103", ",", "20106", ",", "20109", ",", "20112", ",", "20115", ",", 
   "20118", ",", "20121", ",", "20124", ",", "20127", ",", "20130", ",", 
   "20133", ",", "20136", ",", "20139", ",", "20142", ",", "20145", ",", 
   "20148", ",", "20151", ",", "20154", ",", "20157", ",", "20160", ",", 
   "20163", ",", "20166", ",", "20169", ",", "20172", ",", "20175", ",", 
   "20178", ",", "20181", ",", "20184", ",", "20187", ",", "20190", ",", 
   "20193", ",", "20196", ",", "20199", ",", "20202", ",", "20205", ",", 
   "20208", ",", "20211", ",", "20214", ",", "20217", ",", "20220", ",", 
   "20223", ",", "20226", ",", "20229", ",", "20232", ",", "20235", ",", 
   "20238", ",", "20241", ",", "20244", ",", "20247", ",", "20250", ",", 
   "20253", ",", "20256", ",", "20259", ",", "20262", ",", "20265", ",", 
   "20268", ",", "20271", ",", "20274", ",", "20277", ",", "20280", ",", 
   "20283", ",", "20286", ",", "20289", ",", "20292", ",", "20295", ",", 
   "20298", ",", "20301", ",", "20304", ",", "20307", ",", "20310", ",", 
   "20313", ",", "20316", ",", "20319", ",", "20322", ",", "20325", ",", 
   "20328", ",", "20331", ",", "20334", ",", "20337", ",", "20340", ",", 
   "20343", ",", "20346", ",", "20349", ",", "20352", ",", "20355", ",", 
   "20358", ",", "20361", ",", "20364", ",", "20367", ",", "20370", ",", 
   "20373", ",", "20376", ",", "20379", ",", "20382", ",", "20385", ",", 
   "20388", ",", "20391", ",", "20394", ",", "20397", ",", "20400", ",", 
   "20403", ",", "20406", ",", "20409", ",", "20412", ",", "20415", ",", 
   "20418", ",", "20421", ",", "20424", ",", "20427", ",", "20430", ",", 
   "20433", ",", "20436", ",", "20439", ",", "20442", ",", "20445", ",", 
   "20448", ",", "20451", ",", "20454", ",", "20457", ",", "20460", ",", 
   "20463", ",", "20466", ",", "20469", ",", "20472", ",", "20475", ",", 
   "20478", ",", "20481", ",", "20484", ",", "20487", ",", "20490", ",", 
   "20493", ",", "20496", ",", "20499", ",", "20502", ",", "20505", ",", 
   "20508", ",", "20511", ",", "20514", ",", "20517", ",", "20520", ",", 
   "20523", ",", "20526", ",", "20529", ",", "20532", ",", "20535", ",", 
   "20538", ",", "20541", ",", "20544", ",", "20547", ",", "20550", ",", 
   "20553", ",", "20556", ",", "20559", ",", "20562", ",", "20565", ",", 
   "20568", ",", "20571", ",", "20574", ",", "20577", ",", "20580", ",", 
   "20583", ",", "20586", ",", "20589", ",", "20592", ",", "20595", ",", 
   "20598", ",", "20601", ",", "20604", ",", "20607", ",", "20610", ",", 
   "20613", ",", "20616", ",", "20619", ",", "20622", ",", "20625", ",", 
   "20628", ",", "20631", ",", "20634", ",", "20637", ",", "20640", ",", 
   "20643", ",", "20646", ",", "20649", ",", "20652", ",", "20655", ",", 
   "20658", ",", "20661", ",", "20664", ",", "20667", ",", "20670", ",", 
   "20673", ",", "20676", ",", "20679", ",", "20682", ",", "20685", ",", 
   "20688", ",", "20691", ",", "20694", ",", "20697", ",", "20700", ",", 
   "20703", ",", "20706", ",", "20709", ",", "20712", ",", "20715", ",", 
   "20718", ",", "20721", ",", "20724", ",", "20727", ",", "20730", ",", 
   "20733", ",", "20736", ",", "20739", ",", "20742", ",", "20745", ",", 
   "20748", ",", "20751", ",", "20754", ",", "20757", ",", "20760", ",", 
   "20763", ",", "20766", ",", "20769", ",", "20772", ",", "20775", ",", 
   "20778", ",", "20781", ",", "20784", ",", "20787", ",", "20790", ",", 
   "20793", ",", "20796", ",", "20799", ",", "20802", ",", "20805", ",", 
   "20808", ",", "20811", ",", "20814", ",", "20817", ",", "20820", ",", 
   "20823", ",", "20826", ",", "20829", ",", "20832", ",", "20835", ",", 
   "20838", ",", "20841", ",", "20844", ",", "20847", ",", "20850", ",", 
   "20853", ",", "20856", ",", "20859", ",", "20862", ",", "20865", ",", 
   "20868", ",", "20871", ",", "20874", ",", "20877", ",", "20880", ",", 
   "20883", ",", "20886", ",", "20889", ",", "20892", ",", "20895", ",", 
   "20898", ",", "20901", ",", "20904", ",", "20907", ",", "20910", ",", 
   "20913", ",", "20916", ",", "20919", ",", "20922", ",", "20925", ",", 
   "20928", ",", "20931", ",", "20934", ",", "20937", ",", "20940", ",", 
   "20943", ",", "20946", ",", "20949", ",", "20952", ",", "20955", ",", 
   "20958", ",", "20961", ",", "20964", ",", "20967", ",", "20970", ",", 
   "20973", ",", "20976", ",", "20979", ",", "20982", ",", "20985", ",", 
   "20988", ",", "20991", ",", "20994", ",", "20997", ",", "21000", ",", 
   "21003", ",", "21006", ",", "21009", ",", "21012", ",", "21015", ",", 
   "21018", ",", "21021", ",", "21024", ",", "21027", ",", "21030", ",", 
   "21033", ",", "21036", ",", "21039", ",", "21042", ",", "21045", ",", 
   "21048", ",", "21051", ",", "21054", ",", "21057", ",", "21060", ",", 
   "21063", ",", "21066", ",", "21069", ",", "21072", ",", "21075", ",", 
   "21078", ",", "21081", ",", "21084", ",", "21087", ",", "21090", ",", 
   "21093", ",", "21096", ",", "21099", ",", "21102", ",", "21105", ",", 
   "21108", ",", "21111", ",", "21114", ",", "21117", ",", "21120", ",", 
   "21123", ",", "21126", ",", "21129", ",", "21132", ",", "21135", ",", 
   "21138", ",", "21141", ",", "21144", ",", "21147", ",", "21150", ",", 
   "21153", ",", "21156", ",", "21159", ",", "21162", ",", "21165", ",", 
   "21168", ",", "21171", ",", "21174", ",", "21177", ",", "21180", ",", 
   "21183", ",", "21186", ",", "21189", ",", "21192", ",", "21195", ",", 
   "21198", ",", "21201", ",", "21204", ",", "21207", ",", "21210", ",", 
   "21213", ",", "21216", ",", "21219", ",", "21222", ",", "21225", ",", 
   "21228", ",", "21231", ",", "21234", ",", "21237", ",", "21240", ",", 
   "21243", ",", "21246", ",", "21249", ",", "21252", ",", "21255", ",", 
   "21258", ",", "21261", ",", "21264", ",", "21267", ",", "21270", ",", 
   "21273", ",", "21276", ",", "21279", ",", "21282", ",", "21285", ",", 
   "21288", ",", "21291", ",", "21294", ",", "21297", ",", "21300", ",", 
   "21303", ",", "21306", ",", "21309", ",", "21312", ",", "21315", ",", 
   "21318", ",", "21321", ",", "21324", ",", "21327", ",", "21330", ",", 
   "21333", ",", "21336", ",", "21339", ",", "21342", ",", "21345", ",", 
   "21348", ",", "21351", ",", "21354", ",", "21357", ",", "21360", ",", 
   "21363", ",", "21366", ",", "21369", ",", "21372", ",", "21375", ",", 
   "21378", ",", "21381", ",", "21384", ",", "21387", ",", "21390", ",", 
   "21393", ",", "21396", ",", "21399", ",", "21402", ",", "21405", ",", 
   "21408", ",", "21411", ",", "21414", ",", "21417", ",", "21420", ",", 
   "21423", ",", "21426", ",", "21429", ",", "21432", ",", "21435", ",", 
   "21438", ",", "21441", ",", "21444", ",", "21447", ",", "21450", ",", 
   "21453", ",", "21456", ",", "21459", ",", "21462", ",", "21465", ",", 
   "21468", ",", "21471", ",", "21474", ",", "21477", ",", "21480", ",", 
   "21483", ",", "21486", ",", "21489", ",", "21492", ",", "21495", ",", 
   "21498", ",", "21501", ",", "21504", ",", "21507", ",", "21510", ",", 
   "21513", ",", "21516", ",", "21519", ",", "21522", ",", "21525", ",", 
   "21528", ",", "21531", ",", "21534", ",", "21537", ",", "21540", ",", 
   "21543", ",", "21546", ",", "21549", ",", "21552", ",", "21555", ",", 
   "21558", ",", "21561", ",", "21564", ",", "21567", ",", "21570", ",", 
   "21573", ",", "21576", ",", "21579", ",", "21582", ",", "21585", ",", 
   "21588", ",", "21591", ",", "21594", ",", "21597", ",", "21600", ",", 
   "21603", ",", "21606", ",", "21609", ",", "21612", ",", "21615", ",", 
   "21618", ",", "21621", ",", "21624", ",", "21627", ",", "21630", ",", 
   "21633", ",", "21636", ",", "21639", ",", "21642", ",", "21645", ",", 
   "21648", ",", "21651", ",", "21654", ",", "21657", ",", "21660", ",", 
   "21663", ",", "21666", ",", "21669", ",", "21672", ",", "21675", ",", 
   "21678", ",", "21681", ",", "21684", ",", "21687", ",", "21690", ",", 
   "21693", ",", "21696", ",", "21699", ",", "21702", ",", "21705", ",", 
   "21708", ",", "21711", ",", "21714", ",", "21717", ",", "21720", ",", 
   "21723", ",", "21726", ",", "21729", ",", "21732", ",", "21735", ",", 
   "21738", ",", "21741", ",", "21744", ",", "21747", ",", "21750", ",", 
   "21753", ",", "21756", ",", "21759", ",", "21762", ",", "21765", ",", 
   "21768", ",", "21771", ",", "21774", ",", "21777", ",", "21780", ",", 
   "21783", ",", "21786", ",", "21789", ",", "21792", ",", "21795", ",", 
   "21798", ",", "21801", ",", "21804", ",", "21807", ",", "21810", ",", 
   "21813", ",", "21816", ",", "21819", ",", "21822", ",", "21825", ",", 
   "21828", ",", "21831", ",", "21834", ",", "21837", ",", "21840", ",", 
   "21843", ",", "21846", ",", "21849", ",", "21852", ",", "21855", ",", 
   "21858", ",", "21861", ",", "21864", ",", "21867", ",", "21870", ",", 
   "21873", ",", "21876", ",", "21879", ",", "21882", ",", "21885", ",", 
   "21888", ",", "21891", ",", "21894", ",", "21897", ",", "21900", ",", 
   "21903", ",", "21906", ",", "21909", ",", "21912", ",", "21915", ",", 
   "21918", ",", "21921", ",", "21924", ",", "21927", ",", "21930", ",", 
   "21933", ",", "21936", ",", "21939", ",", "21942", ",", "21945", ",", 
   "21948", ",", "21951", ",", "21954", ",", "21957", ",", "21960", ",", 
   "21963", ",", "21966", ",", "21969", ",", "21972", ",", "21975", ",", 
   "21978", ",", "21981", ",", "21984", ",", "21987", ",", "21990", ",", 
   "21993", ",", "21996", ",", "21999", ",", "22002", ",", "22005", ",", 
   "22008", ",", "22011", ",", "22014", ",", "22017", ",", "22020", ",", 
   "22023", ",", "22026", ",", "22029", ",", "22032", ",", "22035", ",", 
   "22038", ",", "22041", ",", "22044", ",", "22047", ",", "22050", ",", 
   "22053", ",", "22056", ",", "22059", ",", "22062", ",", "22065", ",", 
   "22068", ",", "22071", ",", "22074", ",", "22077", ",", "22080", ",", 
   "22083", ",", "22086", ",", "22089", ",", "22092", ",", "22095", ",", 
   "22098", ",", "22101", ",", "22104", ",", "22107", ",", "22110", ",", 
   "22113", ",", "22116", ",", "22119", ",", "22122", ",", "22125", ",", 
   "22128", ",", "22131", ",", "22134", ",", "22137", ",", "22140", ",", 
   "22143", ",", "22146", ",", "22149", ",", "22152", ",", "22155", ",", 
   "22158", ",", "22161", ",", "22164", ",", "22167", ",", "22170", ",", 
   "22173", ",", "22176", ",", "22179", ",", "22182", ",", "22185", ",", 
   "22188", ",", "22191", ",", "22194", ",", "22197", ",", "22200", ",", 
   "22203", ",", "22206", ",", "22209", ",", "22212", ",", "22215", ",", 
   "22218", ",", "22221", ",", "22224", ",", "22227", ",", "22230", ",", 
   "22233", ",", "22236", ",", "22239", ",", "22242", ",", "22245", ",", 
   "22248", ",", "22251", ",", "22254", ",", "22257", ",", "22260", ",", 
   "22263", ",", "22266", ",", "22269", ",", "22272", ",", "22275", ",", 
   "22278", ",", "22281", ",", "22284", ",", "22287", ",", "22290", ",", 
   "22293", ",", "22296", ",", "22299", ",", "22302", ",", "22305", ",", 
   "22308", ",", "22311", ",", "22314", ",", "22317", ",", "22320", ",", 
   "22323", ",", "22326", ",", "22329", ",", "22332", ",", "22335", ",", 
   "22338", ",", "22341", ",", "22344", ",", "22347", ",", "22350", ",", 
   "22353", ",", "22356", ",", "22359", ",", "22362", ",", "22365", ",", 
   "22368", ",", "22371", ",", "22374", ",", "22377", ",", "22380", ",", 
   "22383", ",", "22386", ",", "22389", ",", "22392", ",", "22395", ",", 
   "22398", ",", "22401", ",", "22404", ",", "22407", ",", "22410", ",", 
   "22413", ",", "22416", ",", "22419", ",", "22422", ",", "22425", ",", 
   "22428", ",", "22431", ",", "22434", ",", "22437", ",", "22440", ",", 
   "22443", ",", "22446", ",", "22449", ",", "22452", ",", "22455", ",", 
   "22458", ",", "22461", ",", "22464", ",", "22467", ",", "22470", ",", 
   "22473", ",", "22476", ",", "22479", ",", "22482", ",", "22485", ",", 
   "22488", ",", "22491", ",", "22494", ",", "22497", ",", "22500", ",", 
   "22503", ",", "22506", ",", "22509", ",", "22512", ",", "22515", ",", 
   "22518", ",", "22521", ",", "22524", ",", "22527", ",", "22530", ",", 
   "22533", ",", "22536", ",", "22539", ",", "22542", ",", "22545", ",", 
   "22548", ",", "22551", ",", "22554", ",", "22557", ",", "22560", ",", 
   "22563", ",", "22566", ",", "22569", ",", "22572", ",", "22575", ",", 
   "22578", ",", "22581", ",", "22584", ",", "22587", ",", "22590", ",", 
   "22593", ",", "22596", ",", "22599", ",", "22602", ",", "22605", ",", 
   "22608", ",", "22611", ",", "22614", ",", "22617", ",", "22620", ",", 
   "22623", ",", "22626", ",", "22629", ",", "22632", ",", "22635", ",", 
   "22638", ",", "22641", ",", "22644", ",", "22647", ",", "22650", ",", 
   "22653", ",", "22656", ",", "22659", ",", "22662", ",", "22665", ",", 
   "22668", ",", "22671", ",", "22674", ",", "22677", ",", "22680", ",", 
   "22683", ",", "22686", ",", "22689", ",", "22692", ",", "22695", ",", 
   "22698", ",", "22701", ",", "22704", ",", "22707", ",", "22710", ",", 
   "22713", ",", "22716", ",", "22719", ",", "22722", ",", "22725", ",", 
   "22728", ",", "22731", ",", "22734", ",", "22737", ",", "22740", ",", 
   "22743", ",", "22746", ",", "22749", ",", "22752", ",", "22755", ",", 
   "22758", ",", "22761", ",", "22764", ",", "22767", ",", "22770", ",", 
   "22773", ",", "22776", ",", "22779", ",", "22782", ",", "22785", ",", 
   "22788", ",", "22791", ",", "22794", ",", "22797", ",", "22800", ",", 
   "22803", ",", "22806", ",", "22809", ",", "22812", ",", "22815", ",", 
   "22818", ",", "22821", ",", "22824", ",", "22827", ",", "22830", ",", 
   "22833", ",", "22836", ",", "22839", ",", "22842", ",", "22845", ",", 
   "22848", ",", "22851", ",", "22854", ",", "22857", ",", "22860", ",", 
   "22863", ",", "22866", ",", "22869", ",", "22872", ",", "22875", ",", 
   "22878", ",", "22881", ",", "22884", ",", "22887", ",", "22890", ",", 
   "22893", ",", "22896", ",", "22899", ",", "22902", ",", "22905", ",", 
   "22908", ",", "22911", ",", "22914", ",", "22917", ",", "22920", ",", 
   "22923", ",", "22926", ",", "22929", ",", "22932", ",", "22935", ",", 
   "22938", ",", "22941", ",", "22944", ",", "22947", ",", "22950", ",", 
   "22953", ",", "22956", ",", "22959", ",", "22962", ",", "22965", ",", 
   "22968", ",", "22971", ",", "22974", ",", "22977", ",", "22980", ",", 
   "22983", ",", "22986", ",", "22989", ",", "22992", ",", "22995", ",", 
   "22998", ",", "23001", ",", "23004", ",", "23007", ",", "23010", ",", 
   "23013", ",", "23016", ",", "23019", ",", "23022", ",", "23025", ",", 
   "23028", ",", "23031", ",", "23034", ",", "23037", ",", "23040", ",", 
   "23043", ",", "23046", ",", "23049", ",", "23052", ",", "23055", ",", 
   "23058", ",", "23061", ",", "23064", ",", "23067", ",", "23070", ",", 
   "23073", ",", "23076", ",", "23079", ",", "23082", ",", "23085", ",", 
   "23088", ",", "23091", ",", "23094", ",", "23097", ",", "23100", ",", 
   "23103", ",", "23106", ",", "23109", ",", "23112", ",", "23115", ",", 
   "23118", ",", "23121", ",", "23124", ",", "23127", ",", "23130", ",", 
   "23133", ",", "23136", ",", "23139", ",", "23142", ",", "23145", ",", 
   "23148", ",", "23151", ",", "23154", ",", "23157", ",", "23160", ",", 
   "23163", ",", "23166", ",", "23169", ",", "23172", ",", "23175", ",", 
   "23178", ",", "23181", ",", "23184", ",", "23187", ",", "23190", ",", 
   "23193", ",", "23196", ",", "23199", ",", "23202", ",", "23205", ",", 
   "23208", ",", "23211", ",", "23214", ",", "23217", ",", "23220", ",", 
   "23223", ",", "23226", ",", "23229", ",", "23232", ",", "23235", ",", 
   "23238", ",", "23241", ",", "23244", ",", "23247", ",", "23250", ",", 
   "23253", ",", "23256", ",", "23259", ",", "23262", ",", "23265", ",", 
   "23268", ",", "23271", ",", "23274", ",", "23277", ",", "23280", ",", 
   "23283", ",", "23286", ",", "23289", ",", "23292", ",", "23295", ",", 
   "23298", ",", "23301", ",", "23304", ",", "23307", ",", "23310", ",", 
   "23313", ",", "23316", ",", "23319", ",", "23322", ",", "23325", ",", 
   "23328", ",", "23331", ",", "23334", ",", "23337", ",", "23340", ",", 
   "23343", ",", "23346", ",", "23349", ",", "23352", ",", "23355", ",", 
   "23358", ",", "23361", ",", "23364", ",", "23367", ",", "23370", ",", 
   "23373", ",", "23376", ",", "23379", ",", "23382", ",", "23385", ",", 
   "23388", ",", "23391", ",", "23394", ",", "23397", ",", "23400", ",", 
   "23403", ",", "23406", ",", "23409", ",", "23412", ",", "23415", ",", 
   "23418", ",", "23421", ",", "23424", ",", "23427", ",", "23430", ",", 
   "23433", ",", "23436", ",", "23439", ",", "23442", ",", "23445", ",", 
   "23448", ",", "23451", ",", "23454", ",", "23457", ",", "23460", ",", 
   "23463", ",", "23466", ",", "23469", ",", "23472", ",", "23475", ",", 
   "23478", ",", "23481", ",", "23484", ",", "23487", ",", "23490", ",", 
   "23493", ",", "23496", ",", "23499", ",", "23502", ",", "23505", ",", 
   "23508", ",", "23511", ",", "23514", ",", "23517", ",", "23520", ",", 
   "23523", ",", "23526", ",", "23529", ",", "23532", ",", "23535", ",", 
   "23538", ",", "23541", ",", "23544", ",", "23547", ",", "23550", ",", 
   "23553", ",", "23556", ",", "23559", ",", "23562", ",", "23565", ",", 
   "23568", ",", "23571", ",", "23574", ",", "23577", ",", "23580", ",", 
   "23583", ",", "23586", ",", "23589", ",", "23592", ",", "23595", ",", 
   "23598", ",", "23601", ",", "23604", ",", "23607", ",", "23610", ",", 
   "23613", ",", "23616", ",", "23619", ",", "23622", ",", "23625", ",", 
   "23628", ",", "23631", ",", "23634", ",", "23637", ",", "23640", ",", 
   "23643", ",", "23646", ",", "23649", ",", "23652", ",", "23655", ",", 
   "23658", ",", "23661", ",", "23664", ",", "23667", ",", "23670", ",", 
   "23673", ",", "23676", ",", "23679", ",", "23682", ",", "23685", ",", 
   "23688", ",", "23691", ",", "23694", ",", "23697", ",", "23700", ",", 
   "23703", ",", "23706", ",", "23709", ",", "23712", ",", "23715", ",", 
   "23718", ",", "23721", ",", "23724", ",", "23727", ",", "23730", ",", 
   "23733", ",", "23736", ",", "23739", ",", "23742", ",", "23745", ",", 
   "23748", ",", "23751", ",", "23754", ",", "23757", ",", "23760", ",", 
   "23763", ",", "23766", ",", "23769", ",", "23772", ",", "23775", ",", 
   "23778", ",", "23781", ",", "23784", ",", "23787", ",", "23790", ",", 
   "23793", ",", "23796", ",", "23799", ",", "23802", ",", "23805", ",", 
   "23808", ",", "23811", ",", "23814", ",", "23817", ",", "23820", ",", 
   "23823", ",", "23826", ",", "23829", ",", "23832", ",", "23835", ",", 
   "23838", ",", "23841", ",", "23844", ",", "23847", ",", "23850", ",", 
   "23853", ",", "23856", ",", "23859", ",", "23862", ",", "23865", ",", 
   "23868", ",", "23871", ",", "23874", ",", "23877", ",", "23880", ",", 
   "23883", ",", "23886", ",", "23889", ",", "23892", ",", "23895", ",", 
   "23898", ",", "23901", ",", "23904", ",", "23907", ",", "23910", ",", 
   "23913", ",", "23916", ",", "23919", ",", "23922", ",", "23925", ",", 
   "23928", ",", "23931", ",", "23934", ",", "23937", ",", "23940", ",", 
   "23943", ",", "23946", ",", "23949", ",", "23952", ",", "23955", ",", 
   "23958", ",", "23961", ",", "23964", ",", "23967", ",", "23970", ",", 
   "23973", ",", "23976", ",", "23979", ",", "23982", ",", "23985", ",", 
   "23988", ",", "23991", ",", "23994", ",", "23997", ",", "24000", ",", 
   "24003", ",", "24006", ",", "24009", ",", "24012", ",", "24015", ",", 
   "24018", ",", "24021", ",", "24024", ",", "24027", ",", "24030", ",", 
   "24033", ",", "24036", ",", "24039", ",", "24042", ",", "24045", ",", 
   "24048"}], "}"}]], "Print",
 CellChangeTimes->{3.9397113406599846`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[5]:=",ExpressionUUID->"c5da36b9-71f2-e14c-baef-4faa3a8e353f"]
}, Open  ]],

Cell["\<\
b) Usar un bucle para crear una lista con los 25 primeros m\[UAcute]ltiplos \
de D1D2 + M1M2 .\
\>", "Text",
 CellChangeTimes->{{3.9397099032401047`*^9, 
  3.9397099538502827`*^9}},ExpressionUUID->"4824f6a9-9051-ba42-8b84-\
acd62bb80fb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diaMes", "=", 
   RowBox[{"(", 
    RowBox[{"d1d2", "+", "m1m2"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"listaBMultiplosFor", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listaBMultiplosWhile", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listaBMultiplosDo", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "<=", " ", "25"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"listaBMultiplosFor", ",", " ", 
       RowBox[{"i", " ", "*", " ", "diaMes"}]}], "]"}], ";"}]}], "\n", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"i", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "<=", " ", "25"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"listaBMultiplosWhile", ",", " ", 
       RowBox[{"i", " ", "*", " ", "diaMes"}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"i", "++"}], ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"listaBMultiplosDo", ",", " ", 
      RowBox[{"i", " ", "*", " ", "diaMes"}]}], "]"}], ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "25"}], "}"}]}], "\n", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
    "listaBMultiplosFor", " ", "===", " ", "listaBMultiplosWhile", " ", "===",
      " ", "listaBMultiplosDo"}], ",", "\n", "  ", 
    RowBox[{"Print", "[", "listaBMultiplosFor", "]"}]}], "\n", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9397100035716553`*^9, 3.939710109724226*^9}, {
  3.9397102584496346`*^9, 3.9397102687879047`*^9}, {3.9397103219412823`*^9, 
  3.9397104311484184`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"daf20328-90ac-ec40-98f1-32224b401633"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "18", ",", "27", ",", "36", ",", "45", ",", "54", ",", "63", ",", 
   "72", ",", "81", ",", "90", ",", "99", ",", "108", ",", "117", ",", "126", 
   ",", "135", ",", "144", ",", "153", ",", "162", ",", "171", ",", "180", 
   ",", "189", ",", "198", ",", "207", ",", "216", ",", "225"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.9397104264010334`*^9, 3.939710431474901*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[60]:=",ExpressionUUID->"3469ba60-7394-1947-85ba-8be18dd11f39"]
}, Open  ]],

Cell["\<\
c) Calcular el producto de los m\[UAcute]ltiplos de D1D2 + M1M2 comprendidos \
entre A1A2A3A4 y A1A2A3A4 + 100\
\>", "Text",
 CellChangeTimes->{{3.939710442720684*^9, 
  3.939710502846546*^9}},ExpressionUUID->"0d7ef6b1-f295-ae4a-a404-\
b2ecd1ccc2ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diaMes", "=", 
   RowBox[{"(", 
    RowBox[{"d1d2", "+", "m1m2"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"anyoMas100", "=", 
   RowBox[{"(", 
    RowBox[{"anyo", "+", "100"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"listaCMultiplosFor", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listaCMultiplosWhile", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listaCMultiplosDo", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "anyo"}], ",", " ", 
    RowBox[{"i", " ", "<=", " ", "anyoMas100"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\n", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", " ", "diaMes"}], "]"}], " ", "==", " ", "0"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"listaCMultiplosFor", " ", "*=", " ", "i"}], ";"}]}], "\n", 
     "  ", "]"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"i", " ", "=", " ", "anyo"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "<=", " ", "anyoMas100"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", " ", "diaMes"}], "]"}], " ", "==", " ", "0"}], 
        ",", "\n", "    ", 
        RowBox[{
         RowBox[{"listaCMultiplosWhile", " ", "*=", " ", "i"}], ";"}]}], "\n",
        "  ", "]"}], "\n", "  ", 
      RowBox[{"i", "++"}]}], ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", " ", "diaMes"}], "]"}], " ", "==", " ", "0"}], ",", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"listaCMultiplosDo", " ", "*=", " ", "i"}], ";"}]}], "\n", 
     "  ", "]"}], ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "anyo", ",", " ", "anyoMas100"}], "}"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
    "listaCMultiplosFor", " ", "===", " ", "listaCMultiplosWhile", " ", "===",
      " ", "listaCMultiplosDo"}], ",", "\n", "  ", 
    RowBox[{"Print", "[", "listaCMultiplosFor", "]"}]}], "\n", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.939710512107603*^9, 3.939710544251072*^9}, {
  3.9397106161624203`*^9, 3.9397106349308777`*^9}, {3.9397107045699425`*^9, 
  3.9397108407086143`*^9}, {3.939710888306959*^9, 3.9397109096067257`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"39b60423-1e06-c042-afa6-1cb98f8ac36e"],

Cell[BoxData["2713259615850273646479903734601216000"], "Print",
 CellChangeTimes->{{3.939710906675379*^9, 3.9397109099494286`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[148]:=",ExpressionUUID->"9fc855a5-6fce-ad45-82f6-d6c7bcc9d634"]
}, Open  ]],

Cell["\<\
d) Calcular la suma de los m\[UAcute]ltiplos de D1D2 + M1M2 + 10 comprendidos \
entre A1A2A3A4 y (A1A2A3A4)^2 .\
\>", "Text",
 CellChangeTimes->{{3.9397110176030865`*^9, 
  3.9397110298847885`*^9}},ExpressionUUID->"12d7037d-ab2a-c645-bbb2-\
b18e05fbe41f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diaMesMas10", "=", 
   RowBox[{"(", 
    RowBox[{"d1d2", "+", "m1m2", "+", "10"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"anyoElev2", "=", 
   RowBox[{"(", 
    RowBox[{"anyo", "^", "2"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sumaMultiplosFor", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sumaMultiplosWhile", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sumaMultiplosDo", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "anyo"}], ",", " ", 
    RowBox[{"i", " ", "<=", " ", "anyoElev2"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\n", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", " ", "diaMesMas10"}], "]"}], " ", "==", " ", "0"}], 
      ",", "\n", "    ", 
      RowBox[{
       RowBox[{"sumaMultiplosFor", " ", "+=", " ", "i"}], ";"}]}], "\n", "  ",
      "]"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"i", " ", "=", " ", "anyo"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", " ", "<=", " ", "anyoElev2"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", " ", "diaMesMas10"}], "]"}], " ", "==", " ", 
         "0"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{"sumaMultiplosWhile", " ", "+=", " ", "i"}], ";"}]}], "\n", 
       "  ", "]"}], "\n", "  ", 
      RowBox[{"i", "++"}]}], ";"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"i", ",", " ", "diaMesMas10"}], "]"}], " ", "==", " ", "0"}], 
      ",", "\n", "    ", 
      RowBox[{
       RowBox[{"sumaMultiplosDo", " ", "+=", " ", "i"}], ";"}]}], "\n", "  ", 
     "]"}], ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "anyo", ",", " ", "anyoElev2"}], "}"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
    "sumaMultiplosFor", " ", "===", " ", "sumaMultiplosWhile", " ", "===", 
     " ", "sumaMultiplosDo"}], ",", "\n", "  ", 
    RowBox[{"Print", "[", "sumaMultiplosFor", "]"}]}], "\n", "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9397110405465355`*^9, 3.9397111854030952`*^9}, {
  3.939711290877722*^9, 3.93971130275667*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"65716440-1eb0-c944-ac96-097971af0c5f"],

Cell[BoxData["424432016800"], "Print",
 CellChangeTimes->{3.9397113125430183`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[15]:=",ExpressionUUID->"a48a98db-ac9c-724b-ac4d-4344be858dc1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pr\[AAcute]ctica 4", "Section",
 CellChangeTimes->{{3.9355791003871403`*^9, 3.935579106140892*^9}, {
  3.937272149973419*^9, 
  3.9372721503463287`*^9}},ExpressionUUID->"352e2853-8bf3-ee43-81b2-\
6194aecec6d2"],

Cell[CellGroupData[{

Cell["Ejercicio 5.1", "Subsection",
 CellChangeTimes->{{3.937274739003639*^9, 
  3.9372747516844063`*^9}},ExpressionUUID->"80cc6971-3d84-4148-9cba-\
bb9bd1ba3cf8"],

Cell["\<\
Determina seg\[UAcute]n tu DNI el valor de verdad de la siguiente forma \
enunciativa:\
\>", "Text",
 CellChangeTimes->{{3.9372756912202835`*^9, 
  3.937275715022482*^9}},ExpressionUUID->"d5d8eb14-9617-cc41-83bc-\
669380c4cf32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dni", "=", "26268082"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"termina", " ", "=", " ", 
   RowBox[{"Mod", "[", 
    RowBox[{"dni", ",", "10"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{"dni", ",", "2"}], "]"}], "==", "0"}], " ", "&&", " ", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{"dni", ",", "3"}], "]"}], "==", "0"}], " ", "&&", " ", 
  RowBox[{"(", 
   RowBox[{"termina", "=", 
    RowBox[{
     RowBox[{"1", " ", "||", "termina"}], "=", 
     RowBox[{
      RowBox[{"7", " ", "||", "termina"}], "=", "3"}]}]}], ")"}]}]}], "Code",
 CellChangeTimes->{{3.937275779032543*^9, 3.937275827358551*^9}, {
  3.9372758644500313`*^9, 3.9372758884645996`*^9}, {3.937275959998127*^9, 
  3.93727596039439*^9}, {3.937276025452408*^9, 3.937276051993393*^9}, {
  3.9374844999089565`*^9, 3.937484545772461*^9}, {3.937484582528969*^9, 
  3.9374846694394684`*^9}, {3.9377170019243298`*^9, 3.937717014493061*^9}, {
  3.939719890113657*^9, 3.9397198958039417`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ebe3f747-a8da-0641-adb3-b9ddc1b063ed"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.9377170204876785`*^9, 3.9377170268021717`*^9}, 
   3.939719900239874*^9, 3.939719947393669*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1387f5f3-1242-6743-a12f-41c8021ff419"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 5.2", "Subsection",
 CellChangeTimes->{{3.937484800708235*^9, 
  3.9374848181126194`*^9}},ExpressionUUID->"dd1961c5-1f90-ee42-a144-\
a83054866c71"],

Cell["\<\
Evaluar las siguientes formas enunciativas en las combinaciones de valores de \
verdad indicadas \
\>", "Text",
 CellChangeTimes->{{3.9377170390130672`*^9, 
  3.9377170696481266`*^9}},ExpressionUUID->"55bf2dde-e377-a349-85cf-\
02c040fff6b9"],

Cell["a) \[Not]X1; X1=V", "Text",
 CellChangeTimes->{{3.937717127583124*^9, 3.9377171375432243`*^9}, {
  3.9377172292839622`*^9, 
  3.9377172376364326`*^9}},ExpressionUUID->"c05bc4cf-e53d-9244-a244-\
34fdf947555c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xa", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{"Not", "[", "xa", "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.9377172847648163`*^9, 3.937717305716585*^9}, {
  3.9397198803696785`*^9, 3.939719882296982*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"02bbd81f-615d-db4d-85c7-32c75e2fdbeb"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9377173079850597`*^9, 3.9397199018287773`*^9, 
  3.9397199476269703`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7871c1a2-dac3-974c-abd3-9ad20e3a30fc"]
}, Open  ]],

Cell["b) x1\[Equivalent]x2;x1=V,x2=F", "Text",
 CellChangeTimes->{{3.9377173242229767`*^9, 3.937717348678673*^9}, {
  3.9377173829613075`*^9, 
  3.937717397542721*^9}},ExpressionUUID->"85c8b1d0-c5b4-c443-bab5-\
19a8f164808a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xb1", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xb2", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{"Equivalent", "[", 
   RowBox[{"xb1", ",", "xb2"}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.9377174006268635`*^9, 3.9377174293771477`*^9}, {
  3.9397198658985653`*^9, 3.9397198727301273`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"87f59d59-5956-244e-8b3e-6e71c3e2b0bf"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9377174311946945`*^9, 3.9397199035425816`*^9, 
  3.939719947649521*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ec3e2d20-8f70-ff4c-bb5a-e61b90732b0d"]
}, Open  ]],

Cell["c) ((\[Not]x1)\[And]x2)\[Implies]x3;x1=V,x2=F,x3=V", "Text",
 CellChangeTimes->{{3.937717467206396*^9, 3.9377174758011208`*^9}, {
  3.9377177991846104`*^9, 3.9377178728425426`*^9}, {3.9377179807331448`*^9, 
  3.9377180035212536`*^9}},ExpressionUUID->"2d5a2b45-6651-c84f-8574-\
1f926924e7a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xc1", "=", 
   RowBox[{"xc3", "=", "True"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xc2", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"Not", "[", "xc1", "]"}], ",", "xc2"}], "]"}], ",", "xc3"}], 
   "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.937718059735594*^9, 3.937718153198742*^9}, {
  3.9397198389312057`*^9, 3.9397198549468517`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b7ed8451-dfb0-fc4e-b165-8c540780edcd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.937718154393528*^9, 3.939719905127926*^9, 
  3.9397199476848335`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9703ee61-da66-0846-b330-1abb5d1cf7d6"]
}, Open  ]],

Cell["d) (x1\[Or]x2)\[Equivalent](\[Not]x2);x1=V,x2=v", "Text",
 CellChangeTimes->{{3.9377181792877483`*^9, 3.9377181839310665`*^9}, {
  3.937718214593498*^9, 
  3.937718268138851*^9}},ExpressionUUID->"9427c453-ab6b-5642-bc0b-\
783953b1ba97"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xd1", "=", 
   RowBox[{"xd2", "=", "True"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{"Equivalent", "[", 
   RowBox[{
    RowBox[{"Or", "[", 
     RowBox[{"xd1", ",", "xd1"}], "]"}], ",", 
    RowBox[{"Not", "[", "xd2", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.937718273414116*^9, 3.9377183236010876`*^9}, {
  3.939719825882799*^9, 3.939719832185835*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3e7470a3-f054-1348-9a39-e05891ee8fbe"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9377183278013077`*^9, 3.9397199080040035`*^9, 
  3.9397199477171307`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9d6164f5-1486-2b4c-a68d-bfd55bf854ce"]
}, Open  ]],

Cell["e)[(x1\[Nor]x2)\[Nand](\[Not]x3)]\[Implies](\[Not]x3);x1=V,x2=F,x3=V", \
"Text",
 CellChangeTimes->{{3.9377183437472343`*^9, 
  3.9377184437974854`*^9}},ExpressionUUID->"9b1a271a-54e1-4b49-9604-\
1d8fbab24833"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xe1", "=", 
   RowBox[{"xe3", "=", "True"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xe2", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Nand", "[", 
     RowBox[{
      RowBox[{"Nor", "[", 
       RowBox[{"xe1", ",", "xe2"}], "]"}], ",", 
      RowBox[{"Not", "[", "xe3", "]"}]}], "]"}], ",", 
    RowBox[{"Not", "[", "xe3", "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.937718463365078*^9, 3.9377185693973217`*^9}, {
  3.939719799058922*^9, 3.939719818089636*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"52cecb18-e718-1c4a-b464-91f090de5fce"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.9377185831884174`*^9, 3.939719910169382*^9, 
  3.939719947759527*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"8e03c6d2-96d3-a94a-bfa6-e759682d7e9d"]
}, Open  ]],

Cell["\<\
f)(\[Not]((\[Not](x1\[And]x2))\[Implies]x3))\[Nand](x4\[Or]x5);x5=F y tomando \
el resto de variables cualesquiera valores.\
\>", "Text",
 CellChangeTimes->{{3.9377187820706673`*^9, 3.9377188370135803`*^9}, {
  3.937718958762169*^9, 
  3.937719028670084*^9}},ExpressionUUID->"6e22b120-e44f-7e45-8ede-\
43ae3050e9ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xf1", "=", 
   RowBox[{"xf2", "=", 
    RowBox[{"xf3", "=", 
     RowBox[{"xf4", "=", 
      RowBox[{"xf5", "=", "False"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{"Nand", "[", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"Implies", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"And", "[", 
         RowBox[{"xf1", ",", "xf2"}], "]"}], "]"}], ",", "xf3"}], "]"}], 
     "]"}], ",", 
    RowBox[{"Or", "[", 
     RowBox[{"xf4", ",", "xf5"}], "]"}]}], "]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.9377190979579296`*^9, 3.937719217401659*^9}, {
   3.9397197780831947`*^9, 3.9397197935706882`*^9}, 3.93971995615604*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"3f53598d-9fb3-4647-bf64-739fbea7172d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9397199512307053`*^9, 3.939719956662529*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"107caa4b-f8a1-9f41-8048-e319df3c19eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 5.6", "Subsection",
 CellChangeTimes->{{3.9377193562465096`*^9, 
  3.937719370184719*^9}},ExpressionUUID->"f269d17e-b53e-8c4b-9e93-\
dcc5f72edd20"],

Cell["\<\
Calcular las tablas de verdad de las siguientes formas enunciativas (e,f,j,k):\
\>", "Text",
 CellChangeTimes->{{3.937719377696562*^9, 3.937719400252798*^9}, 
   3.937719480769535*^9},ExpressionUUID->"e40b2819-985a-a143-ad4f-\
c49722bd8c77"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TablaVerdad", "[", 
    RowBox[{"FormaE_", ",", "nombres_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "n", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nombres", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tabla", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"\"\<F\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"2", "^", "n"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"tabla", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "f"}], "]"}], "]"}], "=", 
                "\"\<V\>\""}]}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", 
           RowBox[{
            RowBox[{"tabla", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"n", "+", "1"}]}], "]"}], "]"}], "=", "\"\<V\>\""}]}], 
          "]"}], ";"}], "\[IndentingNewLine]", "   ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Join", "[", 
            RowBox[{"nombres", ",", 
             RowBox[{"{", 
              RowBox[{"FormaE", "[", "nombres", "]"}], "}"}]}], "]"}], "}"}], 
          ",", "tabla"}], "]"}], ",", 
        RowBox[{"Dividers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "True", "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"False", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "2", ",", "n"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "True"}], "}"}]}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "True"}], "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"False", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "2", ",", 
                 RowBox[{"2", "^", "n"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", "True", "}"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Gray"}], ",", 
        RowBox[{"ItemStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"n", "+", "1"}]}], "}"}]}], "}"}], "\[Rule]", 
              RowBox[{"Darker", "[", "Red", "]"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"2", "^", "n"}], "+", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"n", "+", "1"}], ",", 
                  RowBox[{"n", "+", "1"}]}], "}"}]}], "}"}], "\[Rule]", 
              "Bold"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "]"}]}]}], "\n", 
    "]"}]}], ";"}]], "Code",
 CellLabel->"In[21]:=",ExpressionUUID->"00a96271-d9e2-e142-ac99-bb9de217c6ef"],

Cell["e) ((q\[Or]r)\[Implies]((\[Not]r)\[Implies]q))", "Text",
 CellChangeTimes->{{3.9377195063362846`*^9, 3.937719518747614*^9}, {
  3.9377195596266136`*^9, 
  3.9377196016488304`*^9}},ExpressionUUID->"2dc264c5-72f9-1841-9e5e-\
089a5574f483"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fe", "[", 
   RowBox[{"{", 
    RowBox[{"q_", ",", " ", "r_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Or", "[", 
     RowBox[{"q", ",", " ", "r"}], "]"}], ",", " ", 
    RowBox[{"Implies", "[", 
     RowBox[{
      RowBox[{"Not", "[", "r", "]"}], ",", " ", "q"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"fe", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<q\>\"", ",", " ", "\"\<r\>\""}], "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.937720050914566*^9, 3.937720120471899*^9}, {
  3.9394503530750504`*^9, 3.939450356603657*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"c7152d22-8784-6e41-9b3a-1fda8d13ca04"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"q\"\>", "\<\"r\"\>", 
     RowBox[{
      RowBox[{"\<\"q\"\>", "||", "\<\"r\"\>"}], "\[Implies]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "\<\"r\"\>"}], "\[Implies]", "\<\"q\"\>"}], ")"}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, True, True}, 
     "Rows" -> {True, True, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 3}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 5}, {3, 3}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.937720123648617*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"9a23d7ed-a4b4-724e-8cec-6e94d02c939a"]
}, Open  ]],

Cell["f)(((\[Not]p)\[Implies]q)\[Implies](((\[Not]s)\[Implies](\[Not]q))\
\[Implies]p))", "Text",
 CellChangeTimes->{{3.937719617608322*^9, 
  3.937719702925514*^9}},ExpressionUUID->"5bd32501-cad5-4144-ac48-\
3e7f6be5e651"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "s_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Implies", "[", 
     RowBox[{
      RowBox[{"Not", "[", "p", "]"}], ",", " ", "q"}], "]"}], ",", " ", 
    RowBox[{"Implies", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{
        RowBox[{"Not", "[", "s", "]"}], ",", " ", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", " ", "p"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"ff", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", " ", "\"\<q\>\"", ",", " ", "\"\<s\>\""}], 
    "}"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9377201427454453`*^9, 3.937720303757292*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1f05b88f-4b08-9c46-8179-9344b4a2aedd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"q\"\>", "\<\"s\"\>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "\<\"p\"\>"}], "\[Implies]", "\<\"q\"\>"}], ")"}], 
      "\[Implies]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "\<\"s\"\>"}], "\[Implies]", 
          RowBox[{"!", "\<\"q\"\>"}]}], ")"}], "\[Implies]", "\<\"p\"\>"}], 
       ")"}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, False, True, True}, 
     "Rows" -> {
      True, True, False, False, False, False, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 4}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 9}, {4, 4}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9377202946998596`*^9, 3.937720304528387*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"c68d69fa-f284-6940-b6d3-20409f48bb62"]
}, Open  ]],

Cell["j)\[Not](\[Not]((p\[Implies]\[Not](q\[Implies]r))\[Implies]\[Not]((p\
\[Nand]q)\[Nor]r)))", "Text",
 CellChangeTimes->{{3.9377196282573833`*^9, 3.9377196394199047`*^9}, {
  3.9377197316021576`*^9, 3.9377197743036747`*^9}, {3.9377198857987995`*^9, 
  3.937719887231888*^9}, {3.9377199432427406`*^9, 
  3.937720002030876*^9}},ExpressionUUID->"2a952e79-8b13-6644-aadc-\
0c6d00786319"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fj", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Not", "[", 
   RowBox[{"Not", "[", 
    RowBox[{"Implies", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{"p", ",", 
        RowBox[{"Not", "[", 
         RowBox[{"Implies", "[", 
          RowBox[{"q", ",", "r"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Not", "[", 
       RowBox[{"Nor", "[", 
        RowBox[{
         RowBox[{"Nand", "[", 
          RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], "]"}]}], "]"}], 
    "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"fj", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\""}], "}"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.937720321068121*^9, 3.937720376499445*^9}, {
  3.9377205221252766`*^9, 3.9377205488051395`*^9}, {3.9377206197344246`*^9, 
  3.93772062269376*^9}, {3.9377206555463104`*^9, 3.9377207625991573`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"2aa2e15b-549b-304e-bdbb-e698caa8824f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"q\"\>", "\<\"r\"\>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\<\"p\"\>", "\[Implies]", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"\<\"q\"\>", "\[Implies]", "\<\"r\"\>"}], ")"}]}]}], ")"}], 
      "\[Implies]", 
      RowBox[{"!", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\<\"p\"\>", "\[Nand]", "\<\"q\"\>"}], ")"}], 
         "\[Nor]", "\<\"r\"\>"}], ")"}]}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, False, True, True}, 
     "Rows" -> {
      True, True, False, False, False, False, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 4}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 9}, {4, 4}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.937720766410391*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"0f38199d-ae98-6b47-b537-cb194adbe9f6"]
}, Open  ]],

Cell["k)(q\[Implies]p)\[Implies](q\[Equivalent]r)", "Text",
 CellChangeTimes->{{3.937719632242937*^9, 3.9377196365245743`*^9}, {
  3.937720014516918*^9, 
  3.937720037253292*^9}},ExpressionUUID->"913e43f4-f8a8-ca45-8137-\
2092e8c7d12f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fk", "[", 
   RowBox[{"{", 
    RowBox[{"q_", ",", "p_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Implies", "[", 
     RowBox[{"q", ",", "p"}], "]"}], ",", 
    RowBox[{"Equivalent", "[", 
     RowBox[{"q", ",", "r"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"fk", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<s\>\""}], "}"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.9377203816390305`*^9, 3.937720510979641*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"a22b4807-0432-554e-b129-678583f2ac53"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"q\"\>", "\<\"s\"\>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\<\"p\"\>", "\[Implies]", "\<\"q\"\>"}], ")"}], "\[Implies]", 
      RowBox[{"\<\"p\"\>", "\[Equivalent]", "\<\"s\"\>"}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, False, True, True}, 
     "Rows" -> {
      True, True, False, False, False, False, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 4}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 9}, {4, 4}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.937720481780857*^9, 3.9377205135815277`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"eb64e5b0-2cad-8241-8b7e-3ef121264f4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pr\[AAcute]ctica 5", "Section",
 CellChangeTimes->{{3.9355791003871403`*^9, 3.935579106140892*^9}, {
  3.937877185763628*^9, 
  3.937877186159191*^9}},ExpressionUUID->"eba81ee6-07c6-b248-8512-\
88853661c46e"],

Cell["\<\
Copiar la manera de hacer tautolog\[IAcute]a del libro tema 6
Forma enunciativa restringida, tomar apuntes de eso\
\>", "Text",
 CellChangeTimes->{{3.937877521052372*^9, 3.9378775381058197`*^9}, {
  3.9378780532481995`*^9, 
  3.937878070371008*^9}},ExpressionUUID->"d775978b-f8eb-6b44-8691-\
b07ed91100d4"],

Cell[CellGroupData[{

Cell["Ejercicio 6.6", "Subsection",
 CellChangeTimes->{{3.937879136497217*^9, 
  3.937879149088539*^9}},ExpressionUUID->"dc2bee46-ea2b-3143-bf1c-\
3e04dcee13d6"],

Cell["\<\
Estudiar si los siguientes pares de formas enunciativas son \
l\[OAcute]gicamente equivalentes o implican l\[OAcute]gicamente una a la otra:\
\>", "Text",
 CellChangeTimes->{{3.938492976862381*^9, 
  3.9384930257082005`*^9}},ExpressionUUID->"a3c3e8ac-d6a9-9c41-a6a5-\
490d384a1f1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"FormaE_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tautologia", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
           RowBox[{
            RowBox[{"tautologia", "=", "False"}], ";", 
            RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tautologia", "]"}], ";"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"76e2276b-0694-1948-9d22-e79c1e7053e9"],

Cell["a) (p \[Equivalent] q) \[Nor] r, (r \[And] (\[Not] q)) \[Implies] p", \
"Text",
 CellChangeTimes->{{3.9384930292101345`*^9, 3.938493030556761*^9}, {
   3.93849306717441*^9, 3.9384930692624645`*^9}, {3.938493228374031*^9, 
   3.9384932357729893`*^9}, 
   3.9384933552422333`*^9},ExpressionUUID->"7da03db7-b0e7-c042-a14d-\
ee96ec10b37f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Equivalencia", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{"Equivalent", "[", 
    RowBox[{
     RowBox[{"Nor", "[", 
      RowBox[{
       RowBox[{"Equivalent", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], ",", 
     RowBox[{"Implies", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{"r", ",", 
         RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", "p"}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ImplicaAB", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Nor", "[", 
     RowBox[{
      RowBox[{"Equivalent", "[", 
       RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], ",", 
    RowBox[{"Implies", "[", 
     RowBox[{
      RowBox[{"And", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", "p"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ImplicaBA", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Implies", "[", 
     RowBox[{
      RowBox[{"And", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", "p"}], "]"}], ",", 
    RowBox[{"Nor", "[", 
     RowBox[{
      RowBox[{"Equivalent", "[", 
       RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"Equivalencia", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<Son l\[OAcute]gicamente equivalentes\>\"", "]"}], ",", 
   "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<No son l\[OAcute]gicamente equivalentes\>\"", "]"}]}], 
  "\n", "]"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"ImplicaAB", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{"Print", "[", "\"\<A implicaca l\[OAcute]gicamente B\>\"", "]"}], 
   ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<A no implicaca l\[OAcute]gicamente B\>\"", "]"}]}], 
  "\n", "]"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"ImplicaBA", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{"Print", "[", "\"\<B implicaca l\[OAcute]gicamente A\>\"", "]"}], 
   ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<B no implicaca l\[OAcute]gicamente A\>\"", "]"}]}], 
  "\n", "]"}]}], "Code",
 CellChangeTimes->{3.9397245379280453`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"eb981a7b-b920-2e46-8e64-23c69487efe2"],

Cell[CellGroupData[{

Cell[BoxData["\<\"No son l\[OAcute]gicamente equivalentes\"\>"], "Print",
 CellChangeTimes->{3.9384935440508347`*^9, 3.939725197059969*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"a91f63b5-9457-6745-99d0-a1b9a56978c7"],

Cell[BoxData["\<\"A implicaca l\[OAcute]gicamente B\"\>"], "Print",
 CellChangeTimes->{3.9384935440508347`*^9, 3.939725197062504*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"f4e565c5-11af-494e-9a66-88836f3648eb"],

Cell[BoxData["\<\"B no implicaca l\[OAcute]gicamente A\"\>"], "Print",
 CellChangeTimes->{3.9384935440508347`*^9, 3.9397251970644855`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"7ea679c8-bde4-9242-9918-9adb345996de"]
}, Open  ]]
}, Open  ]],

Cell["b)(p\[Implies](\[Not]q))\[Nand]r,\[Not]((p\[And]q)\[Or]r)", "Text",
 CellChangeTimes->{{3.9384933576088676`*^9, 3.938493376645752*^9}, {
  3.9384936078358097`*^9, 
  3.9384936079317207`*^9}},ExpressionUUID->"f8e52563-5ffc-ed41-8c08-\
c58ed8bb10f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Equivalencia", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{"Equivalent", "[", 
    RowBox[{
     RowBox[{"Nand", "[", 
      RowBox[{
       RowBox[{"Implies", "[", 
        RowBox[{"p", ",", 
         RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", "r"}], "]"}], ",", 
     RowBox[{"Not", "[", 
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ImplicaAB", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Nand", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{"p", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", "r"}], "]"}], ",", 
    RowBox[{"Not", "[", 
     RowBox[{"Or", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ImplicaBA", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"Not", "[", 
     RowBox[{"Or", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], "]"}], ",", 
    RowBox[{"Nand", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{"p", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}], ",", "r"}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"Equivalencia", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<Son l\[OAcute]gicamente equivalentes\>\"", "]"}], ",", 
   "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<No son l\[OAcute]gicamente equivalentes\>\"", "]"}]}], 
  "\n", "]"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"ImplicaAB", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{"Print", "[", "\"\<A implicaca l\[OAcute]gicamente B\>\"", "]"}], 
   ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<A no implicaca l\[OAcute]gicamente B\>\"", "]"}]}], 
  "\n", "]"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"ImplicaBA", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{"Print", "[", "\"\<B implicaca l\[OAcute]gicamente A\>\"", "]"}], 
   ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<B no implicaca l\[OAcute]gicamente A\>\"", "]"}]}], 
  "\n", "]"}]}], "Code",
 CellChangeTimes->{{3.9384936182470627`*^9, 3.9384936963847427`*^9}, {
   3.938493854806698*^9, 3.938493865446924*^9}, 3.9384939120776424`*^9, {
   3.9384939558053226`*^9, 3.938493966598589*^9}, 3.9397246021158085`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"7c71a46d-7e39-ac4f-bfa8-4c216571b041"],

Cell[CellGroupData[{

Cell[BoxData["\<\"No son l\[OAcute]gicamente equivalentes\"\>"], "Print",
 CellChangeTimes->{3.938493971581354*^9, 3.9397252272769165`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"f472d18c-724c-f243-a3db-ea22a250beba"],

Cell[BoxData["\<\"A no implicaca l\[OAcute]gicamente B\"\>"], "Print",
 CellChangeTimes->{3.938493971581354*^9, 3.9397252272789*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"0748e4f6-0650-414b-a629-4e5fdea6a6db"],

Cell[BoxData["\<\"B implicaca l\[OAcute]gicamente A\"\>"], "Print",
 CellChangeTimes->{3.938493971581354*^9, 3.939725227286005*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"b46f60cb-9c39-c249-972b-de9849a76c78"]
}, Open  ]]
}, Open  ]],

Cell["c)(p\[Implies]r)\[And](r\[Nor](\[Not]q)),(p\[Nor]r)\[And]q", "Text",
 CellChangeTimes->{{3.9384934186738605`*^9, 
  3.9384934518915653`*^9}},ExpressionUUID->"247b7f3c-bd19-6440-94f6-\
b7be982e2a0b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Equivalencia", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{"Equivalent", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"Implies", "[", 
        RowBox[{"p", ",", "r"}], "]"}], ",", 
       RowBox[{"Nor", "[", 
        RowBox[{"r", ",", 
         RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"Nor", "[", 
        RowBox[{"p", ",", "r"}], "]"}], ",", "q"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ImplicaAB", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{"p", ",", "r"}], "]"}], ",", 
      RowBox[{"Nor", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"Nor", "[", 
       RowBox[{"p", ",", "r"}], "]"}], ",", "q"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ImplicaBA", "[", 
   RowBox[{"{", 
    RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
  RowBox[{"Implies", "[", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"Nor", "[", 
       RowBox[{"p", ",", "r"}], "]"}], ",", "q"}], "]"}], ",", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{"p", ",", "r"}], "]"}], ",", 
      RowBox[{"Nor", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"Equivalencia", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<Son l\[OAcute]gicamente equivalentes\>\"", "]"}], ",", 
   "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<No son l\[OAcute]gicamente equivalentes\>\"", "]"}]}], 
  "\n", "]"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"ImplicaAB", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{"Print", "[", "\"\<A implicaca l\[OAcute]gicamente B\>\"", "]"}], 
   ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<A no implicaca l\[OAcute]gicamente B\>\"", "]"}]}], 
  "\n", "]"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"ImplicaBA", ",", "3"}], "]"}], ",", "\n", "\t", 
   RowBox[{"Print", "[", "\"\<B implicaca l\[OAcute]gicamente A\>\"", "]"}], 
   ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<B no implicaca l\[OAcute]gicamente A\>\"", "]"}]}], 
  "\n", "]"}]}], "Code",
 CellChangeTimes->{{3.9384940400685673`*^9, 3.93849418633992*^9}, {
   3.9384942203096848`*^9, 3.9384942499761734`*^9}, 3.9397246439235706`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"17ee3755-0d03-524d-a33c-3a12415a4a17"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Son l\[OAcute]gicamente equivalentes\"\>"], "Print",
 CellChangeTimes->{3.938494259934904*^9, 3.939725248844141*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"59930bf3-585a-7d41-810c-56ad022913a6"],

Cell[BoxData["\<\"A implicaca l\[OAcute]gicamente B\"\>"], "Print",
 CellChangeTimes->{3.938494259934904*^9, 3.9397252488471413`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"82cc37de-193e-5242-b5f2-90f1878b1191"],

Cell[BoxData["\<\"B implicaca l\[OAcute]gicamente A\"\>"], "Print",
 CellChangeTimes->{3.938494259934904*^9, 3.9397252488501415`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[2]:=",ExpressionUUID->"23f750f4-6b16-0d4d-b081-f10dc3bf489e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 6.15", "Subsection",
 CellChangeTimes->{{3.9378791515104885`*^9, 
  3.937879164858631*^9}},ExpressionUUID->"f1fabc3a-63d3-2041-bf8f-\
e81625dbcc95"],

Cell["Dadas las siguientes formas enunciativas:", "Text",
 CellChangeTimes->{{3.9378802383563595`*^9, 
  3.9378802654387913`*^9}},ExpressionUUID->"b09f6507-3df8-f749-85d1-\
fbb96990c7e8"],

Cell["\<\
A) Nand[p, Implies[q, r]]        B) And[Implies[p,q],Nor[r,Not[q]]]   C) \
Nor[And[Not[p],q],Or[r,s]]\
\>", "Text",
 CellChangeTimes->{{3.9378802732476444`*^9, 3.9378802764341774`*^9}, {
   3.937880332811491*^9, 3.9378804005305157`*^9}, {3.93788043438608*^9, 
   3.937880439806925*^9}, {3.937880757698715*^9, 3.937880762027399*^9}, {
   3.9378807993970375`*^9, 3.93788081785017*^9}, 
   3.938494574070818*^9},ExpressionUUID->"2a963d2a-c95f-7942-8a5e-\
5b8cc6bc43ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TablaVerdad", "[", 
    RowBox[{"FormaE_", ",", "nombres_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "n", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nombres", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tabla", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"\"\<F\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"2", "^", "n"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"tabla", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "f"}], "]"}], "]"}], "=", 
                "\"\<V\>\""}]}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", 
           RowBox[{
            RowBox[{"tabla", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"n", "+", "1"}]}], "]"}], "]"}], "=", "\"\<V\>\""}]}], 
          "]"}], ";"}], "\[IndentingNewLine]", "   ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Join", "[", 
            RowBox[{"nombres", ",", 
             RowBox[{"{", 
              RowBox[{"FormaE", "[", "nombres", "]"}], "}"}]}], "]"}], "}"}], 
          ",", "tabla"}], "]"}], ",", 
        RowBox[{"Dividers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "True", "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"False", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "2", ",", "n"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "True"}], "}"}]}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "True"}], "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"False", ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "2", ",", 
                 RowBox[{"2", "^", "n"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", "True", "}"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "Gray"}], ",", 
        RowBox[{"ItemStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"n", "+", "1"}]}], "}"}]}], "}"}], "\[Rule]", 
              RowBox[{"Darker", "[", "Red", "]"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"2", "^", "n"}], "+", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"n", "+", "1"}], ",", 
                  RowBox[{"n", "+", "1"}]}], "}"}]}], "}"}], "\[Rule]", 
              "Bold"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "]"}]}]}], "\n", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{3.9397246584296207`*^9, 3.939725073258806*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"54a7e429-6522-ee48-9153-04b33b513793"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{"Nand", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Equivalent", "[", 
      RowBox[{"q", ",", "r"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"Implies", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Nor", "[", 
      RowBox[{"r", ",", 
       RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_", ",", "s_"}], "}"}], "]"}], ":=", 
   RowBox[{"Nor", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"Not", "[", "p", "]"}], ",", "q"}], "]"}], ",", 
     RowBox[{"Or", "[", 
      RowBox[{"r", ",", "s"}], "]"}]}], "]"}]}], ";"}]}], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"54f9e434-982d-ae4b-8c9d-752ad3c785bc"],

Cell["i) Calcular sus tablas de verdad", "Text",
 CellChangeTimes->{{3.938494462559105*^9, 
  3.938494480001375*^9}},ExpressionUUID->"49180451-3637-0d46-a4fd-\
e982edb97021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"A", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", " ", "\"\<q\>\"", ",", " ", "\"\<r\>\""}], 
    "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.9397246879263783`*^9, 3.9397246901408806`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0de9b09a-7f9d-2241-937a-f3f4e3b84373"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"q\"\>", "\<\"r\"\>", 
     RowBox[{"\<\"p\"\>", "\[Nand]", 
      RowBox[{"(", 
       RowBox[{"\<\"q\"\>", "\[Equivalent]", "\<\"r\"\>"}], ")"}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, False, True, True}, 
     "Rows" -> {
      True, True, False, False, False, False, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 4}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 9}, {4, 4}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.939725269262247*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a57c6e9f-a64e-b54c-8a63-e91d92d39a83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"B", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\""}], "}"}]}], 
  "]"}]], "Code",
 CellLabel->"In[6]:=",ExpressionUUID->"9f97aac1-568f-aa4d-8697-9fdf01fa1c1d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"q\"\>", "\<\"r\"\>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\<\"p\"\>", "\[Implies]", "\<\"q\"\>"}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{"\<\"r\"\>", "\[Nor]", 
        RowBox[{"!", "\<\"q\"\>"}]}], ")"}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, False, True, True}, 
     "Rows" -> {
      True, True, False, False, False, False, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 4}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 9}, {4, 4}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.93972527164406*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"34b1e91f-4e5c-6641-8b21-6b3aa4332a4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TablaVerdad", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\"", ",", "\"\<s\>\""}], 
    "}"}]}], "]"}]], "Code",
 CellLabel->"In[7]:=",ExpressionUUID->"af7c223f-bd24-6a40-8fb0-0d1c50268e8c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"p\"\>", "\<\"q\"\>", "\<\"r\"\>", "\<\"s\"\>", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", "\<\"p\"\>"}], "&&", "\<\"q\"\>"}], ")"}], "\[Nor]", 
      RowBox[{"(", 
       RowBox[{"\<\"r\"\>", "||", "\<\"s\"\>"}], ")"}]}]},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>", "\<\"F\"\>"},
    {"\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"F\"\>", "\<\"V\"\>"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "Columns" -> {True, False, False, False, True, True}, 
     "Rows" -> {
      True, True, False, False, False, False, False, False, False, False, 
       False, False, False, False, False, False, False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
     "ItemsIndexed" -> {{{1, 1}, {1, 5}} -> RGBColor[
         Rational[2, 3], 0, 0], {{1, 17}, {5, 5}} -> Bold}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9397252740603924`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"073afcba-2d12-764e-a4b9-fd4f0b319128"]
}, Open  ]],

Cell["ii) Calcular sus formas normales .", "Text",
 CellChangeTimes->{{3.9378808237346134`*^9, 
  3.937880844360718*^9}},ExpressionUUID->"81c6baf9-530b-104f-8695-\
ac008fd6df17"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormasNormales", "[", 
    RowBox[{"FormaE_", ",", "nombres_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cadena", ",", "cadena2", ",", "n", ",", "cad", ",", "cad2", ",", "j", 
       ",", "f", ",", "resto"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nombres", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cadena", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"cadena2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"cad", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"cad2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"contradiccion", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tautologia", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"cad", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"cad2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "cad"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", 
                    "\"\< \[And] \>\"", ",", " ", "cad"}], "]"}]}]}], " ", 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(~\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "cad2"}], "]"}]}], ",", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(~\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "\"\< \[Or] \>\"", ",", "cad2"}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "\n", "       ", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "f", "]"}], "]"}], "=", "False"}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(~\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "cad"}], "]"}]}], ",", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(\[Tilde]\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "\"\< \[And] \>\"", ",", "cad"}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "cad2"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", 
                    "\"\< \[Or] \>\"", ",", "cad2"}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\n", "     ", "]"}], 
            ";"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"cadena", "\[Equal]", "\"\<\>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"cadena", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena", ",", "\"\<(\>\"", ",", "cad", ",", "\"\<)\>\""}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"cadena", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena", ",", "\"\< \[Or] (\>\"", ",", "cad", ",", 
                 "\"\<)\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"contradiccion", "=", "False"}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"cadena2", "\[Equal]", "\"\<\>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"cadena2", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena2", ",", "\"\<(\>\"", ",", "cad2", ",", "\"\<)\>\""}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"cadena2", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena2", ",", "\"\< \[And] (\>\"", ",", "cad2", ",", 
                 "\"\<)\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tautologia", "=", "False"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\n", "   ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"contradiccion", ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<Es una contradicci\[OAcute]n.\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<No es contradicci\[OAcute]n y la forma normal disyuntiva es: \>\
\"", ",", "cadena"}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"tautologia", ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<Es una tautolog\[IAcute]a.\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<No es tautolog\[IAcute]a y la forma normal conjuntiva es: \>\"",
           ",", "cadena2"}], "]"}]}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"3c4edd3f-8755-3644-a161-13c3d42a04e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormasNormales", "[", 
  RowBox[{"A", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\""}], "}"}]}], 
  "]"}]], "Code",
 CellLabel->"In[5]:=",ExpressionUUID->"1d3e0e6a-e1ea-cb45-9ada-8be9aa905534"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es contradicci\[OAcute]n y la forma normal disyuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"(p \[And] q \[And] (~r)) \[Or] (p \[And] (\
\[Tilde]q) \[And] r) \[Or] ((\[Tilde]p) \[And] q \[And] r) \[Or] ((\[Tilde]p) \
\[And] q \[And] (~r)) \[Or] ((\[Tilde]p) \[And] (\[Tilde]q) \[And] r) \[Or] \
((\[Tilde]p) \[And] (\[Tilde]q) \[And] (~r))\"\>"}],
  SequenceForm[
  "No es contradicci\[OAcute]n y la forma normal disyuntiva es: ", 
   "(p \[And] q \[And] (~r)) \[Or] (p \[And] (\[Tilde]q) \[And] r) \[Or] ((\
\[Tilde]p) \[And] q \[And] r) \[Or] ((\[Tilde]p) \[And] q \[And] (~r)) \[Or] \
((\[Tilde]p) \[And] (\[Tilde]q) \[And] r) \[Or] ((\[Tilde]p) \[And] \
(\[Tilde]q) \[And] (~r))"],
  Editable->False]], "Print",
 CellChangeTimes->{3.939725286748886*^9, 3.9397253356229534`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[5]:=",ExpressionUUID->"6fb31998-95c6-0d4d-b7e8-959274a34d24"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es tautolog\[IAcute]a y la forma normal conjuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"((~p) \[Or] (~q) \[Or] (~r)) \[And] ((~p) \
\[Or] q \[Or] r)\"\>"}],
  SequenceForm[
  "No es tautolog\[IAcute]a y la forma normal conjuntiva es: ", 
   "((~p) \[Or] (~q) \[Or] (~r)) \[And] ((~p) \[Or] q \[Or] r)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.939725286748886*^9, 3.9397253356279545`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[5]:=",ExpressionUUID->"3dd6455d-e66a-2440-964c-44e8a3d4f905"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormasNormales", "[", 
  RowBox[{"B", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", "\"\<r\>\""}], "}"}]}], 
  "]"}]], "Code",
 CellLabel->"In[6]:=",ExpressionUUID->"12f16573-774d-274a-a516-f918a09fb324"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es contradicci\[OAcute]n y la forma normal disyuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"(p \[And] q \[And] (~r)) \[Or] ((\[Tilde]p) \
\[And] q \[And] (~r))\"\>"}],
  SequenceForm[
  "No es contradicci\[OAcute]n y la forma normal disyuntiva es: ", 
   "(p \[And] q \[And] (~r)) \[Or] ((\[Tilde]p) \[And] q \[And] (~r))"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9397252887227497`*^9, 3.939725337753792*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[6]:=",ExpressionUUID->"1753e32a-a30a-d644-8d83-98bbf657796e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es tautolog\[IAcute]a y la forma normal conjuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"((~p) \[Or] (~q) \[Or] (~r)) \[And] ((~p) \
\[Or] q \[Or] (~r)) \[And] ((~p) \[Or] q \[Or] r) \[And] (p \[Or] (~q) \[Or] \
(~r)) \[And] (p \[Or] q \[Or] (~r)) \[And] (p \[Or] q \[Or] r)\"\>"}],
  SequenceForm[
  "No es tautolog\[IAcute]a y la forma normal conjuntiva es: ", 
   "((~p) \[Or] (~q) \[Or] (~r)) \[And] ((~p) \[Or] q \[Or] (~r)) \[And] \
((~p) \[Or] q \[Or] r) \[And] (p \[Or] (~q) \[Or] (~r)) \[And] (p \[Or] q \
\[Or] (~r)) \[And] (p \[Or] q \[Or] r)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9397252887227497`*^9, 3.9397253377578087`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[6]:=",ExpressionUUID->"c68c25df-1c68-9d4b-bc21-2f13d56e01b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormasNormales", "[", 
  RowBox[{"c", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<p\>\"", ",", "\"\<q\>\"", ",", 
     RowBox[{"\"\<r\>\"", ";", "\"\<s\>\""}]}], "}"}]}], "]"}]], "Code",
 CellLabel->"In[7]:=",ExpressionUUID->"add011b2-3674-6c45-8f21-395c57009b70"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Es una contradicci\[OAcute]n.\"\>"], "Print",
 CellChangeTimes->{3.939725292466667*^9, 3.939725340336363*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[7]:=",ExpressionUUID->"57a40c69-05e9-5748-ac6e-2065a3858509"],

Cell[BoxData["\<\"Es una tautolog\[IAcute]a.\"\>"], "Print",
 CellChangeTimes->{3.939725292466667*^9, 3.9397253403383617`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[7]:=",ExpressionUUID->"e58a5869-5b75-064e-b623-45a9dacf7167"]
}, Open  ]]
}, Open  ]],

Cell["\<\
iii) Buscar formas enunciativas l\[OAcute]gicamente equivalentes utilizando \
los siguientes conjuntos adecuados {\[Not],\[And]}, {\[Not],\[Rule]} y \
{\[Nor]}. Comprobar el resultado con Mathematica .\
\>", "Text",
 CellChangeTimes->{{3.9384946930004635`*^9, 3.9384947463050365`*^9}, {
  3.938494805423153*^9, 
  3.9384948261513863`*^9}},ExpressionUUID->"78cc7485-40bf-654f-86d1-\
3176e0778e96"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"Nand", "[", 
    RowBox[{"\"\<p\>\"", ",", 
     RowBox[{"Equivalent", "[", 
      RowBox[{"\"\<q\>\"", ",", "\"\<r\>\""}], "]"}]}], "]"}], ",", 
   "\"\<AND\>\""}], "]"}], "\n", 
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"Nand", "[", 
    RowBox[{"\"\<p\>\"", ",", 
     RowBox[{"Equivalent", "[", 
      RowBox[{"\"\<q\>\"", ",", "\"\<r\>\""}], "]"}]}], "]"}], ",", 
   "\"\<IMPLIES\>\""}], "]"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"p", ",", "q", ",", "r", ",", "ExpNor"}], "]"}], "\n", 
 RowBox[{"ExpNor", "=", 
  RowBox[{"BooleanConvert", "[", 
   RowBox[{
    RowBox[{"Nand", "[", 
     RowBox[{"\"\<p\>\"", ",", 
      RowBox[{"Equivalent", "[", 
       RowBox[{"\"\<q\>\"", ",", "\"\<r\>\""}], "]"}]}], "]"}], ",", 
    "\"\<NOR\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ExpNor", "/.", " ", 
    RowBox[{
     RowBox[{"Not", "[", "x_", "]"}], ":>", 
     RowBox[{"(", 
      RowBox[{"x", "\[Nor]", "x"}], ")"}]}]}]}], ";"}], "\n", "A"}], "Code",
 CellLabel->"In[8]:=",ExpressionUUID->"eb28a5be-5ca0-9649-b7f9-23e681d98fee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"\<\"p\"\>", "&&", "\<\"q\"\>", "&&", "\<\"r\"\>"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"\<\"p\"\>", "&&", 
     RowBox[{"!", "\<\"q\"\>"}], "&&", 
     RowBox[{"!", "\<\"r\"\>"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.9397253426395664`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"43e029ff-d672-fe4d-823b-daa8008eda77"],

Cell[BoxData[
 RowBox[{"\<\"p\"\>", "\[Implies]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\<\"q\"\>", "\[Implies]", "\<\"r\"\>"}], ")"}], "\[Implies]", 
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"!", "\<\"q\"\>"}], "\[Implies]", 
       RowBox[{"!", "\<\"r\"\>"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9397253426420135`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"8c61ad90-d47e-0c44-a5a8-6a58d39cf5d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "\<\"p\"\>"}], "\[Nor]", 
    RowBox[{"!", "\<\"q\"\>"}], "\[Nor]", 
    RowBox[{"!", "\<\"r\"\>"}]}], ")"}], "\[Nor]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "\<\"p\"\>"}], "\[Nor]", "\<\"q\"\>", 
    "\[Nor]", "\<\"r\"\>"}], ")"}]}]], "Output",
 CellChangeTimes->{3.93972534264402*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3caa0098-d113-6f48-865b-54aa9077585f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\<\"p\"\>", "\[Nor]", "\<\"p\"\>"}], ")"}], "\[Nor]", 
    RowBox[{"(", 
     RowBox[{"\<\"q\"\>", "\[Nor]", "\<\"q\"\>"}], ")"}], "\[Nor]", 
    RowBox[{"(", 
     RowBox[{"\<\"r\"\>", "\[Nor]", "\<\"r\"\>"}], ")"}]}], ")"}], "\[Nor]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\<\"p\"\>", "\[Nor]", "\<\"p\"\>"}], ")"}], 
    "\[Nor]", "\<\"q\"\>", "\[Nor]", "\<\"r\"\>"}], ")"}]}]], "Output",
 CellChangeTimes->{3.939725342646019*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"84087f00-e72d-834a-b71f-c5f2b4eeacd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"Implies", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Nor", "[", 
      RowBox[{"r", ",", 
       RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}], ",", "\"\<AND\>\""}],
   "]"}], "\n", 
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"Implies", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Nor", "[", 
      RowBox[{"r", ",", 
       RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}], ",", 
   "\"\<IMPLIES\>\""}], "]"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"p", ",", "q", ",", "r", ",", "ExpNor"}], "]"}], "\n", 
 RowBox[{"ExpNor", "=", 
  RowBox[{"BooleanConvert", "[", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"Implies", "[", 
       RowBox[{"p", ",", "q"}], "]"}], ",", 
      RowBox[{"Nor", "[", 
       RowBox[{"r", ",", 
        RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}], ",", 
    "\"\<NOR\>\""}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ExpNor", "/.", " ", 
    RowBox[{
     RowBox[{"Not", "[", "x_", "]"}], ":>", 
     RowBox[{"(", 
      RowBox[{"x", "\[Nor]", "x"}], ")"}]}]}]}], ";"}], "\n", "A"}], "Code",
 CellChangeTimes->{{3.939724063961548*^9, 3.939724140272703*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7acb9219-3ff3-cd4c-bd29-861e6a4b8de9"],

Cell[BoxData[
 RowBox[{"q", "&&", 
  RowBox[{"!", "r"}]}]], "Output",
 CellChangeTimes->{3.9397253447700863`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"80b33078-1e54-fe49-9eb6-d7b8df3ef1e7"],

Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"(", 
   RowBox[{"q", "\[Implies]", "r"}], ")"}]}]], "Output",
 CellChangeTimes->{3.939725344772623*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"859f1694-ef3b-3947-9ed7-56b3413a3bd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", "q"}], "\[Nor]", "r"}]], "Output",
 CellChangeTimes->{3.9397253447736244`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"c3c3ee99-7c29-034a-818c-64e40d782e83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"q", "\[Nor]", "q"}], ")"}], "\[Nor]", "r"}]], "Output",
 CellChangeTimes->{3.9397253447756233`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"663e5384-112e-cd45-9dea-a6d4c4deb5ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"Nor", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"Not", "[", "p", "]"}], ",", "q"}], "]"}], ",", 
     RowBox[{"Or", "[", 
      RowBox[{"r", ",", "s"}], "]"}]}], "]"}], ",", "\"\<AND\>\""}], 
  "]"}], "\n", 
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"Nor", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"Not", "[", "p", "]"}], ",", "q"}], "]"}], ",", 
     RowBox[{"Or", "[", 
      RowBox[{"r", ",", "s"}], "]"}]}], "]"}], ",", "\"\<IMPLIES\>\""}], 
  "]"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"p", ",", "q", ",", "r", ",", "ExpNor"}], "]"}], "\n", 
 RowBox[{"ExpNor", "=", 
  RowBox[{"BooleanConvert", "[", 
   RowBox[{
    RowBox[{"Nor", "[", 
     RowBox[{
      RowBox[{"And", "[", 
       RowBox[{
        RowBox[{"Not", "[", "p", "]"}], ",", "q"}], "]"}], ",", 
      RowBox[{"Or", "[", 
       RowBox[{"r", ",", "s"}], "]"}]}], "]"}], ",", "\"\<NOR\>\""}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ExpNor", "/.", " ", 
    RowBox[{
     RowBox[{"Not", "[", "x_", "]"}], ":>", 
     RowBox[{"(", 
      RowBox[{"x", "\[Nor]", "x"}], ")"}]}]}]}], ";"}], "\n", "A"}], "Code",
 CellChangeTimes->{{3.939724157697176*^9, 3.9397241616825657`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"4df9db9b-a2ef-c745-87d1-88d8c52631c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "p"}], "&&", "q"}], ")"}]}], "&&", 
  RowBox[{"!", "r"}], "&&", 
  RowBox[{"!", "s"}]}]], "Output",
 CellChangeTimes->{3.9397253471346035`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"38911d8f-bb62-6b4b-8294-ef9200d9d046"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "\[Implies]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"!", "r"}], "\[Implies]", "s"}], ")"}]}], ")"}], "\[Implies]", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "p"}], "\[Implies]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"!", "q"}], "\[Implies]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", "r"}], "\[Implies]", "s"}], ")"}]}], ")"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.9397253471366215`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6b3960ac-0f35-9f41-87b4-62881bdf122b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "\[Nor]", 
    RowBox[{"!", "q"}]}], ")"}], "\[Nor]", "r", "\[Nor]", "s"}]], "Output",
 CellChangeTimes->{3.939725347138603*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"6b558ac8-abce-e74a-8bc3-b4e74017f3a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "\[Nor]", 
    RowBox[{"(", 
     RowBox[{"q", "\[Nor]", "q"}], ")"}]}], ")"}], "\[Nor]", "r", "\[Nor]", 
  "s"}]], "Output",
 CellChangeTimes->{3.93972534713962*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"8a07de6d-63f1-614a-a760-be1f251cfba0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 6.17", "Subsection",
 CellChangeTimes->{{3.937879168286188*^9, 
  3.9378791770710583`*^9}},ExpressionUUID->"cb235693-35c5-b841-a556-\
91d1a49a140a"],

Cell["\<\
Utiliza el m\[EAcute]todo de refutaci\[OAcute]n para determinar si la \
siguiente forma argumentativa es v\[AAcute]lida o inv\[AAcute]lida: \
\>", "Text",
 CellChangeTimes->{{3.9378793756117783`*^9, 
  3.9378794182850895`*^9}},ExpressionUUID->"c96fffd1-e861-4d4e-ba1d-\
79099759d4da"],

Cell["\<\
(p \[Or] q) \[And] (r \[Implies] t), p\[CirclePlus](s \[Or] (\[Not] t)), r \
\[Nand] (\[Not] q);  \[Therefore] ((\[Not] p) \[And] q) \[Implies] r\
\>", "Text",
 CellChangeTimes->{{3.937879425481352*^9, 3.9378794336236553`*^9}, {
  3.937879555337597*^9, 3.9378795764915257`*^9}, {3.937879618645151*^9, 
  3.937879699076271*^9}},ExpressionUUID->"5596945b-f3e6-d14b-a3ab-\
3da3e2f525a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Argumentaciona", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_", ",", "t_", ",", "s_"}], "}"}], "]"}],
    ":=", 
   RowBox[{"Implies", "[", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"Or", "[", 
          RowBox[{"p", ",", "q"}], "]"}], ",", 
         RowBox[{"Implies", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"Xor", "[", 
        RowBox[{"p", ",", 
         RowBox[{"Or", "[", 
          RowBox[{"s", ",", 
           RowBox[{"Not", "[", "t", "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Nand", "[", 
        RowBox[{"r", ",", 
         RowBox[{"Not", "[", "q", "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Implies", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{"Not", "[", "p", "]"}], ",", "q"}], "]"}], ",", "r"}], 
      "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"Argumentaciona", ",", "5"}], "]"}], ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<Es una argumentaci\[OAcute]n v\[AAcute]lida\>\"", "]"}],
    ",", "\n", "\t", 
   RowBox[{
   "Print", "[", "\"\<Es una argumentaci\[OAcute]n inv\[AAcute]lida\>\"", 
    "]"}]}], "\n", "]"}]}], "Code",
 CellChangeTimes->{{3.9397249439437695`*^9, 3.9397250565784073`*^9}, 
   3.939725099785799*^9, 3.9397254047537403`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"a6e32f5d-ac5b-464b-a4cc-00e59ac6f602"],

Cell[BoxData["\<\"Es una argumentaci\[OAcute]n inv\[AAcute]lida\"\>"], "Print",
 CellChangeTimes->{
  3.9397251389027386`*^9, {3.9397253877442627`*^9, 3.939725406120571*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[4]:=",ExpressionUUID->"b010fb43-326a-2b41-b32c-df21254884d8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{769.1999999999999, 568.8},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"14.1 para Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fd0cd67a-a225-6c43-8621-158809ce6861"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 195, 2, 96, "Title",ExpressionUUID->"e51df37f-f5ee-034e-8a31-af7675be4fa6"],
Cell[774, 26, 233, 3, 52, "Subtitle",ExpressionUUID->"df93aba7-5618-0746-a1fc-c738851c47e5"],
Cell[1010, 31, 216, 2, 52, "Subtitle",ExpressionUUID->"bf98b478-5705-f042-84df-7f00ff024189"],
Cell[1229, 35, 223, 3, 52, "Subtitle",ExpressionUUID->"c349bfab-1d72-6a4d-bf4a-55793146c660"],
Cell[CellGroupData[{
Cell[1477, 42, 163, 3, 66, "Section",ExpressionUUID->"57f6aa7b-4296-a846-8b9e-d8497d4b2d86"],
Cell[1643, 47, 369, 9, 99, "Text",ExpressionUUID->"7060ac4a-285c-d04a-a0b4-e8d0b9bd6e05"],
Cell[CellGroupData[{
Cell[2037, 60, 156, 3, 53, "Subsection",ExpressionUUID->"0713db65-a65f-d641-bf32-0b127a82ad00"],
Cell[CellGroupData[{
Cell[2218, 67, 3994, 81, 446, "Code",ExpressionUUID->"13694eaa-43e5-5a4f-b9db-7a9bcf4ff832"],
Cell[6215, 150, 5242, 99, 774, "Output",ExpressionUUID->"035b8ba4-7b71-7741-8146-b350ff456ef4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11518, 256, 165, 3, 66, "Section",ExpressionUUID->"ed350138-d311-1b48-b889-1d91da962c5b"],
Cell[CellGroupData[{
Cell[11708, 263, 216, 4, 53, "Subsection",ExpressionUUID->"b6f4f249-6a0a-374b-b13e-dbcf0f2a6a73"],
Cell[11927, 269, 208, 4, 33, "Text",ExpressionUUID->"d2bd8766-fdbe-564d-93c7-364a79e72096"],
Cell[12138, 275, 201, 4, 33, "Text",ExpressionUUID->"b75253ab-663e-a74c-b272-6f700a5e3af1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12376, 284, 163, 3, 53, "Subsection",ExpressionUUID->"3f11f530-a1ce-0c40-9dc5-06f3ec52b145"],
Cell[12542, 289, 228, 4, 33, "Text",ExpressionUUID->"f3c73f13-ef42-7a4e-91ea-9c6dbe7a9c4e"],
Cell[12773, 295, 372, 12, 32, "Text",ExpressionUUID->"cc5c93b7-01c8-a54b-9e62-d33da3e50363"],
Cell[CellGroupData[{
Cell[13170, 311, 636, 15, 52, "Code",ExpressionUUID->"7c094e37-e6a0-d04f-b64b-837be078bff8"],
Cell[13809, 328, 262, 4, 32, "Output",ExpressionUUID->"4e8c5715-d932-0f43-bbca-8f3cc7093bef"]
}, Open  ]],
Cell[14086, 335, 617, 20, 37, "Text",ExpressionUUID->"5581a2a2-c662-7b45-ac1f-ec555aec62f2"],
Cell[14706, 357, 152, 3, 28, "Input",ExpressionUUID->"3d06eba0-d184-a148-9807-f8798fda21b1"],
Cell[CellGroupData[{
Cell[14883, 364, 431, 10, 64, "Code",ExpressionUUID->"0d48d5d2-88a3-f74c-9fad-29e2c338643a"],
Cell[15317, 376, 272, 4, 32, "Output",ExpressionUUID->"3c1bc44b-0706-d640-b071-5fa8efba4528"]
}, Open  ]],
Cell[15604, 383, 274, 8, 56, "Text",ExpressionUUID->"66a1ad57-0273-0240-ac99-82ab082d22c3"],
Cell[CellGroupData[{
Cell[15903, 395, 328, 8, 77, "Code",ExpressionUUID->"c6f25456-defe-9143-b230-4981ed418898"],
Cell[16234, 405, 213, 2, 32, "Output",ExpressionUUID->"32b5f62d-09ad-3d46-bd54-caa03d377973"]
}, Open  ]],
Cell[16462, 410, 323, 9, 33, "Text",ExpressionUUID->"5a8a43bb-a0db-c845-857d-437978deb439"],
Cell[CellGroupData[{
Cell[16810, 423, 301, 6, 52, "Code",ExpressionUUID->"9df8a31c-85b6-2143-9e1c-d915ca8c7e46"],
Cell[17114, 431, 214, 2, 32, "Output",ExpressionUUID->"3fa48503-3a30-ba44-aeda-f97bd9029f54"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17389, 440, 264, 4, 66, "Section",ExpressionUUID->"b1d93e7c-2b74-a840-8578-ded41d5752fa"],
Cell[17656, 446, 237, 6, 38, "Input",ExpressionUUID->"0b99cbfb-a2a0-fa41-83c2-894826e24512"],
Cell[17896, 454, 267, 8, 32, "Text",ExpressionUUID->"4a77fdbe-5546-b549-b755-7218a68327b4"],
Cell[CellGroupData[{
Cell[18188, 466, 180, 4, 52, "Code",ExpressionUUID->"69161fe5-740c-f14d-9184-014baebf52b2"],
Cell[18371, 472, 198, 2, 32, "Output",ExpressionUUID->"2560279a-6c51-1b42-a09c-bd61a24be6b3"]
}, Open  ]],
Cell[18584, 477, 167, 3, 33, "Text",ExpressionUUID->"1bff98d3-9796-a343-96b9-0138026e260c"],
Cell[CellGroupData[{
Cell[18776, 484, 246, 6, 61, "Code",ExpressionUUID->"1971612c-65d2-6c42-a636-d1390ea843cf"],
Cell[19025, 492, 231, 3, 32, "Output",ExpressionUUID->"cd9e52fe-dcea-3248-94f0-9f93522f7724"]
}, Open  ]],
Cell[19271, 498, 472, 18, 38, "Text",ExpressionUUID->"5b5ea6e6-7fb7-c744-82e3-0dff86bab1ea"],
Cell[CellGroupData[{
Cell[19768, 520, 284, 8, 64, "Code",ExpressionUUID->"c65dd124-ecfa-214a-8eb3-3fede16791f1"],
Cell[20055, 530, 215, 2, 32, "Output",ExpressionUUID->"1c29cc6b-10c6-a945-9814-084110c115ba"]
}, Open  ]],
Cell[20285, 535, 144, 3, 33, "Text",ExpressionUUID->"7a8d1c97-2a78-b84e-b56d-1554e31e28bd"],
Cell[CellGroupData[{
Cell[20454, 542, 251, 6, 50, "Code",ExpressionUUID->"d8f66071-1b57-084b-ba61-caebef95918e"],
Cell[20708, 550, 172, 2, 32, "Output",ExpressionUUID->"65b68657-a842-be45-a060-4aeea3302de7"]
}, Open  ]],
Cell[20895, 555, 432, 14, 33, "Text",ExpressionUUID->"9f7f8179-71da-b446-b35d-5de86fc5047a"],
Cell[CellGroupData[{
Cell[21352, 573, 253, 6, 50, "Code",ExpressionUUID->"5c51c28b-0cb0-4e48-ba7e-5b1f319d44bb"],
Cell[21608, 581, 205, 3, 32, "Output",ExpressionUUID->"e2e2e39f-98d7-784b-8672-9d0e43fec34b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21850, 589, 161, 3, 53, "Subsection",ExpressionUUID->"80e9eca5-6adb-d74e-9969-7d853a7f152e"],
Cell[22014, 594, 344, 7, 67, "Code",ExpressionUUID->"29d19dc5-bb02-5d4e-9fae-a03ff4a3587b"],
Cell[22361, 603, 168, 3, 33, "Text",ExpressionUUID->"deba6a55-27c9-484c-9b84-b55fac4fb22e"],
Cell[CellGroupData[{
Cell[22554, 610, 204, 3, 50, "Code",ExpressionUUID->"453f407f-7ab2-8b4d-8981-ba0510c2da4f"],
Cell[22761, 615, 151, 2, 32, "Output",ExpressionUUID->"05f39744-f957-f749-91f6-60f3c53a871a"]
}, Open  ]],
Cell[22927, 620, 199, 3, 33, "Text",ExpressionUUID->"822f4131-601d-024e-9810-c04053eca5f7"],
Cell[CellGroupData[{
Cell[23151, 627, 359, 6, 50, "Code",ExpressionUUID->"ab237bb8-1fb7-ac4d-a07a-50b1a7f7f806"],
Cell[23513, 635, 203, 3, 32, "Output",ExpressionUUID->"953498bb-436d-6941-bceb-22cdc3b29928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23753, 643, 250, 5, 50, "Code",ExpressionUUID->"07801a90-9d53-f94b-9496-14e52c367ffb"],
Cell[24006, 650, 175, 2, 32, "Output",ExpressionUUID->"a3b95397-66ea-1541-b2d7-145b9b2c03f0"]
}, Open  ]],
Cell[24196, 655, 306, 7, 33, "Text",ExpressionUUID->"f35bd88c-93af-ee48-afc0-3546a263267f"],
Cell[CellGroupData[{
Cell[24527, 666, 257, 5, 50, "Code",ExpressionUUID->"6fc4e2d5-54f7-ce45-ae61-c61ed8f3fd56"],
Cell[24787, 673, 196, 2, 32, "Output",ExpressionUUID->"0557dc43-1def-704f-9a73-cbab2baf92c7"]
}, Open  ]],
Cell[24998, 678, 242, 4, 33, "Text",ExpressionUUID->"a90ff96d-5bf5-8845-aece-8c53a819ea3f"],
Cell[CellGroupData[{
Cell[25265, 686, 293, 7, 62, "Code",ExpressionUUID->"afe1b9af-919f-bc43-8eb1-4ce4b5c63fc6"],
Cell[25561, 695, 174, 2, 32, "Output",ExpressionUUID->"16552197-8985-a849-a530-235f2ab0c109"]
}, Open  ]],
Cell[25750, 700, 237, 6, 33, "Text",ExpressionUUID->"c1b06882-40bf-bb4a-9e35-dea4f39e78f1"],
Cell[CellGroupData[{
Cell[26012, 710, 208, 3, 50, "Code",ExpressionUUID->"72769357-e94d-a949-b295-afa06a3310b0"],
Cell[26223, 715, 149, 2, 32, "Output",ExpressionUUID->"502adadc-4baa-064c-ab4c-b4a9c11fe62a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26421, 723, 165, 3, 53, "Subsection",ExpressionUUID->"cc59e912-c72c-4c4d-b69f-b50a5a99e809"],
Cell[26589, 728, 305, 6, 55, "Text",ExpressionUUID->"16cdc1c5-d95c-d948-a2ee-d5d9a48d8129"],
Cell[CellGroupData[{
Cell[26919, 738, 542, 11, 50, "Code",ExpressionUUID->"0a7c8677-f13b-a14b-8481-a26ab5394e18"],
Cell[27464, 751, 2715, 39, 241, "Output",ExpressionUUID->"bcb31b8e-6b87-8344-891e-2a1c37851f45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30216, 795, 300, 6, 50, "Code",ExpressionUUID->"cb3fd620-4b17-fd4f-b64d-c84dd954e788"],
Cell[30519, 803, 2569, 36, 241, "Output",ExpressionUUID->"65a9001b-d710-394a-b664-c766ecaa3f26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33125, 844, 244, 4, 50, "Code",ExpressionUUID->"66a07071-b2f0-844d-8905-d8a06e1fd668"],
Cell[33372, 850, 2570, 36, 241, "Output",ExpressionUUID->"6a6ae0d9-69e7-644d-9b48-7a59f091da69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35979, 891, 319, 7, 50, "Code",ExpressionUUID->"53db8b8f-1ddf-b342-9d5d-41e5776c6438"],
Cell[36301, 900, 253, 4, 32, "Output",ExpressionUUID->"98dded62-0795-0a46-a387-d956ad563e0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36591, 909, 227, 4, 50, "Code",ExpressionUUID->"679d3262-2e49-1847-9a8b-fe210e8da591"],
Cell[36821, 915, 253, 4, 32, "Output",ExpressionUUID->"707467d4-65b5-b944-adef-3cfdc6f27a64"]
}, Open  ]],
Cell[37089, 922, 290, 6, 55, "Text",ExpressionUUID->"33787b78-55a5-ce46-97f8-378dddc9ce0e"],
Cell[CellGroupData[{
Cell[37404, 932, 379, 8, 67, "Code",ExpressionUUID->"4cd101a9-7f09-c649-8aaa-6b57165cc4cd"],
Cell[37786, 942, 284, 5, 32, "Output",ExpressionUUID->"3f4db39d-9ceb-b24e-b98a-245047c76c6e"]
}, Open  ]],
Cell[38085, 950, 594, 11, 77, "Text",ExpressionUUID->"805c81aa-4838-9740-911b-ddddc2da6ef9"],
Cell[CellGroupData[{
Cell[38704, 965, 335, 6, 50, "Code",ExpressionUUID->"3731995f-58fa-d14f-956e-752096c3f1ba"],
Cell[39042, 973, 304, 6, 32, "Output",ExpressionUUID->"1f716a2b-f367-2740-ad02-8de79b38c406"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39383, 984, 439, 7, 50, "Code",ExpressionUUID->"b0d00afa-3445-ba46-94ac-408c26bea7f7"],
Cell[39825, 993, 319, 6, 32, "Output",ExpressionUUID->"c09d12ea-f8e8-344b-a445-353668c93ac3"]
}, Open  ]],
Cell[40159, 1002, 157, 3, 33, "Text",ExpressionUUID->"e68d634b-c292-094f-857d-ddc7811e15cb"],
Cell[CellGroupData[{
Cell[40341, 1009, 326, 6, 50, "Code",ExpressionUUID->"23c223b8-1892-354a-836e-0d4b303e6c13"],
Cell[40670, 1017, 2738, 39, 241, "Output",ExpressionUUID->"61a7cd0e-be72-8843-bddb-16da80f40852"]
}, Open  ]],
Cell[43423, 1059, 191, 3, 33, "Text",ExpressionUUID->"8f1d1325-6c0f-6746-8293-b2fa8cdca8ea"],
Cell[CellGroupData[{
Cell[43639, 1066, 220, 3, 50, "Code",ExpressionUUID->"2cd79cd5-16ce-7641-baf9-c6273d89b8d7"],
Cell[43862, 1071, 153, 2, 32, "Output",ExpressionUUID->"84950bb9-59ec-314a-b1f8-2c4d54732bf2"]
}, Open  ]],
Cell[44030, 1076, 202, 3, 33, "Text",ExpressionUUID->"e74ccbd5-858b-b045-a852-b73c9c382211"],
Cell[CellGroupData[{
Cell[44257, 1083, 410, 9, 67, "Code",ExpressionUUID->"c395df8d-a5f8-a540-b122-bcbc2560c77f"],
Cell[44670, 1094, 209, 4, 32, "Output",ExpressionUUID->"ec4a17ed-7bd1-294b-8e6b-6b6a504d6e7a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44928, 1104, 165, 3, 53, "Subsection",ExpressionUUID->"1a6572f9-c3c1-214e-a982-46c894e50b32"],
Cell[45096, 1109, 523, 9, 77, "Text",ExpressionUUID->"14fd0de8-e214-8048-8275-101633c70411"],
Cell[CellGroupData[{
Cell[45644, 1122, 615, 14, 50, "Code",ExpressionUUID->"ed49bbcf-8071-7a4a-978a-3a9b50ccbc7c"],
Cell[46262, 1138, 485, 11, 32, "Output",ExpressionUUID->"0dfbe8b9-35aa-4841-9ea5-85a8db495a9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46808, 1156, 188, 3, 66, "Section",ExpressionUUID->"735533cc-6656-eb40-837b-e2a558a8d141"],
Cell[46999, 1161, 294, 7, 33, "Text",ExpressionUUID->"0e8be522-e60c-aa45-a3b8-d5a66df14245"],
Cell[CellGroupData[{
Cell[47318, 1172, 1601, 48, 137, "Code",ExpressionUUID->"1d2018b9-aeda-5644-8642-17fec4887f28"],
Cell[48922, 1222, 222, 3, 32, "Output",ExpressionUUID->"78d542d5-9378-3a47-9699-4beec955b066"]
}, Open  ]],
Cell[49159, 1228, 214, 5, 38, "Input",ExpressionUUID->"367176ed-442e-c14f-bac6-766296c6d8eb"],
Cell[49376, 1235, 726, 16, 102, "Code",ExpressionUUID->"7d7e0542-b02b-4b48-9aa3-77d076c02e97"],
Cell[50105, 1253, 387, 8, 55, "Text",ExpressionUUID->"7073f5c0-91fd-bb46-ad12-2210e46e27d0"],
Cell[CellGroupData[{
Cell[50517, 1265, 3064, 76, 471, "Code",ExpressionUUID->"df9d91a1-fa06-b34a-9363-9efcd478135b"],
Cell[53584, 1343, 106119, 1428, 9681, "Print",ExpressionUUID->"c5da36b9-71f2-e14c-baef-4faa3a8e353f"]
}, Open  ]],
Cell[159718, 2774, 248, 6, 33, "Text",ExpressionUUID->"4824f6a9-9051-ba42-8b84-acd62bb80fb1"],
Cell[CellGroupData[{
Cell[159991, 2784, 2046, 56, 366, "Code",ExpressionUUID->"daf20328-90ac-ec40-98f1-32224b401633"],
Cell[162040, 2842, 543, 11, 39, "Print",ExpressionUUID->"3469ba60-7394-1947-85ba-8be18dd11f39"]
}, Open  ]],
Cell[162598, 2856, 260, 6, 55, "Text",ExpressionUUID->"0d7ef6b1-f295-ae4a-a404-b2ecd1ccc2ca"],
Cell[CellGroupData[{
Cell[162883, 2866, 2665, 75, 489, "Code",ExpressionUUID->"39b60423-1e06-c042-afa6-1cb98f8ac36e"],
Cell[165551, 2943, 249, 4, 22, "Print",ExpressionUUID->"9fc855a5-6fce-ad45-82f6-d6c7bcc9d634"]
}, Open  ]],
Cell[165815, 2950, 265, 6, 55, "Text",ExpressionUUID->"12d7037d-ab2a-c645-bbb2-b18e05fbe41f"],
Cell[CellGroupData[{
Cell[166105, 2960, 2521, 73, 489, "Code",ExpressionUUID->"65716440-1eb0-c944-ac96-097971af0c5f"],
Cell[168629, 3035, 199, 4, 22, "Print",ExpressionUUID->"a48a98db-ac9c-724b-ac4d-4344be858dc1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168877, 3045, 216, 4, 66, "Section",ExpressionUUID->"352e2853-8bf3-ee43-81b2-6194aecec6d2"],
Cell[CellGroupData[{
Cell[169118, 3053, 163, 3, 53, "Subsection",ExpressionUUID->"80cc6971-3d84-4148-9cba-bb9bd1ba3cf8"],
Cell[169284, 3058, 238, 6, 33, "Text",ExpressionUUID->"d5d8eb14-9617-cc41-83bc-669380c4cf32"],
Cell[CellGroupData[{
Cell[169547, 3068, 1122, 26, 85, "Code",ExpressionUUID->"ebe3f747-a8da-0641-adb3-b9ddc1b063ed"],
Cell[170672, 3096, 228, 3, 32, "Output",ExpressionUUID->"1387f5f3-1242-6743-a12f-41c8021ff419"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170949, 3105, 163, 3, 53, "Subsection",ExpressionUUID->"dd1961c5-1f90-ee42-a144-a83054866c71"],
Cell[171115, 3110, 251, 6, 33, "Text",ExpressionUUID->"55bf2dde-e377-a349-85cf-02c040fff6b9"],
Cell[171369, 3118, 214, 4, 33, "Text",ExpressionUUID->"c05bc4cf-e53d-9244-a244-34fdf947555c"],
Cell[CellGroupData[{
Cell[171608, 3126, 359, 7, 67, "Code",ExpressionUUID->"02bbd81f-615d-db4d-85c7-32c75e2fdbeb"],
Cell[171970, 3135, 205, 3, 32, "Output",ExpressionUUID->"7871c1a2-dac3-974c-abd3-9ad20e3a30fc"]
}, Open  ]],
Cell[172190, 3141, 225, 4, 33, "Text",ExpressionUUID->"85c8b1d0-c5b4-c443-bab5-19a8f164808a"],
Cell[CellGroupData[{
Cell[172440, 3149, 455, 10, 85, "Code",ExpressionUUID->"87f59d59-5956-244e-8b3e-6e71c3e2b0bf"],
Cell[172898, 3161, 203, 3, 32, "Output",ExpressionUUID->"ec3e2d20-8f70-ff4c-bb5a-e61b90732b0d"]
}, Open  ]],
Cell[173116, 3167, 297, 4, 33, "Text",ExpressionUUID->"2d5a2b45-6651-c84f-8574-1f926924e7a3"],
Cell[CellGroupData[{
Cell[173438, 3175, 572, 15, 85, "Code",ExpressionUUID->"b7ed8451-dfb0-fc4e-b165-8c540780edcd"],
Cell[174013, 3192, 201, 3, 32, "Output",ExpressionUUID->"9703ee61-da66-0846-b330-1abb5d1cf7d6"]
}, Open  ]],
Cell[174229, 3198, 242, 4, 33, "Text",ExpressionUUID->"9427c453-ab6b-5642-bc0b-783953b1ba97"],
Cell[CellGroupData[{
Cell[174496, 3206, 510, 12, 67, "Code",ExpressionUUID->"3e7470a3-f054-1348-9a39-e05891ee8fbe"],
Cell[175009, 3220, 206, 3, 32, "Output",ExpressionUUID->"9d6164f5-1486-2b4c-a68d-bfd55bf854ce"]
}, Open  ]],
Cell[175230, 3226, 216, 4, 33, "Text",ExpressionUUID->"9b1a271a-54e1-4b49-9604-1d8fbab24833"],
Cell[CellGroupData[{
Cell[175471, 3234, 681, 17, 85, "Code",ExpressionUUID->"52cecb18-e718-1c4a-b464-91f090de5fce"],
Cell[176155, 3253, 202, 3, 32, "Output",ExpressionUUID->"8e03c6d2-96d3-a94a-bfa6-e759682d7e9d"]
}, Open  ]],
Cell[176372, 3259, 326, 7, 33, "Text",ExpressionUUID->"6e22b120-e44f-7e45-8ede-43ae3050e9ae"],
Cell[CellGroupData[{
Cell[176723, 3270, 790, 21, 67, "Code",ExpressionUUID->"3f53598d-9fb3-4647-bf64-739fbea7172d"],
Cell[177516, 3293, 178, 2, 32, "Output",ExpressionUUID->"107caa4b-f8a1-9f41-8048-e319df3c19eb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177743, 3301, 163, 3, 53, "Subsection",ExpressionUUID->"f269d17e-b53e-8c4b-9e93-dcc5f72edd20"],
Cell[177909, 3306, 251, 5, 33, "Text",ExpressionUUID->"e40b2819-985a-a143-ad4f-c49722bd8c77"],
Cell[178163, 3313, 5260, 139, 260, "Code",ExpressionUUID->"00a96271-d9e2-e142-ac99-bb9de217c6ef"],
Cell[183426, 3454, 243, 4, 33, "Text",ExpressionUUID->"2dc264c5-72f9-1841-9e5e-089a5574f483"],
Cell[CellGroupData[{
Cell[183694, 3462, 715, 18, 67, "Code",ExpressionUUID->"c7152d22-8784-6e41-9b3a-1fda8d13ca04"],
Cell[184412, 3482, 1099, 27, 104, "Output",ExpressionUUID->"9a23d7ed-a4b4-724e-8cec-6e94d02c939a"]
}, Open  ]],
Cell[185526, 3512, 223, 4, 33, "Text",ExpressionUUID->"5bd32501-cad5-4144-ac48-3e7f6be5e651"],
Cell[CellGroupData[{
Cell[185774, 3520, 842, 23, 67, "Code",ExpressionUUID->"1f05b88f-4b08-9c46-8179-9344b4a2aedd"],
Cell[186619, 3545, 1643, 39, 171, "Output",ExpressionUUID->"c68d69fa-f284-6940-b6d3-20409f48bb62"]
}, Open  ]],
Cell[188277, 3587, 387, 6, 33, "Text",ExpressionUUID->"2a952e79-8b13-6644-aadc-0c6d00786319"],
Cell[CellGroupData[{
Cell[188689, 3597, 1084, 28, 67, "Code",ExpressionUUID->"2aa2e15b-549b-304e-bdbb-e698caa8824f"],
Cell[189776, 3627, 1664, 40, 171, "Output",ExpressionUUID->"0f38199d-ae98-6b47-b537-cb194adbe9f6"]
}, Open  ]],
Cell[191455, 3670, 236, 4, 33, "Text",ExpressionUUID->"913e43f4-f8a8-ca45-8137-2092e8c7d12f"],
Cell[CellGroupData[{
Cell[191716, 3678, 649, 17, 67, "Code",ExpressionUUID->"a22b4807-0432-554e-b129-678583f2ac53"],
Cell[192368, 3697, 1449, 31, 171, "Output",ExpressionUUID->"eb64e5b0-2cad-8241-8b7e-3ef121264f4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193878, 3735, 214, 4, 66, "Section",ExpressionUUID->"eba81ee6-07c6-b248-8512-88853661c46e"],
Cell[194095, 3741, 316, 7, 55, "Text",ExpressionUUID->"d775978b-f8eb-6b44-8691-b07ed91100d4"],
Cell[CellGroupData[{
Cell[194436, 3752, 161, 3, 53, "Subsection",ExpressionUUID->"dc2bee46-ea2b-3143-bf1c-3e04dcee13d6"],
Cell[194600, 3757, 292, 6, 55, "Text",ExpressionUUID->"a3c3e8ac-d6a9-9c41-a6a5-490d384a1f1c"],
Cell[194895, 3765, 2176, 57, 208, "Code",ExpressionUUID->"76e2276b-0694-1948-9d22-e79c1e7053e9"],
Cell[197074, 3824, 341, 6, 33, "Text",ExpressionUUID->"7da03db7-b0e7-c042-a14d-ee96ec10b37f"],
Cell[CellGroupData[{
Cell[197440, 3834, 2629, 78, 295, "Code",ExpressionUUID->"eb981a7b-b920-2e46-8e64-23c69487efe2"],
Cell[CellGroupData[{
Cell[200094, 3916, 255, 4, 22, "Print",ExpressionUUID->"a91f63b5-9457-6745-99d0-a1b9a56978c7"],
Cell[200352, 3922, 249, 4, 22, "Print",ExpressionUUID->"f4e565c5-11af-494e-9a66-88836f3648eb"],
Cell[200604, 3928, 254, 4, 22, "Print",ExpressionUUID->"7ea679c8-bde4-9242-9918-9adb345996de"]
}, Open  ]]
}, Open  ]],
Cell[200885, 3936, 254, 4, 33, "Text",ExpressionUUID->"f8e52563-5ffc-ed41-8c08-c58ed8bb10f1"],
Cell[CellGroupData[{
Cell[201164, 3944, 2895, 84, 295, "Code",ExpressionUUID->"7c71a46d-7e39-ac4f-bfa8-4c216571b041"],
Cell[CellGroupData[{
Cell[204084, 4032, 255, 4, 22, "Print",ExpressionUUID->"f472d18c-724c-f243-a3db-ea22a250beba"],
Cell[204342, 4038, 248, 4, 22, "Print",ExpressionUUID->"0748e4f6-0650-414b-a629-4e5fdea6a6db"],
Cell[204593, 4044, 247, 4, 22, "Print",ExpressionUUID->"b46f60cb-9c39-c249-972b-de9849a76c78"]
}, Open  ]]
}, Open  ]],
Cell[204867, 4052, 204, 3, 33, "Text",ExpressionUUID->"247b7f3c-bd19-6440-94f6-b7be982e2a0b"],
Cell[CellGroupData[{
Cell[205096, 4059, 2891, 84, 295, "Code",ExpressionUUID->"17ee3755-0d03-524d-a33c-3a12415a4a17"],
Cell[CellGroupData[{
Cell[208012, 4147, 250, 4, 22, "Print",ExpressionUUID->"59930bf3-585a-7d41-810c-56ad022913a6"],
Cell[208265, 4153, 249, 4, 22, "Print",ExpressionUUID->"82cc37de-193e-5242-b5f2-90f1878b1191"],
Cell[208517, 4159, 249, 4, 22, "Print",ExpressionUUID->"23f750f4-6b16-0d4d-b081-f10dc3bf489e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208827, 4170, 164, 3, 53, "Subsection",ExpressionUUID->"f1fabc3a-63d3-2041-bf8f-e81625dbcc95"],
Cell[208994, 4175, 187, 3, 33, "Text",ExpressionUUID->"b09f6507-3df8-f749-85d1-fbb96990c7e8"],
Cell[209184, 4180, 476, 9, 33, "Text",ExpressionUUID->"2a963d2a-c95f-7942-8a5e-5b8cc6bc43ea"],
Cell[209663, 4191, 5325, 140, 260, "Code",ExpressionUUID->"54a7e429-6522-ee48-9153-04b33b513793"],
Cell[214991, 4333, 1090, 34, 85, "Code",ExpressionUUID->"54f9e434-982d-ae4b-8c9d-752ad3c785bc"],
Cell[216084, 4369, 174, 3, 33, "Text",ExpressionUUID->"49180451-3637-0d46-a4fd-e982edb97021"],
Cell[CellGroupData[{
Cell[216283, 4376, 337, 7, 50, "Code",ExpressionUUID->"0de9b09a-7f9d-2241-937a-f3f4e3b84373"],
Cell[216623, 4385, 1377, 30, 171, "Output",ExpressionUUID->"a57c6e9f-a64e-b54c-8a63-e91d92d39a83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218037, 4420, 250, 6, 50, "Code",ExpressionUUID->"9f97aac1-568f-aa4d-8697-9fdf01fa1c1d"],
Cell[218290, 4428, 1460, 33, 171, "Output",ExpressionUUID->"34b1e91f-4e5c-6641-8b21-6b3aa4332a4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219787, 4466, 275, 7, 50, "Code",ExpressionUUID->"af7c223f-bd24-6a40-8fb0-0d1c50268e8c"],
Cell[220065, 4475, 2212, 42, 305, "Output",ExpressionUUID->"073afcba-2d12-764e-a4b9-fd4f0b319128"]
}, Open  ]],
Cell[222292, 4520, 178, 3, 33, "Text",ExpressionUUID->"81c6baf9-530b-104f-8695-ac008fd6df17"],
Cell[222473, 4525, 8846, 190, 998, "Code",ExpressionUUID->"3c4edd3f-8755-3644-a161-13c3d42a04e8"],
Cell[CellGroupData[{
Cell[231344, 4719, 253, 6, 50, "Code",ExpressionUUID->"1d3e0e6a-e1ea-cb45-9ada-8be9aa905534"],
Cell[CellGroupData[{
Cell[231622, 4729, 949, 17, 57, "Print",ExpressionUUID->"6fb31998-95c6-0d4d-b7e8-959274a34d24"],
Cell[232574, 4748, 569, 12, 22, "Print",ExpressionUUID->"3dd6455d-e66a-2440-964c-44e8a3d4f905"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233192, 4766, 253, 6, 50, "Code",ExpressionUUID->"12f16573-774d-274a-a516-f918a09fb324"],
Cell[CellGroupData[{
Cell[233470, 4776, 589, 12, 22, "Print",ExpressionUUID->"1753e32a-a30a-d644-8d83-98bbf657796e"],
Cell[234062, 4790, 823, 15, 57, "Print",ExpressionUUID->"c68c25df-1c68-9d4b-bc21-2f13d56e01b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234934, 4811, 284, 6, 50, "Code",ExpressionUUID->"add011b2-3674-6c45-8f21-395c57009b70"],
Cell[CellGroupData[{
Cell[235243, 4821, 243, 4, 22, "Print",ExpressionUUID->"57a40c69-05e9-5748-ac6e-2065a3858509"],
Cell[235489, 4827, 242, 4, 22, "Print",ExpressionUUID->"e58a5869-5b75-064e-b623-45a9dacf7167"]
}, Open  ]]
}, Open  ]],
Cell[235758, 4835, 406, 8, 55, "Text",ExpressionUUID->"78cc7485-40bf-654f-86d1-3176e0778e96"],
Cell[CellGroupData[{
Cell[236189, 4847, 1146, 32, 137, "Code",ExpressionUUID->"eb28a5be-5ca0-9649-b7f9-23e681d98fee"],
Cell[237338, 4881, 421, 11, 32, "Output",ExpressionUUID->"43e029ff-d672-fe4d-823b-daa8008eda77"],
Cell[237762, 4894, 465, 12, 32, "Output",ExpressionUUID->"8c61ad90-d47e-0c44-a5a8-6a58d39cf5d4"],
Cell[238230, 4908, 442, 12, 32, "Output",ExpressionUUID->"3caa0098-d113-6f48-865b-54aa9077585f"],
Cell[238675, 4922, 619, 16, 32, "Output",ExpressionUUID->"84087f00-e72d-834a-b71f-c5f2b4eeacd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239331, 4943, 1416, 42, 137, "Code",ExpressionUUID->"7acb9219-3ff3-cd4c-bd29-861e6a4b8de9"],
Cell[240750, 4987, 192, 4, 32, "Output",ExpressionUUID->"80b33078-1e54-fe49-9eb6-d7b8df3ef1e7"],
Cell[240945, 4993, 222, 5, 32, "Output",ExpressionUUID->"859f1694-ef3b-3947-9ed7-56b3413a3bd0"],
Cell[241170, 5000, 196, 4, 32, "Output",ExpressionUUID->"c3c3ee99-7c29-034a-818c-64e40d782e83"],
Cell[241369, 5006, 230, 5, 32, "Output",ExpressionUUID->"663e5384-112e-cd45-9dea-a6d4c4deb5ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241636, 5016, 1401, 42, 137, "Code",ExpressionUUID->"4df9db9b-a2ef-c745-87d1-88d8c52631c4"],
Cell[243040, 5060, 310, 9, 32, "Output",ExpressionUUID->"38911d8f-bb62-6b4b-8294-ef9200d9d046"],
Cell[243353, 5071, 598, 19, 32, "Output",ExpressionUUID->"6b3960ac-0f35-9f41-87b4-62881bdf122b"],
Cell[243954, 5092, 263, 6, 32, "Output",ExpressionUUID->"6b558ac8-abce-e74a-8bc3-b4e74017f3a9"],
Cell[244220, 5100, 301, 8, 32, "Output",ExpressionUUID->"8a07de6d-63f1-614a-a760-be1f251cfba0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244570, 5114, 164, 3, 53, "Subsection",ExpressionUUID->"cb235693-35c5-b841-a556-91d1a49a140a"],
Cell[244737, 5119, 294, 6, 55, "Text",ExpressionUUID->"c96fffd1-e861-4d4e-ba1d-79099759d4da"],
Cell[245034, 5127, 394, 7, 33, "Text",ExpressionUUID->"5596945b-f3e6-d14b-a3ab-3da3e2f525a7"],
Cell[CellGroupData[{
Cell[245453, 5138, 1539, 43, 120, "Code",ExpressionUUID->"a6e32f5d-ac5b-464b-a4cc-00e59ac6f602"],
Cell[246995, 5183, 290, 5, 22, "Print",ExpressionUUID->"b010fb43-326a-2b41-b32c-df21254884d8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

